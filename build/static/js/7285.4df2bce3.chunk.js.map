{"version":3,"file":"static/js/7285.4df2bce3.chunk.js","mappings":"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","sources":["pages/News/NestedPages/CreateNews/CreateNews.tsx","pages/News/NestedPages/CreateNews/index.ts","pages/News/components/CreateNewsForm.tsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Helmet from 'react-helmet';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { ErrorBoundary } from 'shared/components';\nimport CreateNewsForm from '../../components/CreateNewsForm';\n\nconst CreateRegularNews = () => {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"news-page -mt-5 pb-4\">\n\t\t\t\t<Helmet>\n\t\t\t\t\t<title>KENNEKT | Create News</title>\n\t\t\t\t\t<meta name=\"description\" content=\"KENNEKT Announcement\" />\n\t\t\t\t</Helmet>\n\t\t\t\t<h1 className=\"mb-2 text-2xl font-bold dark:text-white\">Create News</h1>\n\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t<Breadcrumbs aria-label=\"breadcrumb\">\n\t\t\t\t\t\t<Link to={`/news/news-list/`}>\n\t\t\t\t\t\t\t<span className=\"text-sm text-primary transition hover:text-primary-dark\">\n\t\t\t\t\t\t\t\tNews List\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Typography color=\"textPrimary\" className=\"!text-sm\">\n\t\t\t\t\t\t\tCreate news\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Breadcrumbs>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"uni-page__content\">\n\t\t\t\t\t<CreateNewsForm />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default function CreateRegularNewsWithErrorBoundary(props: any) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<CreateRegularNews {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import CreateNews from './CreateNews';\n\nexport default CreateNews;\n","/*\nDISCLAIMER: THIS COMPONENT ALMOST IS NOT TYPED. BECAUSE\nIT WAS COPIED FROM ACTUALLY TESTED AND WORKING OLD VERSION.\n I ALSO HAD INSUFFICIENT TIME TO MEET DEADLINES\n */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport EntityForm from 'modules/entity/forms';\nimport NewsFormElements from './NewsFormElements';\nimport { api, queryBuilder } from 'shared/services';\nimport { useHistory } from 'react-router-dom';\nimport get from 'lodash/get';\nimport { useNotistack, useRouter } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\nimport { formatNewsTime } from '../utils';\nimport dayjs from 'dayjs';\n\nconst keywords = [\n\t{ name: 'Reader First Name', code: '{reader_first_name}' },\n\t{ name: 'Reader Last Name', code: '{reader_last_name}' },\n\t{ name: 'Reader Company', code: '{business_company}' },\n\t{ name: 'Author First Name', code: '{author_first_name}' },\n\t{ name: 'Author Last Name', code: '{author_last_name}' },\n\t{ name: 'Author company', code: '{client_company}' }\n];\n\nconst frequencies = [\n\t{\n\t\tname: 'Daily',\n\t\tcode: 'DAILY'\n\t},\n\t{\n\t\tname: 'Weekly',\n\t\tcode: 'WEEKLY'\n\t},\n\t{\n\t\tname: 'Monthly',\n\t\tcode: 'MONTHLY'\n\t},\n\t{\n\t\tname: 'Yearly',\n\t\tcode: 'YEARLY'\n\t},\n\t{\n\t\tname: 'Quarterly',\n\t\tcode: 'QUARTERLY'\n\t}\n];\n\nconst statuses = [\n\t{\n\t\tvalue: 'ACTIVE',\n\t\tlabel: 'Active'\n\t},\n\t{\n\t\tlabel: 'On hold',\n\t\tvalue: 'ON_HOLD'\n\t}\n];\nfunction CreateNewsForm() {\n\tconst [timezone, setTimeZone] = useState({});\n\tconst offset = -new Date().getTimezoneOffset();\n\tconst history = useHistory();\n\tconst { params } = useRouter();\n\tconst campaignId = parseInt((params as { campaignId: string })?.campaignId);\n\tconst { companyId } = useAppState();\n\tconst { showNotification } = useNotistack();\n\n\tconst defaultStartTime = useMemo(() => dayjs().hour(8).minute(0).format(), []);\n\tconst defaultEndTime = useMemo(() => dayjs().format(), []);\n\n\tuseEffect(() => {\n\t\t(async function () {\n\t\t\ttry {\n\t\t\t\tconst { data } = await api.request.get(\n\t\t\t\t\tqueryBuilder(`/timezones/current_timezone/${offset}/`, {})\n\t\t\t\t);\n\t\t\t\tsetTimeZone(data);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t})();\n\t}, []);\n\n\treturn (\n\t\t<EntityForm.Main\n\t\t\tentity=\"news\"\n\t\t\tname={`${campaignId ? `AllNews-${campaignId}` : 'AllRegularNews'}`}\n\t\t\turl={`/${companyId}/notifications/`}\n\t\t\tprimaryKey=\"id\"\n\t\t\tsendAsFormData={false}\n\t\t\tnormalizeData={(data: any) => data}\n\t\t\tprependData\n\t\t\tmethod=\"post\"\n\t\t\tfields={[\n\t\t\t\t{\n\t\t\t\t\tname: 'subject',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalue: '',\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'body',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalue: '',\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'files',\n\t\t\t\t\tvalue: [],\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'object'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'type',\n\t\t\t\t\tvalue: 'staff',\n\t\t\t\t\tonSubmitValue: (value) => (campaignId ? 'campaign' : value),\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'status',\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tvalue: 'ACTIVE',\n\t\t\t\t\t\tlabel: 'Active'\n\t\t\t\t\t},\n\t\t\t\t\tonSubmitValue: (value) => value.value,\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'open_for_cases',\n\t\t\t\t\tvalue: false,\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'frequency',\n\t\t\t\t\tvalue: 'ONE_TIME',\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'timezone',\n\t\t\t\t\tonSubmitValue: (value) => ({ id: get(value, 'id') }),\n\t\t\t\t\tvalue: timezone,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'object'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'campaign',\n\t\t\t\t\tvalue: null,\n\t\t\t\t\tonSubmitValue: () => (campaignId ? Number(campaignId) : undefined),\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'start_time',\n\t\t\t\t\tvalue: defaultStartTime,\n\t\t\t\t\tonSubmitValue: () => formatNewsTime(dayjs().hour(8).minute(0).format()),\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'end_time',\n\t\t\t\t\tvalue: defaultEndTime,\n\t\t\t\t\tonSubmitValue: () => formatNewsTime(dayjs().format()),\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'event_times',\n\t\t\t\t\tonSubmitValue: (value, values) => ((values as any).frequency === 'EVENTS' ? value : null),\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'object'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'department',\n\t\t\t\t\tonSubmitValue: (value) => get(value, 'id'),\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'object'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'sub_department',\n\t\t\t\t\tonSubmitValue: (value) => get(value, 'id'),\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'object'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'staff_departments',\n\t\t\t\t\tvalue: null,\n\t\t\t\t\tonSubmitValue: (value) => value?.reduce((acc: any, curr: any) => [...acc, curr.id], []),\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'object'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'staff_sub_departments',\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'object'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'categories',\n\t\t\t\t\tvalue: null,\n\t\t\t\t\tonSubmitValue: (value) => value?.reduce((acc: any, curr: any) => [...acc, curr.id], []),\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'object'\n\t\t\t\t}\n\t\t\t]}\n\t\t\tonSuccess={(data, resetForm) => {\n\t\t\t\tresetForm();\n\t\t\t\tif (campaignId || data?.receiver.campaign) {\n\t\t\t\t\thistory.push(`/news/campaigns/view/${campaignId}`);\n\t\t\t\t} else {\n\t\t\t\t\thistory.push(`/news/news-list`);\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonError={(error, resetForm): any => {\n\t\t\t\tconst errorText = error?.response?.data?.message || 'Something went wrong';\n\n\t\t\t\tshowNotification({ message: errorText, variant: 'error' });\n\t\t\t}}\n\t\t>\n\t\t\t{({ isSubmitting, values, setFieldValue, errors, setFieldError }) => {\n\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\tconsole.log('news form values', values);\n\t\t\t\t\tconsole.log('errors news create', errors);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<NewsFormElements\n\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\tkeywords={keywords}\n\t\t\t\t\t\tfrequencies={frequencies}\n\t\t\t\t\t\tstatuses={statuses}\n\t\t\t\t\t\tcampaignId={campaignId}\n\t\t\t\t\t\tsetFieldError={setFieldError}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityForm.Main>\n\t);\n}\n\nexport default CreateNewsForm;\n"],"names":["CreateRegularNews","className","Helmet","name","content","Breadcrumbs","to","Typography","color","CreateNewsForm","props","keywords","code","frequencies","statuses","value","label","useState","timezone","setTimeZone","offset","Date","getTimezoneOffset","history","useHistory","params","useRouter","campaignId","parseInt","companyId","useAppState","showNotification","useNotistack","defaultStartTime","useMemo","dayjs","hour","minute","format","defaultEndTime","useEffect","api","queryBuilder","data","console","error","entity","url","primaryKey","sendAsFormData","normalizeData","prependData","method","fields","required","onSubmitKey","type","onSubmitValue","id","get","Number","undefined","formatNewsTime","values","frequency","reduce","acc","curr","onSuccess","resetForm","receiver","campaign","push","onError","errorText","response","message","variant","isSubmitting","setFieldValue","errors","setFieldError"],"sourceRoot":""}