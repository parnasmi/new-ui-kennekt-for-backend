{"version":3,"file":"static/js/7494.4ceb7e1c.chunk.js","mappings":"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","sources":["pages/ClientsManagement/components/ClientGroups/ClientGroupElements.tsx","pages/ClientsManagement/components/InviteClientFormFooter.tsx","pages/ClientsManagement/components/LinkenClientRoles/LinkedRoleFormElements.tsx","pages/ClientsManagement/components/ClientName.tsx","pages/ClientsManagement/components/ClientInviteFormSwitch.tsx","pages/ClientsManagement/components/IndividualFormElements.tsx","pages/ClientsManagement/components/IndividualInviteForm.tsx","pages/ClientsManagement/components/InvitationByCSV.tsx","pages/ClientsManagement/components/BusinessFormElements.tsx","pages/ClientsManagement/components/BusinessInviteForm.tsx","pages/ClientsManagement/components/InviteClientForm.tsx","pages/ClientsManagement/context/ClientsManagementContext.tsx","pages/ClientsManagement/hooks/useClientList.ts","pages/ClientsManagement/hooks/useClientManagement.ts","pages/ClientsManagement/hooks/useLinkedClient.ts","pages/ClientsManagement/hooks/useClientRequests.ts","pages/ClientsManagement/hooks/useIncomingRequests.ts","pages/ClientsManagement/hooks/useOutgoingRequests.ts","pages/ClientsManagement/hooks/useClientGroups.ts","pages/ClientsManagement/components/ClientsSearchQuery.tsx","pages/ClientsManagement/components/ClientGroups/CreateClientGroup.tsx","pages/ClientsManagement/components/LinkenClientRoles/CreateLinkedClientRole.tsx","pages/ClientsManagement/ClientsManagement.tsx","pages/ClientsManagement/index.tsx","pages/ClientsManagement/utils/getClientAvatartUrl.ts","pages/ClientsManagement/utils/getClientName.ts"],"sourcesContent":["import React from 'react';\nimport AsyncSelectJs from 'shared/components/Fields/AsyncSelectJs';\nimport { KntTwilioStyle } from 'shared/services';\nimport { Field } from 'formik';\nimport { useAppState } from 'shared/state';\nimport { KntInputField } from 'shared/components/Fields';\nimport { InviteClientFormFooter } from '../InviteClientFormFooter';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tisSubmitting: boolean;\n\tonSuccess: () => void;\n\tisEditing?: boolean;\n};\nfunction ClientGroupElements({ isSubmitting, onSuccess, isEditing = false }: Props) {\n\tconst { companyId } = useAppState();\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<div className=\"w-full\">\n\t\t\t<Field\n\t\t\t\tlabel={t('client_group_name')}\n\t\t\t\tlabelClasses=\"ml-6 text-xs font-light text-kgrey-welcome mb-2 block\"\n\t\t\t\tname=\"name\"\n\t\t\t\tcomponent={KntInputField}\n\t\t\t\tplaceholder={t('type_group_name')}\n\t\t\t\trequired\n\t\t\t\tautoComplete=\"off\"\n\t\t\t/>\n\t\t\t<>\n\t\t\t\t<label className=\"ml-6 mb-2 block text-xs font-light text-kgrey-welcome\">\n\t\t\t\t\t<span>{t('search_client')}:</span>\n\t\t\t\t</label>\n\t\t\t\t<div className=\"react-select-dropdown\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tcomponent={AsyncSelectJs}\n\t\t\t\t\t\tcustomStylesProps={KntTwilioStyle}\n\t\t\t\t\t\tname=\"clients\"\n\t\t\t\t\t\tplaceholder={t('select_clients')}\n\t\t\t\t\t\toptionLabel=\"name\"\n\t\t\t\t\t\toptionValue=\"id\"\n\t\t\t\t\t\tisSearchable\n\t\t\t\t\t\tisMulti\n\t\t\t\t\t\tisClearable\n\t\t\t\t\t\tloadOptionsKey=\"results\"\n\t\t\t\t\t\tloadOptionsUrl={`/${companyId}/client_companies/`}\n\t\t\t\t\t\tloadOptionsParams={(search: string) => ({\n\t\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\t\tsearch\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t\t<div className=\"flex-center-between mt-8\">\n\t\t\t\t<InviteClientFormFooter\n\t\t\t\t\tonSuccess={onSuccess}\n\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\tsubmitText={!isEditing ? t('create_client_group') : t('edit_client_group')}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ClientGroupElements;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tonSuccess: () => void;\n\tisSubmitting: boolean;\n\tdisableOptions?: boolean;\n\tsubmitText?: string;\n};\n\nexport function InviteClientFormFooter({\n\tonSuccess,\n\tisSubmitting,\n\tdisableOptions = false,\n\tsubmitText = 'Invite Client'\n}: Props) {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<>\n\t\t\t<button\n\t\t\t\tclassName={\n\t\t\t\t\t'mr-5 rounded-lg border border-kgrey  px-5 py-2 text-kgrey transition hover:border-primary hover:text-primary focus:ring focus:ring-primary'\n\t\t\t\t}\n\t\t\t\tonClick={onSuccess}\n\t\t\t\ttype=\"button\"\n\t\t\t>\n\t\t\t\t{t('cancel')}\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName={\n\t\t\t\t\t'rounded-lg bg-primary-dark px-5 py-2 text-white ' +\n\t\t\t\t\t'border border-transparent hover:border-primary-dark' +\n\t\t\t\t\t' transition-colors hover:bg-white ' +\n\t\t\t\t\t'hover:text-primary-dark focus:ring focus:ring-primary disabled:pointer-events-none disabled:opacity-50 dark:hover:bg-primary-300 dark:hover:text-white dark:focus:ring-primary-300'\n\t\t\t\t}\n\t\t\t\ttype=\"submit\"\n\t\t\t\tdisabled={isSubmitting || disableOptions}\n\t\t\t>\n\t\t\t\t{submitText}\n\t\t\t</button>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport { Field } from 'formik';\nimport { KntInputField } from 'shared/components/Fields';\nimport { InviteClientFormFooter } from '../InviteClientFormFooter';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tisSubmitting: boolean;\n\tonSuccess: () => void;\n\tisEditing?: boolean;\n};\nfunction LinkedRoleFormElements({ isSubmitting, onSuccess, isEditing = false }: Props) {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<div className=\"w-full\">\n\t\t\t<Field\n\t\t\t\tlabel={t('client_group_name')}\n\t\t\t\tlabelClasses=\"ml-6 text-xs font-light text-kgrey-welcome mb-2 block\"\n\t\t\t\tname=\"name\"\n\t\t\t\tcomponent={KntInputField}\n\t\t\t\tplaceholder={t('type_group_name')}\n\t\t\t\trequired\n\t\t\t\tautoComplete=\"off\"\n\t\t\t/>\n\t\t\t<Field\n\t\t\t\tlabel={t('role_description')}\n\t\t\t\tname=\"description\"\n\t\t\t\tlabelClasses=\"ml-6 text-xs font-light text-kgrey-welcome mb-2 block\"\n\t\t\t\tcomponent={KntInputField}\n\t\t\t\tplaceholder={t('role_description')}\n\t\t\t\ttype=\"textarea\"\n\t\t\t/>\n\t\t\t<div className=\"flex-center-between mt-8\">\n\t\t\t\t<InviteClientFormFooter\n\t\t\t\t\tonSuccess={onSuccess}\n\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\tsubmitText={!isEditing ? t('create_linked_role') : t('edit_linked_role')}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default LinkedRoleFormElements;\n","import { ClientCompanyIcon, ClientCompanyOwner } from '../../../shared/typings/client.types';\nimport { getClientAvatarUrl, getClientName } from '../utils';\nimport { Avatar } from '../../../shared/components/Elements';\nimport React from 'react';\nimport clsx from 'clsx';\n\ntype ClientNameProps = {\n\tis_individual: boolean;\n\ticon: ClientCompanyIcon;\n\tname: string;\n\towner: ClientCompanyOwner;\n\tnameClassNames?: string;\n};\n\nexport function ClientName({\n\tis_individual,\n\ticon,\n\tname,\n\towner,\n\tnameClassNames = ''\n}: ClientNameProps) {\n\tconst clientName = getClientName(is_individual, name, owner);\n\treturn (\n\t\t<div className=\"flex items-center\">\n\t\t\t<Avatar\n\t\t\t\tsrc={getClientAvatarUrl(is_individual, icon, owner)}\n\t\t\t\tletter={clientName[0]}\n\t\t\t\talt={clientName}\n\t\t\t\tclassName={'bg-primary-200'}\n\t\t\t/>\n\t\t\t<span className={clsx('mx-2 overflow-hidden text-ellipsis', nameClassNames)}>\n\t\t\t\t{clientName}\n\t\t\t</span>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { ClientType } from './InviteClientForm';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tclientType: ClientType;\n\tsetClientType: any;\n};\n\nexport function ClientInviteFormSwitch({ clientType, setClientType }: Props) {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<>\n\t\t\t<div className=\"switch-toggle-custom switch-ios mb-4 font-poppins\">\n\t\t\t\t<input\n\t\t\t\t\tid=\"client\"\n\t\t\t\t\tname=\"casetype\"\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tdefaultChecked={clientType === 'Individual'}\n\t\t\t\t\ttabIndex={-1}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor=\"client\" onClick={() => setClientType('Individual')}>\n\t\t\t\t\t{t('individual')}\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"Staff\"\n\t\t\t\t\tname=\"casetype\"\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tdefaultChecked={clientType === 'Business'}\n\t\t\t\t\ttabIndex={-1}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor=\"Staff\" onClick={() => setClientType('Business')}>\n\t\t\t\t\t{t('business')}\n\t\t\t\t</label>\n\t\t\t\t<a />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","import React, { useEffect } from 'react';\nimport { FormHeader, Loader } from '../../../shared/components';\nimport { Field } from 'formik';\nimport { KntInputField, KntPhoneInputField } from '../../../shared/components/Fields';\nimport { InviteClientFormFooter } from './InviteClientFormFooter';\nimport { t } from 'i18next';\n\ntype Props = {\n\tSwitchClient?: React.ReactNode;\n\tisSubmitting: boolean;\n\tsetFieldValue: any;\n\tvalues: any;\n\tonSuccess: () => void;\n\tresetForm: any;\n\tisEditing?: boolean;\n\tformValuesSetter?: (fieldValues: string[]) => void;\n};\n\nexport function IndividualFormElements({\n\tSwitchClient = null,\n\tisSubmitting,\n\tsetFieldValue,\n\tvalues,\n\tonSuccess,\n\tresetForm,\n\tisEditing = false,\n\tformValuesSetter = () => null\n}: Props) {\n\tuseEffect(() => {\n\t\tif (!isEditing) {\n\t\t\tconst checkableFields = ['first_name', 'email', 'last_name', 'mobile'];\n\n\t\t\tconst fieldValues = Object.keys(values).filter((field) => {\n\t\t\t\tconst fieldHasValue = Array.isArray(values[field]) ? values[field].length : values[field];\n\t\t\t\tif (fieldHasValue && checkableFields.includes(field)) {\n\t\t\t\t\treturn values[field];\n\t\t\t\t}\n\t\t\t});\n\t\t\tformValuesSetter(fieldValues);\n\t\t}\n\t}, [values]);\n\n\treturn (\n\t\t<div>\n\t\t\t<FormHeader\n\t\t\t\tresetForm={resetForm}\n\t\t\t\ttitle={isEditing ? t('edit_individual_client') : t('invite_individual_client')}\n\t\t\t\tisEditing={isEditing}\n\t\t\t/>\n\t\t\t{SwitchClient ? <div>{SwitchClient}</div> : null}\n\t\t\t<>\n\t\t\t\t<Field\n\t\t\t\t\tlabel={t('first_name')}\n\t\t\t\t\tlabelClasses=\"ml-6 text-xs font-light text-kgrey-welcome mb-2 block\"\n\t\t\t\t\tname=\"first_name\"\n\t\t\t\t\tcomponent={KntInputField}\n\t\t\t\t\tplaceholder={t('enter_firstname')}\n\t\t\t\t\trequired\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tlabel={t('last_name')}\n\t\t\t\t\tlabelClasses=\"ml-6 text-xs font-light text-kgrey-welcome mb-2 block\"\n\t\t\t\t\tname=\"last_name\"\n\t\t\t\t\tcomponent={KntInputField}\n\t\t\t\t\tplaceholder={t('enter_lastname')}\n\t\t\t\t\trequired\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tlabel={t('email')}\n\t\t\t\t\tlabelClasses=\"ml-6 text-xs font-light text-kgrey-welcome mb-2 block\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tcomponent={KntInputField}\n\t\t\t\t\tplaceholder={t('enter_email')}\n\t\t\t\t\trequired\n\t\t\t\t\tdisabled={isEditing}\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tlabel={t('phone_number')}\n\t\t\t\t\tname=\"mobile\"\n\t\t\t\t\tcomponent={KntPhoneInputField}\n\t\t\t\t\tplaceholder={t('enter_phone')}\n\t\t\t\t\tenableSearch\n\t\t\t\t\trequired\n\t\t\t\t\tlabelClasses=\"!text-xs !ml-6 !text-kgrey-welcome\"\n\t\t\t\t\tonChangeHandler={setFieldValue}\n\t\t\t\t/>\n\t\t\t\t<div className={'flex items-center justify-end'}>\n\t\t\t\t\t{isSubmitting && <Loader tiled withOverlay />}\n\t\t\t\t\t<InviteClientFormFooter\n\t\t\t\t\t\tonSuccess={onSuccess}\n\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\tsubmitText={isEditing ? t('edit_client') : t('invite_client')}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { IndividualFormElements } from './IndividualFormElements';\nimport EntityForm from '../../../modules/entity/forms';\nimport { useAppState } from '../../../shared/state';\nimport { useNotistack } from '../../../shared/hooks';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tSwitchClient: React.ReactNode;\n\tonSuccess: () => void;\n\tinitialIndividualClientCompany: {\n\t\tid: number;\n\t};\n\n\tformValuesSetter: (fieldValues: string[]) => void;\n\thasToShowGuard: () => void;\n};\n\nexport function IndividualInviteForm({\n\tSwitchClient,\n\tonSuccess,\n\tinitialIndividualClientCompany,\n\tformValuesSetter,\n\thasToShowGuard\n}: Props) {\n\tconst { t } = useTranslation();\n\tconst { companyId } = useAppState();\n\tconst { showNotification } = useNotistack();\n\n\treturn (\n\t\t<>\n\t\t\t<EntityForm.Main\n\t\t\t\tentity=\"clients\"\n\t\t\t\tname=\"AllClients\"\n\t\t\t\turl={`/${companyId}/clients/`}\n\t\t\t\tmethod=\"post\"\n\t\t\t\tprimaryKey=\"id\"\n\t\t\t\tsendAsFormData={false}\n\t\t\t\t// normalizeData={(data: any) => data}\n\t\t\t\t// prependData\n\t\t\t\tfields={[\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'first_name',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'last_name',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'email',\n\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalue: ''\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'mobile',\n\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalue: ''\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'is_individual',\n\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\tvalue: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t}\n\t\t\t\t]}\n\t\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\t\tshowNotification({ message: t('client_invitation_success') });\n\t\t\t\t\tonSuccess();\n\t\t\t\t\tresetForm();\n\t\t\t\t}}\n\t\t\t\tonError={(error, resetForm): any => {\n\t\t\t\t\tconsole.log(error, 'Individual client form');\n\n\t\t\t\t\tconst errorData = error && error.response;\n\t\t\t\t\tlet message = errorData?.data?.message || t('something_went_wrong');\n\n\t\t\t\t\tif (errorData.status === 400 && message.match('Already connected')) {\n\t\t\t\t\t\tmessage = t('client_already_connected');\n\t\t\t\t\t}\n\n\t\t\t\t\tshowNotification({ message, variant: 'error' });\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({ isSubmitting, values, setFieldValue, resetForm }) => {\n\t\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\t\tconsole.log('individual invite create values', values);\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<IndividualFormElements\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\t\tSwitchClient={SwitchClient}\n\t\t\t\t\t\t\tonSuccess={hasToShowGuard}\n\t\t\t\t\t\t\tresetForm={resetForm}\n\t\t\t\t\t\t\tformValuesSetter={formValuesSetter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</EntityForm.Main>\n\t\t</>\n\t);\n}\n","import React, { useState } from 'react';\nimport { Button } from '../../../shared/components/Elements';\nimport Upload from 'rc-upload';\nimport config from '../../../config';\nimport { useAppState } from '../../../shared/state';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Papa from 'papaparse';\nimport { HtmlParser } from 'shared/components';\nimport isEmpty from 'lodash/isEmpty';\nimport { LinearProgress } from '@material-ui/core';\nimport { csvFileValidator, csvTools, parseNAsyncValidate } from 'shared/services';\nimport { useNotistack } from '../../../shared/hooks';\nimport { useTranslation } from 'react-i18next';\n\nconst useStylesProgress = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t\t'& > * + *': {\n\t\t\tmarginTop: theme.spacing(2)\n\t\t}\n\t}\n}));\n\nconst { clientCSVConfig } = csvTools;\n\ntype Props = {\n\tonSuccess: () => void;\n};\n\nexport function InvitationByCsv({ onSuccess }: Props) {\n\tconst { t } = useTranslation();\n\tconst { companyId } = useAppState();\n\tconst { token } = useAuth();\n\n\tconst [loadingImage, setLoadingImage] = useState(false);\n\tconst [fileName, setFileName] = useState(null);\n\tconst [csvData, setCsvData] = useState([]);\n\tconst [csvPrimaryCheckError, setCsvPrimaryCheckError] = useState<null | string>(null);\n\n\tconst { showNotification } = useNotistack();\n\n\tconst classesProgress = useStylesProgress();\n\tconst CSVConfig = clientCSVConfig;\n\tconst configHeaderLength = 7;\n\tconst moreTxt =\n\t\t'There are more than required columns in your csv file. Please remove redundant columns. Download sample csv file and edit it accordingly.';\n\tconst lessTxt =\n\t\t'There are missing columns in your csv file. Please add appropriate columns. Download sample csv file and edit it accordingly.';\n\n\tconst removeFile = () => {\n\t\tsetFileName(null);\n\t};\n\n\tconst fileOnStart = (file: any) => {\n\t\tsetLoadingImage(true);\n\t\tsetFileName(file.name);\n\t\tif (file.name.slice(-3).toLowerCase() === 'csv') {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tPapa.parse(file, {\n\t\t\t\t\tcomplete: (parsedOutput) => {\n\t\t\t\t\t\tconst { data } = parsedOutput;\n\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\tconst dataColumnLength = data[0].length;\n\n\t\t\t\t\t\t//Check if there required length of columns. If it passes than we validate fields.\n\t\t\t\t\t\tif (dataColumnLength === configHeaderLength) {\n\t\t\t\t\t\t\t// we do csv validation\n\t\t\t\t\t\t\tcsvFileValidator(file, CSVConfig).then((csvData) => {\n\t\t\t\t\t\t\t\tif (isEmpty(csvData.inValidMessages)) {\n\t\t\t\t\t\t\t\t\t//Before uploading the csv we must validate email through\n\t\t\t\t\t\t\t\t\t// backend whether users are already client in the business\n\t\t\t\t\t\t\t\t\tcsvData &&\n\t\t\t\t\t\t\t\t\t\tparseNAsyncValidate({\n\t\t\t\t\t\t\t\t\t\t\tcsvData,\n\t\t\t\t\t\t\t\t\t\t\tcompanyId,\n\t\t\t\t\t\t\t\t\t\t\tresolve,\n\t\t\t\t\t\t\t\t\t\t\treject,\n\t\t\t\t\t\t\t\t\t\t\tsetCsvData,\n\t\t\t\t\t\t\t\t\t\t\ttype: 'client',\n\t\t\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\t\t\tsetLoadingImage\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//Show csv error messages in UI\n\t\t\t\t\t\t\t\t\tsetCsvData(\n\t\t\t\t\t\t\t\t\t\tcsvData.inValidMessages\n\t\t\t\t\t\t\t\t\t\t\t.map((message: any) =>\n\t\t\t\t\t\t\t\t\t\t\t\tmessage.startsWith('<div')\n\t\t\t\t\t\t\t\t\t\t\t\t\t? message\n\t\t\t\t\t\t\t\t\t\t\t\t\t: `<div className=\"red\">${message}</div>`\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t.join('')\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\treject(new Error('Invalid csv file'));\n\t\t\t\t\t\t\t\t\tsetLoadingImage(false);\n\t\t\t\t\t\t\t\t\tremoveFile();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (dataColumnLength > configHeaderLength) {\n\t\t\t\t\t\t\t\tsetCsvPrimaryCheckError(moreTxt);\n\t\t\t\t\t\t\t\tsetCsvData([]);\n\t\t\t\t\t\t\t} else if (dataColumnLength < configHeaderLength) {\n\t\t\t\t\t\t\t\tsetCsvPrimaryCheckError(lessTxt);\n\t\t\t\t\t\t\t\tsetCsvData([]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treject(new Error('Invalid csv file'));\n\t\t\t\t\t\t\tremoveFile();\n\t\t\t\t\t\t\tsetLoadingImage(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tsetLoadingImage(false);\n\t\t\tshowNotification({\n\t\t\t\tmessage: 'Invalid file type. Download please sample of file csv',\n\t\t\t\tvariant: 'error'\n\t\t\t});\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tconst fileOnSuccess = (file: any) => {\n\t\tsetLoadingImage(false);\n\t\tshowNotification({ message: 'Successfully uploaded and invited', variant: 'success' });\n\t\t//Close popup\n\t\tonSuccess();\n\t};\n\n\treturn (\n\t\t<div className=\"mb-4\">\n\t\t\t<div className=\"mb-4 flex items-center justify-between\">\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://kennekt.com/files/kennekt_client.csv\"\n\t\t\t\t\tdownload\n\t\t\t\t\tclassName=\"text-sm text-primary transition hover:text-primary-dark\"\n\t\t\t\t>\n\t\t\t\t\t{t('download_sample_csv')}\n\t\t\t\t</a>\n\t\t\t\t<div className=\"uploader\">\n\t\t\t\t\t<Upload\n\t\t\t\t\t\taccept=\".csv\"\n\t\t\t\t\t\tclassName=\"upload-file-styles\"\n\t\t\t\t\t\taction={`${config.API_ROOT}/${companyId}/import-clients/`}\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\tbeforeUpload={fileOnStart}\n\t\t\t\t\t\tonSuccess={fileOnSuccess}\n\t\t\t\t\t\theaders={{\n\t\t\t\t\t\t\tAuthorization: 'Token ' + token\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button variant=\"outlined\" aria-label=\"file-attach\" className=\"mr-5\">\n\t\t\t\t\t\t\t<PublishIcon /> {t('upload_csv_file')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Upload>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"file-name\">\n\t\t\t\t{fileName !== null ? (\n\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t<p className=\"\">{fileName}</p>\n\t\t\t\t\t\t<CloseIcon\n\t\t\t\t\t\t\tonClick={removeFile}\n\t\t\t\t\t\t\tclassName=\"cursor-pointer transition hover:text-primary\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t<div className=\"linear-loader mt-2\">\n\t\t\t\t{loadingImage ? (\n\t\t\t\t\t<div className={classesProgress.root}>\n\t\t\t\t\t\t<LinearProgress className=\"loading-file\" />\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t<div className=\"csv-error-display mt-2\">\n\t\t\t\t{!isEmpty(csvData) && (\n\t\t\t\t\t<div className=\"my-5\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{/*@ts-ignore*/}\n\t\t\t\t\t\t\t<HtmlParser text={csvData} />\n\t\t\t\t\t\t\t<div className=\"text-sm text-kred-pink\">\n\t\t\t\t\t\t\t\t<strong>Please correct and upload again</strong>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"primary-error-check\">\n\t\t\t\t{csvPrimaryCheckError && (\n\t\t\t\t\t<div className=\"mb-5\">\n\t\t\t\t\t\t<div className=\"mt-5 text-sm text-kred-pink\">\n\t\t\t\t\t\t\t<strong>{csvPrimaryCheckError}</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { FormHeader, Loader } from '../../../shared/components';\nimport { KntInputField, KntPhoneInputField } from '../../../shared/components/Fields';\nimport { Field } from 'formik';\nimport { InviteClientFormFooter } from './InviteClientFormFooter';\nimport { InvitationByCsv } from './InvitationByCSV';\nimport { IOSSwitch } from '../../../shared/components/Elements/Fields/SwitchComp';\nimport { FormControlLabel } from '../../../shared/components/Elements';\nimport { useSwitch } from '../../../shared/hooks';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tSwitchClient?: React.ReactNode;\n\tisSubmitting: boolean;\n\tsetFieldValue: any;\n\tonSuccess: () => void;\n\tresetForm: any;\n\tisEditing?: boolean;\n};\n\nexport function BusinessFormElements({\n\tSwitchClient = null,\n\tisSubmitting,\n\tsetFieldValue,\n\tonSuccess,\n\tresetForm,\n\tisEditing = false\n}: Props) {\n\tconst { t } = useTranslation();\n\tconst { checked, handleChange } = useSwitch({ csv: false });\n\n\treturn (\n\t\t<div>\n\t\t\t<FormHeader\n\t\t\t\tresetForm={resetForm}\n\t\t\t\ttitle={`${isEditing ? 'Edit' : 'Invite'} Business Client`}\n\t\t\t\tisEditing={isEditing}\n\t\t\t/>\n\t\t\t{SwitchClient ? <div>{SwitchClient}</div> : null}\n\t\t\t<>\n\t\t\t\t{!isEditing ? (\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tcontrol={<IOSSwitch checked={checked.csv} onChange={handleChange} name=\"csv\" />}\n\t\t\t\t\t\tlabel={t('invite_client_by_uploading_csv')}\n\t\t\t\t\t\tclassName=\"mb-4\"\n\t\t\t\t\t\tclasses={{ label: '!text-xs font-light text-kgrey-welcome' }}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t{/*Invite business clients via csv */}\n\t\t\t\t{checked.csv ? (\n\t\t\t\t\t<InvitationByCsv onSuccess={onSuccess} />\n\t\t\t\t) : (\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabel={t('enter_new_business_name')}\n\t\t\t\t\t\tlabelClasses=\"ml-6 text-xs font-light text-kgrey-welcome mb-2 block\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tcomponent={KntInputField}\n\t\t\t\t\t\tplaceholder={t('type_business_name')}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{isEditing ? (\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabel={t('phone')}\n\t\t\t\t\t\tname=\"phone\"\n\t\t\t\t\t\tcomponent={KntPhoneInputField}\n\t\t\t\t\t\tplaceholder={t('enter_company_phone_number')}\n\t\t\t\t\t\tenableSearch\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tlabelClasses=\"!text-xs !ml-6 !text-kgrey-welcome\"\n\t\t\t\t\t\tonChangeHandler={setFieldValue}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<div className={'mt-8 flex items-center justify-end'}>\n\t\t\t\t\t{isSubmitting && <Loader tiled withOverlay />}\n\t\t\t\t\t<InviteClientFormFooter\n\t\t\t\t\t\tonSuccess={onSuccess}\n\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\tdisableOptions={checked.csv}\n\t\t\t\t\t\tsubmitText={isEditing ? t('edit_client') : t('invite_client')}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { BusinessFormElements } from './BusinessFormElements';\nimport EntityForm from '../../../modules/entity/forms';\nimport { useAppState } from '../../../shared/state';\nimport { useNotistack, useWhiteModal } from '../../../shared/hooks';\nimport { InviteCreateNewBusinessForm } from './InviteCreateNewBusinessForm';\n\ntype Props = {\n\tSwitchClient: React.ReactNode;\n\tonSuccess: () => void;\n};\n\nexport function BusinessInviteForm({ SwitchClient, onSuccess }: Props) {\n\tconst { companyId } = useAppState();\n\tconst { showNotification } = useNotistack();\n\tconst { WhiteModal, modalHandler, open } = useWhiteModal();\n\n\treturn (\n\t\t<EntityForm.Main\n\t\t\tentity=\"clients\"\n\t\t\tname=\"AllClients\"\n\t\t\turl={`/${companyId}/clients/`}\n\t\t\tmethod=\"post\"\n\t\t\tprimaryKey=\"id\"\n\t\t\tsendAsFormData={false}\n\t\t\t// normalizeData={(data: any) => data}\n\t\t\t// prependData\n\t\t\tfields={[\n\t\t\t\t{\n\t\t\t\t\tname: 'id',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalue: null,\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'is_individual',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalue: false,\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'name',\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalue: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'first_name',\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'last_name',\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'mobile',\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'email',\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t]}\n\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\tshowNotification({ message: 'Success! Waiting for client accepting..' });\n\t\t\t\tonSuccess();\n\t\t\t\tresetForm();\n\t\t\t}}\n\t\t\tonError={(error, resetForm): any => {\n\t\t\t\tif (error?.response?.data?.message === 'Company does not exists\\n') {\n\t\t\t\t\tshowNotification({ message: 'Client does not exist', variant: 'error' });\n\t\t\t\t\tmodalHandler();\n\t\t\t\t}\n\t\t\t\tif (error?.response?.data?.message !== 'Company does not exists\\n') {\n\t\t\t\t\tshowNotification({ message: error?.response?.data?.message, variant: 'error' });\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{({ isSubmitting, values, setFieldValue, resetForm }) => {\n\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\tconsole.log('business invite create values', values);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<BusinessFormElements\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\t\tSwitchClient={SwitchClient}\n\t\t\t\t\t\t\tonSuccess={onSuccess}\n\t\t\t\t\t\t\tresetForm={resetForm}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/*Create New Client if Business Client does not exist*/}\n\t\t\t\t\t\t{/*<WhiteModal handleModalOpen={modalHandler} open={open} maxWidth={446}>\n\t\t\t\t\t\t\t<InviteCreateNewBusinessForm\n\t\t\t\t\t\t\t\tbusinessName={values.name}\n\t\t\t\t\t\t\t\tonSuccess={modalHandler}\n\t\t\t\t\t\t\t\tparentOnSuccess={onSuccess}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</WhiteModal>*/}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityForm.Main>\n\t);\n}\n","import React, { useState } from 'react';\nimport { ClientInviteFormSwitch } from './ClientInviteFormSwitch';\nimport { IndividualInviteForm } from './IndividualInviteForm';\nimport { BusinessInviteForm } from './BusinessInviteForm';\nimport { useAxios } from '../../../shared/hooks';\nimport { useAppState } from '../../../shared/state';\nimport { Loader } from '../../../shared/components';\n\ntype Props = {\n\tmodalHandler: () => void;\n\thasToShowGuard: () => void;\n\tformValuesSetter: (fieldValues: string[]) => void;\n};\n\nexport type ClientType = 'Individual' | 'Business';\n\nexport type IndividualNotActiveCompany = {\n\tid: number;\n};\n\nexport function InviteClientForm({ modalHandler, hasToShowGuard, formValuesSetter }: Props) {\n\tconst [clientType, setClientType] = useState<ClientType>('Individual');\n\tconst { companyId } = useAppState();\n\n\tconst { response: initialIndividualClientCompany, loading } = useAxios({\n\t\turl: `/${companyId}/my/company/clients/`,\n\t\tmethod: 'post',\n\t\tvalues: {\n\t\t\tis_individual: true,\n\t\t\tstatus: 'Not Active'\n\t\t},\n\t\tinitialLoad: true\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t{clientType === 'Individual' && initialIndividualClientCompany ? (\n\t\t\t\t<IndividualInviteForm\n\t\t\t\t\tSwitchClient={\n\t\t\t\t\t\t<ClientInviteFormSwitch clientType={clientType} setClientType={setClientType} />\n\t\t\t\t\t}\n\t\t\t\t\tonSuccess={modalHandler}\n\t\t\t\t\thasToShowGuard={modalHandler}\n\t\t\t\t\tinitialIndividualClientCompany={\n\t\t\t\t\t\tinitialIndividualClientCompany as IndividualNotActiveCompany\n\t\t\t\t\t}\n\t\t\t\t\tformValuesSetter={formValuesSetter}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<BusinessInviteForm\n\t\t\t\t\tSwitchClient={\n\t\t\t\t\t\t<ClientInviteFormSwitch clientType={clientType} setClientType={setClientType} />\n\t\t\t\t\t}\n\t\t\t\t\tonSuccess={modalHandler}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{loading ? <Loader tiled /> : null}\n\t\t</div>\n\t);\n}\n","import React, { createContext, useReducer, useContext, useCallback } from 'react';\n\ntype ContextType = {\n\tsearchQuery: string;\n\tsetSearchQuery: (query: string | null) => void;\n\tisStaff: string;\n\tsetIsStaff: (type: string) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const ClientsManagementContext = createContext<ContextType>(null!);\ntype setSearchQuery = {\n\ttype: 'SET_SEARCH_QUERY';\n\tpayload: string | null;\n};\n\ntype setIsStaff = {\n\ttype: 'SET_IS_STAFF';\n\tpayload: string;\n};\n\ntype StateType = {\n\tsearchQuery: string | null;\n\tisStaff: string;\n};\n\ntype Actions = setSearchQuery | setIsStaff;\n\nconst reducer = (state: StateType, action: Actions): StateType => {\n\tswitch (action.type) {\n\t\tcase 'SET_SEARCH_QUERY': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchQuery: action.payload\n\t\t\t};\n\t\t}\n\t\tcase 'SET_IS_STAFF': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisStaff: action.payload\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport function ClientsManagementContextProvider({\n\tchildren\n}: React.PropsWithChildren<Record<string, unknown>>) {\n\tconst [state, dispatch] = useReducer(reducer, { searchQuery: null, isStaff: 'true' });\n\n\tconst setSearchQuery = useCallback((query: string | null) => {\n\t\tdispatch({ type: 'SET_SEARCH_QUERY', payload: query });\n\t}, []);\n\tconst setIsStaff = useCallback((type: string) => {\n\t\tdispatch({ type: 'SET_IS_STAFF', payload: type });\n\t}, []);\n\n\t// eslint-disable-next-line react/jsx-no-constructed-context-values\n\tconst contextValues = {\n\t\tsearchQuery: state.searchQuery,\n\t\tisStaff: state.isStaff,\n\t\tsetSearchQuery,\n\t\tsetIsStaff\n\t} as ContextType;\n\n\treturn (\n\t\t<ClientsManagementContext.Provider value={contextValues}>\n\t\t\t{children}\n\t\t</ClientsManagementContext.Provider>\n\t);\n}\n\nexport const useClientsManagementContext = () => {\n\tconst clientsManagementContext = useContext(ClientsManagementContext);\n\n\tif (!clientsManagementContext)\n\t\tthrow new Error(\n\t\t\t'useClientsManagementContext must be used within the ClientsManagementContextProvider'\n\t\t);\n\treturn clientsManagementContext;\n};\n","import { ClientCompany } from '../../../shared/typings/client.types';\nimport {\n\tuseEntityActionPopup,\n\tuseNotistack,\n\tusePageChangeAfterEntityDelete\n} from '../../../shared/hooks';\nimport { useAppState } from '../../../shared/state';\nimport { formRequest } from '../../../modules/entity/actions';\nimport { useDispatch } from 'react-redux';\n\nexport function useClientList() {\n\tconst { companyId } = useAppState();\n\tconst dispatch = useDispatch();\n\tconst { showNotification } = useNotistack();\n\n\tconst { forwardToPreviousPage } = usePageChangeAfterEntityDelete({\n\t\tpageKey: 'page',\n\t\tentity: 'clients',\n\t\tentityName: 'AllClients'\n\t});\n\n\tconst {\n\t\tvisible: deleteVisible,\n\t\tshowVisible: showDeleteVisible,\n\t\tloading: deleteLoading,\n\t\ttoggleLoading: toggleDeleteLoading,\n\t\tclosePopup: closeDeletePopup\n\t} = useEntityActionPopup<ClientCompany>();\n\n\tconst {\n\t\tvisible: editVisible,\n\t\tshowVisible: showEditVisible,\n\t\tclosePopup: closeEditPopup\n\t} = useEntityActionPopup<ClientCompany>();\n\n\tconst handleClientDelete = (client: ClientCompany) => {\n\t\t//show loader\n\t\ttoggleDeleteLoading();\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'clients',\n\t\t\t\tname: `AllClients`,\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: `/${companyId}/client_companies/remove/${client.id}/`,\n\t\t\t\tdeleteData: true,\n\t\t\t\tid: client.id,\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tshowNotification({ message: 'Successfully deleted', variant: 'success' });\n\t\t\t\t\t\tforwardToPreviousPage();\n\t\t\t\t\t},\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {\n\t\t\t\t\t\ttoggleDeleteLoading();\n\t\t\t\t\t\tcloseDeletePopup();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id',\n\t\t\t\tvalues: {}\n\t\t\t})\n\t\t);\n\t};\n\n\treturn {\n\t\tdeleteLoading,\n\t\thandleClientDelete,\n\t\tshowDeleteVisible,\n\t\tcloseDeletePopup,\n\t\tdeleteVisible,\n\t\teditVisible,\n\t\tshowEditVisible,\n\t\tcloseEditPopup\n\t};\n}\n","import React, { useEffect, useState } from 'react';\nimport { useRouter, useUnreadCaseTab } from 'shared/hooks';\n\nexport function useClientManagement() {\n\tconst [primeTab, setPrimeTab] = React.useState(0);\n\tconst [pageName, setPageName] = React.useState('Clients List');\n\n\tconst [inviteVisible, setInviteVisible] = useState(false);\n\tconst [groupVisible, setGroupVisible] = useState(false);\n\tconst [linkedRoleVisible, setLinkedRoleVisible] = useState(false);\n\n\tconst { location, match } = useRouter();\n\tconst { url, path } = match;\n\tconst { unreadCasesQuantity, isHidden } = useUnreadCaseTab('Clients Management');\n\n\tconst handleChangePrime = (\n\t\tevent: React.ChangeEvent<Record<string, unknown>>,\n\t\tnewValue: number\n\t) => {\n\t\tsetPrimeTab(newValue);\n\t};\n\n\tconst toggleInviteForm = () => setInviteVisible((prev) => !prev);\n\tconst toggleGroupForm = () => setGroupVisible((prev) => !prev);\n\tconst toggleLinkedRoleForm = () => setLinkedRoleVisible((prev) => !prev);\n\n\tconst togglePopup = (btnText: string) => {\n\t\tswitch (btnText) {\n\t\t\tcase 'clients': {\n\t\t\t\treturn toggleInviteForm;\n\t\t\t}\n\t\t\tcase 'categories': {\n\t\t\t\treturn toggleGroupForm;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn () => {};\n\t\t}\n\t};\n\n\t//Just to setup tab active tab indication\n\tuseEffect(() => {\n\t\tconst locationSplitterArray = location.pathname.split('/').filter(Boolean).filter(String);\n\t\tconst nestedPageType = locationSplitterArray[locationSplitterArray.length - 1] || '';\n\n\t\t(() => {\n\t\t\tswitch (nestedPageType) {\n\t\t\t\tcase 'clients': {\n\t\t\t\t\tsetPrimeTab(0);\n\t\t\t\t\tsetPageName('Clients List');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'categories': {\n\t\t\t\t\tsetPrimeTab(1);\n\t\t\t\t\tsetPageName('Client Groups');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'incoming': {\n\t\t\t\t\tsetPrimeTab(2);\n\t\t\t\t\tsetPageName('Client Requests');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'outgoing': {\n\t\t\t\t\tsetPrimeTab(2);\n\t\t\t\t\tsetPageName('Client Requests');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'roles': {\n\t\t\t\t\tsetPrimeTab(3);\n\t\t\t\t\tsetPageName('Linked Client Roles');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t})();\n\t}, [location]);\n\n\treturn {\n\t\tprimeTab,\n\t\tpageName,\n\t\turl,\n\t\tpath,\n\t\tunreadCasesQuantity,\n\t\tisHidden,\n\t\thandleChangePrime,\n\t\tinviteVisible,\n\t\ttoggleInviteForm,\n\t\tgroupVisible,\n\t\ttoggleGroupForm,\n\t\ttogglePopup,\n\t\ttoggleLinkedRoleForm,\n\t\tlinkedRoleVisible\n\t};\n}\n","import { LinkedClientEntity, LinkedClientRoleInList } from 'shared/typings/client.types';\nimport { formRequest } from 'modules/entity/actions';\nimport { useDispatch } from 'react-redux';\nimport { useEntityActionPopup, useNotistack, usePageChangeAfterEntityDelete } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\n\nexport function useLinkedClient() {\n\tconst dispatch = useDispatch();\n\tconst { showNotification } = useNotistack();\n\tconst { companyId } = useAppState();\n\n\tconst {\n\t\tvisible: deleteVisible,\n\t\tshowVisible: showDeleteVisible,\n\t\tloading: deleteLoading,\n\t\ttoggleLoading: toggleDeleteLoading,\n\t\tclosePopup: closeDeletePopup\n\t} = useEntityActionPopup<LinkedClientEntity>();\n\n\tconst { forwardToPreviousPage } = usePageChangeAfterEntityDelete({\n\t\tpageKey: 'page',\n\t\tentity: 'linked-clients',\n\t\tentityName: 'AllLinkedClients'\n\t});\n\n\tconst handleLinkedClientDelete = (linkedClient: LinkedClientEntity) => {\n\t\ttoggleDeleteLoading();\n\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'linked-clients',\n\t\t\t\tname: 'AllLinkedClients',\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: `/${companyId}/my/company/linked_client/${linkedClient.id}/`,\n\t\t\t\tdeleteData: true,\n\t\t\t\tid: linkedClient.id,\n\t\t\t\tvalues: {},\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tforwardToPreviousPage();\n\t\t\t\t\t\tshowNotification({ message: 'Successfully deleted!', variant: 'success' });\n\t\t\t\t\t},\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {\n\t\t\t\t\t\ttoggleDeleteLoading();\n\t\t\t\t\t\tcloseDeletePopup();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id'\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleRoleUpdate = (role: LinkedClientRoleInList, client: LinkedClientEntity) => {\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'linked-clients',\n\t\t\t\tname: 'AllLinkedClients',\n\t\t\t\tmethod: 'patch',\n\t\t\t\turl: `/${companyId}/my/company/linked_client/${client.id}/`,\n\t\t\t\tupdateData: true,\n\t\t\t\tid: client.id,\n\t\t\t\tvalues: { role: role.id },\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tshowNotification({ message: 'Role is successfully changed!', variant: 'success' });\n\t\t\t\t\t},\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id',\n\t\t\t\tnormalizeData: (data) => data\n\t\t\t})\n\t\t);\n\t};\n\n\treturn {\n\t\thandleRoleUpdate,\n\t\tdeleteVisible,\n\t\tshowDeleteVisible,\n\t\tdeleteLoading,\n\t\ttoggleDeleteLoading,\n\t\tcloseDeletePopup,\n\t\thandleLinkedClientDelete\n\t};\n}\n","import React, { useEffect } from 'react';\nimport { useRouter } from '../../../shared/hooks';\n\nexport function useClientRequests() {\n\tconst [tab, setTab] = React.useState(0);\n\n\tconst { location, match } = useRouter();\n\tconst { url, path } = match;\n\t// const { isStaff, setIsStaff } = useClientsManagementContext();\n\n\tconst handleChangeTab = (event: React.ChangeEvent<Record<string, unknown>>, newValue: number) => {\n\t\tsetTab(newValue);\n\t};\n\n\t//Just to setup tab active tab indication\n\tuseEffect(() => {\n\t\tconst locationSplitterArray = location.pathname.split('/');\n\t\tconst nestedPageType = locationSplitterArray[locationSplitterArray.length - 1] || '';\n\n\t\t(() => {\n\t\t\tswitch (nestedPageType) {\n\t\t\t\tcase 'incoming': {\n\t\t\t\t\tsetTab(0);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'outgoing': {\n\t\t\t\t\tsetTab(1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t})();\n\t}, [location]);\n\n\treturn {\n\t\turl,\n\t\tpath,\n\t\thandleChangeTab,\n\t\ttab\n\t};\n}\n","import {\n\tuseEntityActionPopup,\n\tuseLoadAll,\n\tuseNotistack,\n\tusePageChangeAfterEntityDelete\n} from 'shared/hooks';\nimport { IncomingRequestType } from 'shared/typings/requests.type';\nimport { useDispatch } from 'react-redux';\nimport { formRequest } from '../../../modules/entity/actions';\nimport { useAppState } from '../../../shared/state';\n\nexport function useIncomingRequests() {\n\tconst dispatch = useDispatch();\n\tconst { companyId } = useAppState();\n\tconst { reloadEntityAll } = useLoadAll();\n\n\tconst {\n\t\tvisible: rejectVisible,\n\t\tshowVisible: showRejectVisible,\n\t\tloading: rejectLoading,\n\t\ttoggleLoading: toggleRejectLoading,\n\t\tclosePopup: closeRejectPopup\n\t} = useEntityActionPopup<IncomingRequestType>();\n\n\tconst {\n\t\tvisible: editVisible,\n\t\tshowVisible: showEditVisible,\n\t\tloading: editLoading,\n\t\ttoggleLoading: toggleEditLoading,\n\t\tclosePopup: closeEditPopup\n\t} = useEntityActionPopup<IncomingRequestType>();\n\n\tconst { showNotification } = useNotistack();\n\n\tconst { forwardToPreviousPage } = usePageChangeAfterEntityDelete({\n\t\tpageKey: 'page',\n\t\tentity: 'incoming-request',\n\t\tentityName: 'AllIncoming-Requests'\n\t});\n\n\tconst handleStatusChange = (id: number, type: string) => {\n\t\tconst isReject = type === 'reject';\n\t\tisReject ? toggleRejectLoading() : toggleEditLoading();\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'linked-clients',\n\t\t\t\tname: 'AllLinkedClients',\n\t\t\t\tmethod: 'post',\n\t\t\t\turl: `/${companyId}/company_connection_requests/${id}/${type}/`,\n\t\t\t\tid,\n\t\t\t\tvalues: {},\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tconst notifText = isReject ? 'Successfully Rejected' : 'Successfully Accepted';\n\n\t\t\t\t\t\t//Refetch Incoming Requests\n\t\t\t\t\t\treloadEntityAll({\n\t\t\t\t\t\t\tentity: 'incoming-request',\n\t\t\t\t\t\t\tname: 'AllIncoming-Requests',\n\t\t\t\t\t\t\turl: `/${companyId}/company_connection_requests/`,\n\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\tpage: 1,\n\t\t\t\t\t\t\t\tlimit: 10\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tcloseRejectPopup();\n\t\t\t\t\t\tcloseEditPopup();\n\t\t\t\t\t\tforwardToPreviousPage();\n\t\t\t\t\t\tshowNotification({ message: notifText, variant: 'success' });\n\t\t\t\t\t},\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {\n\t\t\t\t\t\ttype === 'reject' ? toggleRejectLoading() : toggleEditLoading();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id'\n\t\t\t})\n\t\t);\n\t};\n\n\treturn {\n\t\trejectVisible,\n\t\tshowRejectVisible,\n\t\trejectLoading,\n\t\ttoggleRejectLoading,\n\t\tcloseRejectPopup,\n\t\teditVisible,\n\t\tshowEditVisible,\n\t\teditLoading,\n\t\ttoggleEditLoading,\n\t\tcloseEditPopup,\n\t\thandleStatusChange\n\t};\n}\n","import {\n\tuseEntityActionPopup,\n\tuseLoadAll,\n\tuseNotistack,\n\tusePageChangeAfterEntityDelete\n} from 'shared/hooks';\nimport { OutgoingRequestType } from 'shared/typings/requests.type';\nimport { useDispatch } from 'react-redux';\nimport { formRequest } from '../../../modules/entity/actions';\nimport { useAppState } from '../../../shared/state';\nimport get from 'lodash/get';\n\nexport function useOutgoingRequests() {\n\tconst dispatch = useDispatch();\n\tconst { companyId } = useAppState();\n\tconst { reloadEntityAll } = useLoadAll();\n\n\tconst {\n\t\tvisible: deleteVisible,\n\t\tshowVisible: showDeleteVisible,\n\t\tloading: deleteLoading,\n\t\ttoggleLoading: toggleDeleteLoading,\n\t\tclosePopup: closeDeletePopup\n\t} = useEntityActionPopup<OutgoingRequestType>();\n\n\tconst {\n\t\tvisible: resendVisible,\n\t\tshowVisible: showResendVisible,\n\t\tloading: resendLoading,\n\t\ttoggleLoading: toggleResendLoading,\n\t\tclosePopup: closeResendPopup\n\t} = useEntityActionPopup<OutgoingRequestType>();\n\n\tconst { showNotification } = useNotistack();\n\n\tconst { forwardToPreviousPage } = usePageChangeAfterEntityDelete({\n\t\tpageKey: 'page',\n\t\tentity: 'outgoing-request',\n\t\tentityName: 'AllOutgoing-Requests'\n\t});\n\n\tconst handleDeleteRequest = (request: OutgoingRequestType) => {\n\t\ttoggleDeleteLoading();\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'outgoing-request',\n\t\t\t\tname: 'AllOutgoing-Requests',\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: `/${companyId}/my_company_connection_requests/${request.id}/`,\n\t\t\t\tdeleteData: true,\n\t\t\t\tid: request.id,\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tshowNotification({ message: 'Successfully deleted', variant: 'success' });\n\t\t\t\t\t\tforwardToPreviousPage();\n\t\t\t\t\t\tcloseDeletePopup();\n\t\t\t\t\t},\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {\n\t\t\t\t\t\ttoggleDeleteLoading();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id',\n\t\t\t\tvalues: {}\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleResendRequest = (request: OutgoingRequestType) => {\n\t\ttoggleResendLoading();\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'outgoing',\n\t\t\t\tname: 'AllOutgoing',\n\t\t\t\tmethod: 'patch',\n\t\t\t\turl: `/${companyId}/my/company/clients/${get(\n\t\t\t\t\trequest,\n\t\t\t\t\t'requested_company.id'\n\t\t\t\t)}/resend_invitation/`,\n\t\t\t\tvalues: {},\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t//Refetch Incoming Requests\n\t\t\t\t\t\treloadEntityAll({\n\t\t\t\t\t\t\tentity: 'outgoing-request',\n\t\t\t\t\t\t\tname: 'AllOutgoing-Requests',\n\t\t\t\t\t\t\turl: `/${companyId}/my_company_connection_requests/`,\n\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\tpage: 1,\n\t\t\t\t\t\t\t\tlimit: 10\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tcloseResendPopup();\n\n\t\t\t\t\t\tshowNotification({ message: 'Successfully resended', variant: 'success' });\n\t\t\t\t\t},\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {\n\t\t\t\t\t\ttoggleResendLoading();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id'\n\t\t\t})\n\t\t);\n\t};\n\n\treturn {\n\t\tdeleteVisible,\n\t\tshowDeleteVisible,\n\t\tdeleteLoading,\n\t\ttoggleDeleteLoading,\n\t\tcloseDeletePopup,\n\t\tresendVisible,\n\t\tshowResendVisible,\n\t\tresendLoading,\n\t\ttoggleResendLoading,\n\t\tcloseResendPopup,\n\t\thandleDeleteRequest,\n\t\thandleResendRequest\n\t};\n}\n","import { useAppState } from 'shared/state';\nimport { useDispatch } from 'react-redux';\nimport { useEntityActionPopup, useNotistack, usePageChangeAfterEntityDelete } from 'shared/hooks';\nimport { ClientGroupEntity } from 'shared/typings/client.types';\nimport { formRequest } from '../../../modules/entity/actions';\n\nexport function useClientGroups() {\n\tconst { companyId } = useAppState();\n\tconst dispatch = useDispatch();\n\tconst { showNotification } = useNotistack();\n\tconst {\n\t\tvisible: deleteVisible,\n\t\tshowVisible: showDeleteVisible,\n\t\tloading: deleteLoading,\n\t\ttoggleLoading: toggleDeleteLoading,\n\t\tclosePopup: closeDeletePopup\n\t} = useEntityActionPopup<ClientGroupEntity>();\n\n\tconst {\n\t\tvisible: editVisible,\n\t\tshowVisible: showEditVisible,\n\t\tclosePopup: closeEditPopup\n\t} = useEntityActionPopup<ClientGroupEntity>();\n\n\tconst { forwardToPreviousPage } = usePageChangeAfterEntityDelete({\n\t\tpageKey: 'page',\n\t\tentity: 'clientsGroups',\n\t\tentityName: 'AllClientsGroups'\n\t});\n\n\tconst handleClientGroupDelete = (clientGroup: ClientGroupEntity) => {\n\t\t//show loader\n\t\ttoggleDeleteLoading();\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'clientsGroups',\n\t\t\t\tname: `AllClientsGroups`,\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: `/${companyId}/categories/${clientGroup.id}/`,\n\t\t\t\tdeleteData: true,\n\t\t\t\tid: clientGroup.id,\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tshowNotification({ message: 'Successfully deleted', variant: 'success' });\n\t\t\t\t\t\tforwardToPreviousPage();\n\t\t\t\t\t},\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {\n\t\t\t\t\t\ttoggleDeleteLoading();\n\t\t\t\t\t\tcloseDeletePopup();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id',\n\t\t\t\tvalues: {}\n\t\t\t})\n\t\t);\n\t};\n\n\tconst deleteClientGroupHandler = () => () => handleClientGroupDelete(deleteVisible!);\n\n\treturn {\n\t\tdeleteClientGroupHandler,\n\t\tdeleteVisible,\n\t\tshowDeleteVisible,\n\t\tdeleteLoading,\n\t\tcloseDeletePopup,\n\t\tshowEditVisible,\n\t\tcloseEditPopup,\n\t\teditVisible\n\t};\n}\n","import React from 'react';\nimport { CgSearch } from 'react-icons/cg';\nimport { useClientsManagementContext } from '../context/ClientsManagementContext';\nimport { useTranslation } from 'react-i18next';\n\nexport function ClientsSearchQuery() {\n\tconst { searchQuery, setSearchQuery } = useClientsManagementContext();\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<div className=\"group-sidebar__search relative\">\n\t\t\t<input\n\t\t\t\ttype=\"search\"\n\t\t\t\tvalue={searchQuery}\n\t\t\t\tclassName={\n\t\t\t\t\t'group-sidebar__search-input w-full border-b outline-none md:w-36 ' +\n\t\t\t\t\t'border-kgrey-border-solid dark:border-white dark:text-white ' +\n\t\t\t\t\t' pl-7 transition focus:border-primary dark:focus:border-primary' +\n\t\t\t\t\t' placeholder-[rgba(45, 45, 45, 0.3)] pt-2 pb-2 dark:bg-kdark'\n\t\t\t\t}\n\t\t\t\tplaceholder={t('search')}\n\t\t\t\tonChange={(e) => setSearchQuery(e.target.value)}\n\t\t\t/>\n\t\t\t<div className=\"absolute top-1/2 left-0 -translate-y-1/2\">\n\t\t\t\t<div className=\"text-kgrey\">\n\t\t\t\t\t<CgSearch />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { useAppState } from 'shared/state';\nimport { useNotistack } from 'shared/hooks';\nimport EntityForm from 'modules/entity/forms';\nimport { FormHeader, Loader } from 'shared/components';\nimport ClientGroupElements from './ClientGroupElements';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tonSuccess: () => void;\n};\n\nexport function CreateClientGroup({ onSuccess }: Props) {\n\tconst { companyId } = useAppState();\n\tconst { showNotification } = useNotistack();\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<div>\n\t\t\t<>\n\t\t\t\t<EntityForm.Main\n\t\t\t\t\tentity=\"clientsGroups\"\n\t\t\t\t\tname=\"AllClientsGroups\"\n\t\t\t\t\turl={`/${companyId}/categories/`}\n\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\tprimaryKey=\"id\"\n\t\t\t\t\tsendAsFormData={false}\n\t\t\t\t\tnormalizeData={(data: any) => data}\n\t\t\t\t\tprependData\n\t\t\t\t\tfields={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'clients',\n\t\t\t\t\t\t\t// onSubmitValue: (value) => get(value, 'id'),\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\tvalue: []\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\trequired: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\t\t\tshowNotification({ message: 'Successfully created..' });\n\t\t\t\t\t\tonSuccess();\n\t\t\t\t\t\tresetForm();\n\t\t\t\t\t}}\n\t\t\t\t\tonError={(error, resetForm): any => {\n\t\t\t\t\t\tconst errorText = error?.response?.data?.message || 'Something went wrong';\n\t\t\t\t\t\tshowNotification({ message: errorText, variant: 'error' });\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ isSubmitting, values, resetForm }) => {\n\t\t\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\t\t\tconsole.log('create client group  values', values);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<FormHeader resetForm={resetForm} title={t('create_client_group')} />\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className={'flex items-center'}>\n\t\t\t\t\t\t\t\t\t\t<ClientGroupElements isSubmitting={isSubmitting} onSuccess={onSuccess} />\n\t\t\t\t\t\t\t\t\t\t{isSubmitting && <Loader tiled withOverlay />}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityForm.Main>\n\t\t\t</>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { useAppState } from 'shared/state';\nimport { useNotistack } from 'shared/hooks';\nimport EntityForm from 'modules/entity/forms';\nimport { FormHeader, Loader } from 'shared/components';\nimport LinkedRoleFormElements from './LinkedRoleFormElements';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tonSuccess: () => void;\n};\n\nexport function CreateLinkedClientRole({ onSuccess }: Props) {\n\tconst { companyId } = useAppState();\n\tconst { showNotification } = useNotistack();\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<div>\n\t\t\t<>\n\t\t\t\t<EntityForm.Main\n\t\t\t\t\tentity=\"linkedClientsRole\"\n\t\t\t\t\tname=\"AllLinkedClientsRole\"\n\t\t\t\t\turl={`/${companyId}/my/company/client/roles/`}\n\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\tprimaryKey=\"id\"\n\t\t\t\t\tsendAsFormData={false}\n\t\t\t\t\tnormalizeData={(data: any) => data}\n\t\t\t\t\tprependData\n\t\t\t\t\tfields={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\trequired: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\trequired: false\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\t\t\tshowNotification({ message: 'Successfully created..' });\n\t\t\t\t\t\tonSuccess();\n\t\t\t\t\t\tresetForm();\n\t\t\t\t\t}}\n\t\t\t\t\tonError={(error, resetForm): any => {\n\t\t\t\t\t\tconst errorText = error?.response?.data?.message || 'Something went wrong';\n\t\t\t\t\t\tshowNotification({ message: errorText, variant: 'error' });\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ isSubmitting, values, resetForm }) => {\n\t\t\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\t\t\tconsole.log('create client group  values', values);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<FormHeader resetForm={resetForm} title={t('create_linked_client_role')} />\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className={'flex items-center'}>\n\t\t\t\t\t\t\t\t\t\t<LinkedRoleFormElements isSubmitting={isSubmitting} onSuccess={onSuccess} />\n\t\t\t\t\t\t\t\t\t\t{isSubmitting && <Loader tiled withOverlay />}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityForm.Main>\n\t\t\t</>\n\t\t</div>\n\t);\n}\n","import React, { lazy, Suspense, useCallback } from 'react';\nimport { ConfirmModal, CustomMuiTabs, ErrorBoundary, Loader } from 'shared/components';\nimport { Helmet } from 'react-helmet';\nimport { ClientsSearchQuery } from './components/ClientsSearchQuery';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { ClientsManagementContextProvider } from './context/ClientsManagementContext';\nimport { useClientManagement } from './hooks';\nimport { SimpleBtn, WhiteModal } from 'shared/components/Elements';\nimport { InviteClientForm } from './components';\nimport { StandardPageLayout } from 'shared/layouts';\nimport { CreateClientGroup } from './components/ClientGroups';\nimport { CreateLinkedClientRole } from './components/LinkenClientRoles';\nimport { useAppState } from '../../shared/state';\nimport { useFormGuard, useRouter } from '../../shared/hooks';\nimport { useTranslation } from 'react-i18next';\n\nconst ClientsList = lazy(() => import('./NestedPages/ClientsList'));\nconst ClientsGroups = lazy(() => import('./NestedPages/ClientsGroups'));\nconst ClientsRequests = lazy(() => import('./NestedPages/ClientsRequests'));\nconst LinkedClientsRoles = lazy(() => import('./NestedPages/LinkedClientsRoles'));\nconst ClientDetails = lazy(() => import('./NestedPages/ClientDetails'));\nconst ClientGroupDetails = lazy(() => import('./NestedPages/ClientGroupDetails'));\n\nfunction a11yProps(index: number) {\n\treturn {\n\t\tid: `simple-tabpanel-${index}`,\n\t\t'aria-controls': `simple-tab-${index}`\n\t};\n}\n\nfunction ClientsManagementInner() {\n\tconst { t } = useTranslation();\n\tconst {\n\t\tprimeTab,\n\t\tpageName,\n\t\turl,\n\t\tpath,\n\t\tunreadCasesQuantity,\n\t\tisHidden,\n\t\thandleChangePrime,\n\t\tinviteVisible,\n\t\ttoggleInviteForm,\n\t\tgroupVisible,\n\t\ttoggleGroupForm,\n\t\ttoggleLinkedRoleForm,\n\t\tlinkedRoleVisible\n\t} = useClientManagement();\n\n\tconst { isPermitted } = useAppState();\n\n\tconst { formValues, guardOpen, setGuardOpen, formValuesSetter } = useFormGuard();\n\tconst { location } = useRouter();\n\n\tconst hasToShowSearchQuery = !location.pathname.includes('request');\n\n\tconst confirmToggleHandler = useCallback(() => {\n\t\tsetGuardOpen((prev: boolean) => !prev);\n\t}, []);\n\tconst confirmModalHandler = useCallback(() => {\n\t\tsetGuardOpen(false);\n\t\tformValuesSetter([]);\n\t\ttoggleInviteForm();\n\t}, [inviteVisible]);\n\n\tconst hasToShowGuard = useCallback(() => {\n\t\tif (formValues.length) {\n\t\t\tsetGuardOpen(true);\n\t\t\treturn;\n\t\t}\n\n\t\ttoggleInviteForm();\n\t}, [formValues]);\n\n\tconst onPopupClose = () => {\n\t\tif (formValues.length) {\n\t\t\tsetGuardOpen(true);\n\t\t\treturn;\n\t\t}\n\t\ttoggleInviteForm();\n\t};\n\n\treturn (\n\t\t<StandardPageLayout>\n\t\t\t<div className=\"flex min-h-full max-w-full flex-grow flex-col lg:p-4\">\n\t\t\t\t{(!isHidden || unreadCasesQuantity === 0) && (\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<title>{`KENNEKT | ${pageName}`}</title>\n\t\t\t\t\t</Helmet>\n\t\t\t\t)}\n\t\t\t\t<div className=\"mb-5 flex items-center justify-between\">\n\t\t\t\t\t<div className=\"flex w-full flex-wrap items-center justify-between\">\n\t\t\t\t\t\t<h2 className=\"py-4 text-xl font-bold dark:text-white md:text-3xl\">\n\t\t\t\t\t\t\t{t('client_management')}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<div className=\"flex w-full items-center md:w-auto\">\n\t\t\t\t\t\t\t{hasToShowSearchQuery && <ClientsSearchQuery />}\n\t\t\t\t\t\t\t{primeTab === 0 ? (\n\t\t\t\t\t\t\t\t<SimpleBtn disabled={!isPermitted} onClick={toggleInviteForm}>\n\t\t\t\t\t\t\t\t\t{t('new_client')}\n\t\t\t\t\t\t\t\t</SimpleBtn>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t{primeTab === 1 ? (\n\t\t\t\t\t\t\t\t<SimpleBtn disabled={!isPermitted} onClick={toggleGroupForm}>\n\t\t\t\t\t\t\t\t\t{t('new_client_group')}\n\t\t\t\t\t\t\t\t</SimpleBtn>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t{primeTab === 3 ? (\n\t\t\t\t\t\t\t\t<SimpleBtn disabled={!isPermitted} onClick={toggleLinkedRoleForm}>\n\t\t\t\t\t\t\t\t\t{t('new_linked_client_role')}\n\t\t\t\t\t\t\t\t</SimpleBtn>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<WhiteModal handleModalOpen={onPopupClose} open={inviteVisible} maxWidth={446}>\n\t\t\t\t\t\t\t\t<InviteClientForm\n\t\t\t\t\t\t\t\t\thasToShowGuard={hasToShowGuard}\n\t\t\t\t\t\t\t\t\tformValuesSetter={formValuesSetter}\n\t\t\t\t\t\t\t\t\tmodalHandler={toggleInviteForm}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t<WhiteModal handleModalOpen={toggleGroupForm} open={groupVisible} maxWidth={446}>\n\t\t\t\t\t\t\t\t<CreateClientGroup onSuccess={toggleGroupForm} />\n\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\thandleModalOpen={toggleLinkedRoleForm}\n\t\t\t\t\t\t\t\topen={linkedRoleVisible}\n\t\t\t\t\t\t\t\tmaxWidth={446}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CreateLinkedClientRole onSuccess={toggleLinkedRoleForm} />\n\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\tfeatureHandler={confirmModalHandler}\n\t\t\t\t\t\t\t\tisOpen={guardOpen}\n\t\t\t\t\t\t\t\ttoggleHandler={confirmToggleHandler}\n\t\t\t\t\t\t\t\ttitle={t('cancel_unsaved_changes_confirmation')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"prime-tabs-clients overflow-x-auto\">\n\t\t\t\t\t<div className=\"prime-tabs\">\n\t\t\t\t\t\t<CustomMuiTabs.Tabs\n\t\t\t\t\t\t\troundedTop\n\t\t\t\t\t\t\tvalue={primeTab}\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tonChange={handleChangePrime}\n\t\t\t\t\t\t\taria-label=\"simple tabs\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CustomMuiTabs.Tab\n\t\t\t\t\t\t\t\tlabel={t('all_clients')}\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto={`${url}/clients`}\n\t\t\t\t\t\t\t\t{...a11yProps(0)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CustomMuiTabs.Tab\n\t\t\t\t\t\t\t\tlabel={t('clients_group')}\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto={`${url}/categories`}\n\t\t\t\t\t\t\t\t{...a11yProps(1)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CustomMuiTabs.Tab\n\t\t\t\t\t\t\t\tlabel={t('requests')}\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto={`${url}/requests/incoming`}\n\t\t\t\t\t\t\t\t{...a11yProps(2)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CustomMuiTabs.Tab\n\t\t\t\t\t\t\t\tlabel={t('linked_client_role')}\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto={`${url}/roles`}\n\t\t\t\t\t\t\t\t{...a11yProps(3)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</CustomMuiTabs.Tabs>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"relative flex max-w-full flex-grow flex-col\">\n\t\t\t\t\t<div className=\"relative flex-grow\">\n\t\t\t\t\t\t<Suspense fallback={<Loader tiled />}>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path={`${path}/clients/`} component={ClientsList} />\n\t\t\t\t\t\t\t\t<Route exact path={`${path}/categories/`} component={ClientsGroups} />\n\t\t\t\t\t\t\t\t<Route exact path={`${path}/requests/incoming/`} component={ClientsRequests} />\n\t\t\t\t\t\t\t\t<Route exact path={`${path}/requests/outgoing/`} component={ClientsRequests} />\n\t\t\t\t\t\t\t\t<Route exact path={`${path}/roles/`} component={LinkedClientsRoles} />\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath={`${path}/categories/:clientGroupId`}\n\t\t\t\t\t\t\t\t\tcomponent={ClientGroupDetails}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Route exact path={`${path}/clients/:clientId`} component={ClientDetails} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StandardPageLayout>\n\t);\n}\n\nexport function ClientsManagement() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<ClientsManagementContextProvider>\n\t\t\t\t<ClientsManagementInner />\n\t\t\t</ClientsManagementContextProvider>\n\t\t</ErrorBoundary>\n\t);\n}\n","import { ClientsManagement } from './ClientsManagement';\nexport default ClientsManagement;\n","import { ClientCompanyIcon, ClientCompanyOwner } from '../../../shared/typings/client.types';\n\nexport const getClientAvatarUrl = (\n\tis_individual: boolean,\n\ticon: ClientCompanyIcon,\n\towner: ClientCompanyOwner\n) => {\n\treturn is_individual ? owner?.avatar?.thumbnail_150 : icon?.thumbnail_150;\n};\n","import { ClientCompanyOwner } from '../../../shared/typings/client.types';\n\nexport const getClientName = (is_individual: boolean, name: string, owner: ClientCompanyOwner) => {\n\treturn is_individual ? (owner ? `${owner?.first_name} ${owner?.last_name}` : name) : name;\n};\n"],"names":["isSubmitting","onSuccess","isEditing","companyId","useAppState","t","useTranslation","className","label","labelClasses","name","component","KntInputField","placeholder","required","autoComplete","AsyncSelectJs","customStylesProps","KntTwilioStyle","optionLabel","optionValue","isSearchable","isMulti","isClearable","loadOptionsKey","loadOptionsUrl","loadOptionsParams","search","extra","submitText","InviteClientFormFooter","disableOptions","onClick","type","disabled","ClientName","is_individual","icon","owner","nameClassNames","clientName","getClientName","src","getClientAvatarUrl","letter","alt","clsx","ClientInviteFormSwitch","clientType","setClientType","id","defaultChecked","tabIndex","htmlFor","IndividualFormElements","SwitchClient","setFieldValue","values","resetForm","formValuesSetter","useEffect","checkableFields","fieldValues","Object","keys","filter","field","Array","isArray","length","includes","title","KntPhoneInputField","enableSearch","onChangeHandler","tiled","withOverlay","IndividualInviteForm","initialIndividualClientCompany","hasToShowGuard","showNotification","useNotistack","entity","url","method","primaryKey","sendAsFormData","fields","value","onSubmitKey","response","message","onError","error","console","log","errorData","data","status","match","variant","useStylesProgress","makeStyles","theme","root","width","marginTop","spacing","clientCSVConfig","csvTools","InvitationByCsv","token","useAuth","useState","loadingImage","setLoadingImage","fileName","setFileName","csvData","setCsvData","csvPrimaryCheckError","setCsvPrimaryCheckError","classesProgress","CSVConfig","removeFile","href","download","accept","action","config","beforeUpload","file","slice","toLowerCase","Promise","resolve","reject","Papa","complete","parsedOutput","dataColumnLength","csvFileValidator","then","isEmpty","inValidMessages","parseNAsyncValidate","map","startsWith","join","Error","headers","Authorization","Publish","Close","LinearProgress","text","BusinessFormElements","useSwitch","csv","checked","handleChange","control","onChange","classes","BusinessInviteForm","useWhiteModal","modalHandler","WhiteModal","open","InviteClientForm","useAxios","initialLoad","loading","ClientsManagementContext","createContext","reducer","state","searchQuery","payload","isStaff","ClientsManagementContextProvider","children","useReducer","dispatch","setSearchQuery","useCallback","query","setIsStaff","contextValues","Provider","useClientsManagementContext","clientsManagementContext","useContext","useClientList","useDispatch","forwardToPreviousPage","usePageChangeAfterEntityDelete","pageKey","entityName","useEntityActionPopup","deleteVisible","visible","showDeleteVisible","showVisible","deleteLoading","toggleDeleteLoading","toggleLoading","closeDeletePopup","closePopup","editVisible","showEditVisible","closeEditPopup","handleClientDelete","client","formRequest","deleteData","cb","success","err","finally","params","useClientManagement","React","primeTab","setPrimeTab","pageName","setPageName","inviteVisible","setInviteVisible","groupVisible","setGroupVisible","linkedRoleVisible","setLinkedRoleVisible","useRouter","location","path","useUnreadCaseTab","unreadCasesQuantity","isHidden","toggleInviteForm","prev","toggleGroupForm","locationSplitterArray","pathname","split","Boolean","String","nestedPageType","handleChangePrime","event","newValue","togglePopup","btnText","toggleLinkedRoleForm","useLinkedClient","handleRoleUpdate","role","updateData","normalizeData","handleLinkedClientDelete","linkedClient","useClientRequests","tab","setTab","handleChangeTab","useIncomingRequests","reloadEntityAll","useLoadAll","rejectVisible","showRejectVisible","rejectLoading","toggleRejectLoading","closeRejectPopup","editLoading","toggleEditLoading","handleStatusChange","isReject","notifText","page","limit","useOutgoingRequests","resendVisible","showResendVisible","resendLoading","toggleResendLoading","closeResendPopup","handleDeleteRequest","request","handleResendRequest","get","useClientGroups","deleteClientGroupHandler","clientGroup","ClientsSearchQuery","e","target","CreateClientGroup","prependData","errorText","ClientGroupElements","CreateLinkedClientRole","LinkedRoleFormElements","ClientsList","lazy","ClientsGroups","ClientsRequests","LinkedClientsRoles","ClientDetails","ClientGroupDetails","a11yProps","index","ClientsManagementInner","isPermitted","useFormGuard","formValues","guardOpen","setGuardOpen","hasToShowSearchQuery","confirmToggleHandler","confirmModalHandler","Helmet","handleModalOpen","maxWidth","featureHandler","isOpen","toggleHandler","roundedTop","Link","to","Suspense","fallback","exact","avatar","thumbnail_150","first_name","last_name"],"sourceRoot":""}