{"version":3,"file":"static/js/2222.91216c9a.chunk.js","mappings":"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","sources":["shared/components/UnreadMessagesCount.tsx","pages/Dashboard/components/DashboardLatestActivity.tsx","pages/Dashboard/components/DashboardCaseInfo.tsx","shared/services/utils/getDepartmentAvatar.tsx","pages/Dashboard/components/DashboardItemDep.tsx","pages/Dashboard/components/DashboardTableItem.tsx","pages/Dashboard/components/DashbordTable.tsx","pages/Dashboard/components/business-details/CustomProgressBar.tsx","pages/Dashboard/components/business-details/BusinessProgressBar.tsx","pages/Dashboard/components/business-details/BusinessDetails.tsx","pages/Dashboard/components/map/DashboardMap.tsx","pages/Dashboard/Dashboard.tsx","pages/Dashboard/index.ts","shared/components/CardDetailsInfo.tsx","shared/services/utils/getBusinessIcon.tsx"],"sourcesContent":["import React from 'react';\n\ntype UnreadMessagesCountType = {\n\thasUnread: number | undefined | null;\n};\n\nfunction UnreadMessagesCount({ hasUnread }: UnreadMessagesCountType) {\n\treturn (\n\t\t<>\n\t\t\t{hasUnread ? (\n\t\t\t\t<div className=\"ml-2 h-6 w-6 rounded-full bg-primary text-center text-sm font-semibold leading-6 text-white\">\n\t\t\t\t\t{hasUnread}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</>\n\t);\n}\nexport default UnreadMessagesCount;\n","import React from 'react';\nimport { ErrorBoundary, StyledTableCell } from 'shared/components';\nimport { DepartmentType, LastMessageAuthorType } from 'shared/typings/dashboard.types';\nimport UnreadMessagesCount from 'shared/components/UnreadMessagesCount';\nimport { useAppState } from 'shared/state';\nimport { LastMessageView } from 'shared/components/LastMessageView';\n\ntype DashboardLatestType = {\n\tdepartment: DepartmentType;\n\tlastMessageAuthor: LastMessageAuthorType;\n\tlastMessageText: string;\n\tlastMessageType: string;\n\tcaseId: number;\n\tonClickHandler: () => void;\n};\n\nfunction DashboardLatest({\n\tdepartment,\n\tcaseId,\n\tlastMessageAuthor,\n\tlastMessageText,\n\tlastMessageType,\n\tonClickHandler\n}: DashboardLatestType) {\n\tconst { unreadMessagesCount } = useAppState();\n\tconst hasUnread = unreadMessagesCount?.[caseId];\n\n\treturn (\n\t\t<StyledTableCell onClick={onClickHandler}>\n\t\t\t<div>\n\t\t\t\t<p className=\"mb-1.5 truncate text-sm font-semibold\">{department?.name}</p>\n\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t{lastMessageAuthor ? (\n\t\t\t\t\t\t<LastMessageView\n\t\t\t\t\t\t\tlast_message_type={lastMessageType}\n\t\t\t\t\t\t\tlast_message_text={lastMessageText}\n\t\t\t\t\t\t\tlast_message_author={lastMessageAuthor}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<UnreadMessagesCount hasUnread={hasUnread} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StyledTableCell>\n\t);\n}\n\nexport default function DashboardLatestActivity(props: DashboardLatestType) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<DashboardLatest {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport { ErrorBoundary, StyledTableCell } from 'shared/components';\nimport dayjs from 'dayjs';\nimport clsx from 'clsx';\nimport { StatusType } from 'shared/typings/dashboard.types';\nimport { useTranslationHelpers } from 'shared/hooks/useTranslationHelpers';\n\ntype DashboardCaseInfoType = {\n\tcaseNumber: number;\n\tstatus: StatusType;\n\tcreatedDate: string;\n\tpriority: string;\n\tonClickHandler: () => void;\n};\n\nfunction DashboardCase({\n\tcaseNumber,\n\tstatus,\n\tpriority,\n\tcreatedDate,\n\tonClickHandler\n}: DashboardCaseInfoType) {\n\tconst { languageDirection } = useTranslationHelpers();\n\treturn (\n\t\t<StyledTableCell onClick={onClickHandler}>\n\t\t\t<div>\n\t\t\t\t<p className=\"mb-1 text-sm font-medium text-kgrey-dark-3\">#{caseNumber}</p>\n\t\t\t\t<div\n\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t'h- mb-1.5 inline-block break-all rounded-full px-6 text-10px font-medium  uppercase leading-5',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'bg-dpriority-high': priority === 'HIGH',\n\t\t\t\t\t\t\t'bg-dpriority-normal': priority === 'NORMAL',\n\t\t\t\t\t\t\t'bg-dpriority-low': priority === 'LOW',\n\t\t\t\t\t\t\t'bg-dpriority-critical': priority === 'CRITICAL'\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{status?.title}\n\t\t\t\t</div>\n\t\t\t\t<p dir={languageDirection} className=\"text-xs font-medium leading-5\">\n\t\t\t\t\t{dayjs(createdDate).format('MMMM DD hh:mm a')}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</StyledTableCell>\n\t);\n}\n\nexport default function DashboardCaseInfo(props: DashboardCaseInfoType) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<DashboardCase {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import { DepartmentType } from '../../typings/dashboard.types';\nimport { Avatar } from '@material-ui/core';\n\nexport const getDepartmentIcon = (department: DepartmentType, subDepartment: DepartmentType) => {\n\tif (subDepartment) {\n\t\tif (subDepartment.icon) {\n\t\t\treturn (\n\t\t\t\t<Avatar\n\t\t\t\t\tclassName=\"inline-block\"\n\t\t\t\t\talt={subDepartment.name}\n\t\t\t\t\tsrc={subDepartment.icon?.thumbnail_150 || subDepartment.icon?.url}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Avatar className=\"inline-block\" style={{ color: '#fff' }}>\n\t\t\t\t\t{subDepartment.name[0].toUpperCase()}\n\t\t\t\t</Avatar>\n\t\t\t);\n\t\t}\n\t} else if (department) {\n\t\tif (department.icon) {\n\t\t\treturn (\n\t\t\t\t<Avatar\n\t\t\t\t\tclassName=\"inline-block\"\n\t\t\t\t\talt={department.name}\n\t\t\t\t\tsrc={department?.icon?.thumbnail_150 || department?.icon?.url}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Avatar className=\"inline-block\" style={{ color: '#fff' }}>\n\t\t\t\t\t{department?.name[0].toUpperCase()}\n\t\t\t\t</Avatar>\n\t\t\t);\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { StyledTableCell } from 'shared/components';\nimport { DepartmentType } from 'shared/typings/dashboard.types';\nimport { getDepartmentIcon } from 'shared/services/utils/getDepartmentAvatar';\n\nexport type DepartmentItemDepType = {\n\tdepartment: DepartmentType;\n\tsubDepartment: DepartmentType;\n\tonClickHandler: () => void;\n};\n\nfunction DashboardItemDep({ department, subDepartment, onClickHandler }: DepartmentItemDepType) {\n\treturn (\n\t\t<StyledTableCell onClick={onClickHandler}>\n\t\t\t<div className=\"flex items-center\">\n\t\t\t\t{getDepartmentIcon(department, subDepartment)}\n\t\t\t\t<span className=\"mx-2 truncate text-sm font-medium\">{department?.name}</span>\n\t\t\t</div>\n\t\t</StyledTableCell>\n\t);\n}\n\nexport default DashboardItemDep;\n","import React from 'react';\nimport { ErrorBoundary, StyledTableRow } from 'shared/components';\nimport clsx from 'clsx';\nimport DashboardLatestActivity from './DashboardLatestActivity';\nimport DashboardCaseInfo from './DashboardCaseInfo';\nimport { DashboardTableItemRequestPropsType } from 'shared/typings/dashboard.types';\nimport DashboardItemDep from './DashboardItemDep';\nimport DashboardItemClient from './DashboardItemClient';\nimport { useRouter } from '../../../shared/hooks';\n\nfunction DashboardTableItem({\n\tid,\n\tdepartment,\n\tcreatedDate,\n\tlastMessageAuthor,\n\tlastMessageText,\n\tcaseNumber,\n\tstatus,\n\tpriority,\n\tlastMessageType,\n\tsubDepartment\n}: DashboardTableItemRequestPropsType) {\n\tconst { history } = useRouter();\n\n\tconst openDashboardCaseHandler = () => {\n\t\tconst actionUrl = {\n\t\t\tpathname: '/case-messages',\n\t\t\tsearch: `?case=${id}&status=${status.id}`\n\t\t};\n\n\t\thistory.push(actionUrl);\n\t};\n\n\treturn (\n\t\t<StyledTableRow\n\t\t\tclassName={clsx('dashboard-item cursor-pointer transition hover:bg-primary-200', {\n\t\t\t\t'is-critical': priority === 'CRITICAL',\n\t\t\t\t'is-normal': priority === 'NORMAL',\n\t\t\t\t'is-high': priority === 'HIGH',\n\t\t\t\t'is-low': priority === 'LOW'\n\t\t\t})}\n\t\t>\n\t\t\t{/*<DashboardItemClient onClickHandler={openDashboardCaseHandler} />*/}\n\t\t\t<DashboardLatestActivity\n\t\t\t\tcaseId={id}\n\t\t\t\tdepartment={department}\n\t\t\t\tlastMessageAuthor={lastMessageAuthor}\n\t\t\t\tlastMessageText={lastMessageText}\n\t\t\t\tlastMessageType={lastMessageType}\n\t\t\t\tonClickHandler={openDashboardCaseHandler}\n\t\t\t/>\n\n\t\t\t<DashboardItemDep\n\t\t\t\tsubDepartment={subDepartment}\n\t\t\t\tdepartment={department}\n\t\t\t\tonClickHandler={openDashboardCaseHandler}\n\t\t\t/>\n\n\t\t\t<DashboardCaseInfo\n\t\t\t\tcaseNumber={caseNumber}\n\t\t\t\tstatus={status}\n\t\t\t\tcreatedDate={createdDate}\n\t\t\t\tpriority={priority}\n\t\t\t\tonClickHandler={openDashboardCaseHandler}\n\t\t\t/>\n\t\t</StyledTableRow>\n\t);\n}\n\nexport function DashboardTableCustomItem(props: DashboardTableItemRequestPropsType) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<DashboardTableItem {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport {\n\tErrorBoundary,\n\tLoader,\n\tStyledTable,\n\tStyledTableHeadCell,\n\tStyledTableRow\n} from 'shared/components';\nimport EntityContainer from 'modules/entity/containers';\nimport { useAppState } from 'shared/state';\nimport { usePagination } from 'shared/hooks';\nimport { TableContainer, TableHead, TableBody } from 'shared/components/Elements';\nimport { DashboardTableCustomItem } from './DashboardTableItem';\nimport { DashboardTableItemRequest } from 'shared/typings/dashboard.types';\nimport { useTranslation } from 'react-i18next';\n\nfunction DashboardTableInner() {\n\tconst { companyId } = useAppState();\n\tconst { page } = usePagination();\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<div>\n\t\t\t{companyId ? (\n\t\t\t\t<EntityContainer.All\n\t\t\t\t\tentity={'dashboard'}\n\t\t\t\t\tname={`Dashboard-${companyId}`}\n\t\t\t\t\turl={`/${companyId}/widgets/cases/as_business/`}\n\t\t\t\t\tparams={{\n\t\t\t\t\t\tlimit: 5,\n\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\tordering: 'last_view_time'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpage\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ items, isFetched }) => {\n\t\t\t\t\t\tconst requests = items.map((item: unknown) => item) as DashboardTableItemRequest[];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"prime-tabs rounded-t-lg bg-kgrey-bg px-4 pt-4 pb-6 text-base font-medium dark:bg-primary-300 dark:text-white\">\n\t\t\t\t\t\t\t\t\t{t('recent_cases_activity')}\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<TableContainer classes={{ root: 'relative ' }}>\n\t\t\t\t\t\t\t\t\t<StyledTable\n\t\t\t\t\t\t\t\t\t\taria-label=\"simple table\"\n\t\t\t\t\t\t\t\t\t\tclasses={{ root: 'table-fixed dark-mode-styled-table' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t\t\t\t<StyledTableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '50%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t('latest_case_activity')}\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t{/*<StyledTableHeadCell style={{ width: '29%' }}>Client</StyledTableHeadCell>*/}\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '25%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t('department')}\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '25%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t('case')}\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t\t\t{requests.map((item: DashboardTableItemRequest) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\t\t\t\t\tbusiness_company,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdepartment,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcreated_date,\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast_message_author,\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast_message_text,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase_number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\t\t\t\t\t\tpriority,\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast_message_type,\n\t\t\t\t\t\t\t\t\t\t\t\t\tsub_department\n\t\t\t\t\t\t\t\t\t\t\t\t} = item;\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DashboardTableCustomItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubDepartment={sub_department}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbusinessCompany={business_company}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdepartment={department}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcreatedDate={created_date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastMessageAuthor={last_message_author}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastMessageText={last_message_text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcaseNumber={case_number}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatus={status}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpriority={priority}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastMessageType={last_message_type}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t\t\t</StyledTable>\n\t\t\t\t\t\t\t\t\t{!isFetched && <Loader tiled withOverlay />}\n\t\t\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityContainer.All>\n\t\t\t) : (\n\t\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t\t<Loader />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default function DashboardTable() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<DashboardTableInner />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { BusinessProgressBarType } from './BusinessProgressBar';\n\nexport default function CustomizedProgressBar({ percent }: BusinessProgressBarType) {\n\treturn (\n\t\t<div className=\"overflow-hidden rounded-full\">\n\t\t\t<div>\n\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t<div className=\"absolute left-2/4 z-10 flex text-xs font-bold text-white\">\n\t\t\t\t\t\t<span>{percent}%</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<LinearProgress\n\t\t\t\t\t\tvariant=\"determinate\"\n\t\t\t\t\t\tvalue={percent}\n\t\t\t\t\t\tstyle={{ height: '18px', borderRadius: '10px' }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport CustomizedProgressBar from './CustomProgressBar';\nimport { getBusinessIcon } from 'shared/services/utils/getBusinessIcon';\nimport { useAuth } from 'modules/auth/hooks/useAuth';\nimport { useAppState } from '../../../../shared/state';\nimport { useTranslation } from 'react-i18next';\n\nexport type BusinessProgressBarType = {\n\tpercent: number;\n};\n\nfunction BusinessProgressBar({ percent }: BusinessProgressBarType) {\n\tconst { company } = useAuth();\n\tconst { isDarkMode } = useAppState();\n\tconst companyIcon = company?.company.icon;\n\tconst companyIconDark = company?.company.icon_dark;\n\tconst { t } = useTranslation();\n\n\tconst iconUrl = isDarkMode\n\t\t? companyIconDark\n\t\t\t? companyIconDark?.thumbnail_150\n\t\t\t: companyIcon?.thumbnail_150\n\t\t: companyIcon?.thumbnail_150;\n\treturn (\n\t\t<div className=\"rounded-10 bg-white p-3.5 dark:border-[0.5px] dark:border-zinc-700 dark:bg-kdark-lighter\">\n\t\t\t<div className=\"mb-4 flex items-center\">\n\t\t\t\t<div className=\"h-9 w-9\">{getBusinessIcon(iconUrl, company?.company.name)}</div>\n\t\t\t\t<h4 className=\"mx-2.5 text-sm font-medium text-kgrey-2d2d2d dark:text-white\">\n\t\t\t\t\t{t('profile_completness')}\n\t\t\t\t</h4>\n\t\t\t</div>\n\t\t\t<CustomizedProgressBar percent={percent} />\n\t\t</div>\n\t);\n}\n\nexport default BusinessProgressBar;\n","import React from 'react';\nimport { ErrorBoundary, Loader } from 'shared/components';\nimport { useAppState } from 'shared/state';\nimport EntityContainer from 'modules/entity/containers';\nimport { BusinessDetailsType } from 'shared/typings/dashboard.types';\nimport CardDetailsInfo from '../../../../shared/components/CardDetailsInfo';\nimport { IconHouse, IconMembers, IconNotifications, IconUserDetail } from 'shared/icons';\nimport BusinessProgressBar from './BusinessProgressBar';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { useLoadOne } from 'shared/hooks';\nimport { useTranslation } from 'react-i18next';\n\nfunction BusinessDetailsCom() {\n\tconst { companyId } = useAppState();\n\tconst { t } = useTranslation();\n\tconst { reloadEntityOne } = useLoadOne();\n\n\tconst refreshDetailsRequest = () => {\n\t\treloadEntityOne({\n\t\t\tprimaryKey: '#businessDetails',\n\t\t\tentityId: '#businessDetails',\n\t\t\tentity: 'businessDetails',\n\t\t\tname: `businessDetails-${companyId}`,\n\t\t\turl: `${companyId}/my/company/dashboard/`\n\t\t});\n\t};\n\treturn (\n\t\t<div className=\"mb-4 flex-grow lg:mb-0\">\n\t\t\t{companyId ? (\n\t\t\t\t<EntityContainer.One\n\t\t\t\t\tprimaryKey=\"#businessDetails\"\n\t\t\t\t\tid=\"#businessDetails\"\n\t\t\t\t\tentity=\"businessDetails\"\n\t\t\t\t\tname={`businessDetails-${companyId}`}\n\t\t\t\t\turl={`${companyId}/my/company/dashboard/`}\n\t\t\t\t\tparams={{}}\n\t\t\t\t\trelations={''}\n\t\t\t\t>\n\t\t\t\t\t{({ item, isFetched }) => {\n\t\t\t\t\t\tconst detailsItem = item as BusinessDetailsType;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"relative rounded-10 bg-kgrey-bg px-3 py-4 dark:bg-kdark-lighter\">\n\t\t\t\t\t\t\t\t<div className=\"mb-3 flex items-center justify-between px-1.5\">\n\t\t\t\t\t\t\t\t\t<h3 className=\"text-base font-medium dark:text-white\">{t('business_details')}</h3>\n\t\t\t\t\t\t\t\t\t<div className=\"cursor-pointer\" onClick={refreshDetailsRequest}>\n\t\t\t\t\t\t\t\t\t\t<CachedIcon\n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"inline-block h-4 w-4\n\t\t\t\t\t\t\t\t\t\t\ttext-kgrey-2d2d2d\n\t\t\t\t\t\t\t\t\t\t\tdark:text-primary\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mx-[-10px] flex flex-wrap\">\n\t\t\t\t\t\t\t\t\t<div className=\"mx-2.5 mb-4\">\n\t\t\t\t\t\t\t\t\t\t<CardDetailsInfo title={t('departments')} count={detailsItem.departments}>\n\t\t\t\t\t\t\t\t\t\t\t<IconHouse />\n\t\t\t\t\t\t\t\t\t\t</CardDetailsInfo>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mx-2.5 mb-4\">\n\t\t\t\t\t\t\t\t\t\t<CardDetailsInfo title={t('clients')} count={detailsItem.clients}>\n\t\t\t\t\t\t\t\t\t\t\t<IconUserDetail />\n\t\t\t\t\t\t\t\t\t\t</CardDetailsInfo>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mx-2.5 mb-4\">\n\t\t\t\t\t\t\t\t\t\t<CardDetailsInfo title={t('news')} count={detailsItem.notifications}>\n\t\t\t\t\t\t\t\t\t\t\t<IconNotifications />\n\t\t\t\t\t\t\t\t\t\t</CardDetailsInfo>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mx-2.5 mb-4\">\n\t\t\t\t\t\t\t\t\t\t<CardDetailsInfo title={t('staff')} count={detailsItem.employee}>\n\t\t\t\t\t\t\t\t\t\t\t<IconMembers />\n\t\t\t\t\t\t\t\t\t\t</CardDetailsInfo>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<BusinessProgressBar percent={detailsItem.percent} />\n\t\t\t\t\t\t\t\t{!isFetched && <Loader tiled withOverlay />}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityContainer.One>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n\nexport default function BusinessDetails() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<BusinessDetailsCom />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React, { lazy } from 'react';\nimport { ErrorBoundary, Loader } from 'shared/components';\nimport { useAppState } from 'shared/state';\nimport EntityContainer from 'modules/entity/containers';\nimport { useLoadAll } from 'shared/hooks';\nimport { useTranslationHelpers } from 'shared/hooks/useTranslationHelpers';\nimport clsx from 'clsx';\n\nconst DashboardMapView = lazy(() => import('./DashboardMapView'));\n\nfunction DashboardMapCom() {\n\tconst { companyId } = useAppState();\n\tconst { reloadEntityAll } = useLoadAll();\n\tconst { isRTL } = useTranslationHelpers();\n\n\tconst reloadMapRequest = () => {\n\t\treloadEntityAll({\n\t\t\tentity: 'onlineUsers',\n\t\t\tname: `onlineUsers-${companyId}`,\n\t\t\turl: `${companyId}/my/company/online/`,\n\t\t\tparams: {\n\t\t\t\tlimit: 1000\n\t\t\t}\n\t\t});\n\t};\n\treturn (\n\t\t<div className={clsx('w-full lg:w-6/12', { 'lg:ml-6': !isRTL, 'lg:mr-6': isRTL })}>\n\t\t\t{companyId ? (\n\t\t\t\t<EntityContainer.All\n\t\t\t\t\tentity=\"onlineUsers\"\n\t\t\t\t\tname={`onlineUsers-${companyId}`}\n\t\t\t\t\turl={`${companyId}/my/company/online/`}\n\t\t\t\t\tparams={{\n\t\t\t\t\t\tlimit: 1000\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ items, isFetched }) => {\n\t\t\t\t\t\tconst onlineClients = items as any;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t\t\t\t<DashboardMapView\n\t\t\t\t\t\t\t\t\treloadMapRequest={reloadMapRequest}\n\t\t\t\t\t\t\t\t\tonlineClients={onlineClients}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{!isFetched && <Loader tiled withOverlay />}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityContainer.All>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n\nexport default function DashboardMap() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<DashboardMapCom />\n\t\t</ErrorBoundary>\n\t);\n}\n","/** @jsxImportSource @emotion/react */\nimport { StandardPageLayout } from 'shared/layouts';\nimport { useUnreadCaseTab } from 'shared/hooks';\nimport { Helmet } from 'react-helmet';\nimport { ErrorBoundary } from 'shared/components';\nimport React from 'react';\nimport DashbordTable from './components/DashbordTable';\nimport BusinessDetails from './components/business-details/BusinessDetails';\nimport DashboardMap from './components/map/DashboardMap';\nimport { t } from 'i18next';\nimport { useTranslation } from 'react-i18next';\n\nfunction DashboardInner() {\n\tconst { unreadCasesQuantity, isHidden } = useUnreadCaseTab('Dashboard');\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<StandardPageLayout>\n\t\t\t<div className={'dashboard'}>\n\t\t\t\t{(!isHidden || unreadCasesQuantity === 0) && (\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<title> KENNEKT | User profile </title>\n\t\t\t\t\t</Helmet>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"dashboard__inner\">\n\t\t\t\t<h2 className=\"mb-6 text-xl font-bold dark:text-white md:text-3xl\">{t('dashboard')}</h2>\n\t\t\t\t<DashbordTable />\n\t\t\t\t<div className=\"mt-8 flex flex-col justify-between lg:flex-row\">\n\t\t\t\t\t<BusinessDetails />\n\t\t\t\t\t<DashboardMap />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StandardPageLayout>\n\t);\n}\n\nexport function Dashboard() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<DashboardInner />\n\t\t</ErrorBoundary>\n\t);\n}\n","import { Dashboard } from './Dashboard';\nexport default Dashboard;\n","import React from 'react';\nimport clsx from 'clsx';\n\nexport type BusinessDetailsInfoType = {\n\ttitle: string;\n\tchildren: React.ReactNode;\n\tcount: number;\n\tcolor?: string;\n\tbgColor?: string;\n\tfontSize?: string;\n};\n\nfunction CardDetailsInfo({\n\ttitle,\n\tchildren,\n\tcount,\n\tbgColor,\n\tcolor,\n\tfontSize\n}: BusinessDetailsInfoType) {\n\treturn (\n\t\t<div\n\t\t\tclassName={clsx(\n\t\t\t\t'rounded-10 p-3.5 dark:border-sm dark:border-zinc-700 dark:bg-kdark-lighter',\n\t\t\t\tbgColor ? bgColor : 'bg-white'\n\t\t\t)}\n\t\t>\n\t\t\t<h4 className=\"mb-2.5 text-sm font-medium text-kgrey\">{title}</h4>\n\t\t\t<div className=\"flex items-center\">\n\t\t\t\t<span className=\"flex h-9 w-9 items-center justify-center rounded-full bg-kgrey-bgDashboardItem dark:bg-black\">\n\t\t\t\t\t{children}\n\t\t\t\t</span>\n\t\t\t\t<p\n\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t'px-2 font-semibold leading-5',\n\t\t\t\t\t\tcolor ? color : 'text-primary-dark',\n\t\t\t\t\t\tfontSize ? fontSize : 'text-2xl'\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{count}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default CardDetailsInfo;\n","import { Avatar } from '@material-ui/core';\n\nexport const getBusinessIcon = (url: string | undefined, name: string | undefined) => {\n\tif (url) {\n\t\treturn (\n\t\t\t<Avatar\n\t\t\t\tclassName=\"inline-block\"\n\t\t\t\talt={name || 'Business icon'}\n\t\t\t\tsrc={url}\n\t\t\t\tstyle={{ width: '100%', height: '100%' }}\n\t\t\t/>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Avatar className=\"inline-block\" style={{ color: '#fff', width: '100%', height: '100%' }}>\n\t\t\t\t{name ? name[0].toUpperCase() : null}\n\t\t\t</Avatar>\n\t\t);\n\t}\n};\n"],"names":["hasUnread","className","DashboardLatest","department","caseId","lastMessageAuthor","lastMessageText","lastMessageType","onClickHandler","unreadMessagesCount","useAppState","onClick","name","LastMessageView","last_message_type","last_message_text","last_message_author","DashboardLatestActivity","props","DashboardCase","caseNumber","status","priority","createdDate","languageDirection","useTranslationHelpers","clsx","title","dir","dayjs","format","DashboardCaseInfo","getDepartmentIcon","subDepartment","icon","Avatar","alt","src","thumbnail_150","url","style","color","toUpperCase","DashboardTableItem","id","history","useRouter","openDashboardCaseHandler","actionUrl","pathname","search","push","DashboardTableCustomItem","DashboardTableInner","companyId","page","usePagination","t","useTranslation","entity","params","limit","extra","ordering","items","isFetched","requests","map","item","classes","root","width","business_company","created_date","case_number","sub_department","businessCompany","tiled","withOverlay","DashboardTable","CustomizedProgressBar","percent","LinearProgress","variant","value","height","borderRadius","company","useAuth","isDarkMode","companyIcon","companyIconDark","icon_dark","iconUrl","getBusinessIcon","BusinessDetailsCom","reloadEntityOne","useLoadOne","refreshDetailsRequest","primaryKey","entityId","relations","detailsItem","Cached","fontSize","CardDetailsInfo","count","departments","clients","notifications","employee","BusinessDetails","DashboardMapView","lazy","DashboardMapCom","reloadEntityAll","useLoadAll","isRTL","reloadMapRequest","onlineClients","DashboardMap","DashboardInner","useUnreadCaseTab","unreadCasesQuantity","isHidden","Helmet","children","bgColor"],"sourceRoot":""}