{"version":3,"file":"static/js/3814.e93f05f2.chunk.js","mappings":"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","sources":["pages/GroupChat/components/GroupFormElements.tsx","pages/GroupChat/components/CreateGroupForm.tsx","pages/GroupChat/components/GroupSidebarSearch.tsx","pages/GroupChat/hooks/useChatMenu.tsx","pages/GroupChat/components/ChatItemMarkup.tsx","pages/GroupChat/components/ChatItem.tsx","pages/GroupChat/components/GroupList.tsx","pages/GroupChat/chat-components/GroupMessagesList.tsx","pages/GroupChat/chat-components/GroupChatInputControls.tsx","pages/GroupChat/components/PermissionItem.tsx","pages/GroupChat/components/ChatPermissionMenuItem.tsx","pages/GroupChat/components/EditGroupForm.tsx","pages/GroupChat/components/Permissions.tsx","pages/GroupChat/hooks/useGroupRequest.ts","pages/GroupChat/chat-components/GroupChatMembers.tsx","pages/GroupChat/hooks/useGroupMessageSearch.ts","pages/GroupChat/chat-components/Members/ChatMember.tsx","pages/GroupChat/chat-components/Members/ChatSettingItem.tsx","pages/GroupChat/chat-components/Members/MemberChatSettings.tsx","pages/GroupChat/chat-components/Members/ChatMembersList.tsx","pages/GroupChat/chat-components/Members/MembersFilter.tsx","pages/GroupChat/chat-components/Members/AddChatMembers.tsx","pages/GroupChat/chat-components/Members/ChatMembers.tsx","pages/GroupChat/chat-components/GroupChatHeader.tsx","pages/GroupChat/chat-components/GroupChat.tsx","pages/GroupChat/chat-components/SearchMessageItem.tsx","pages/GroupChat/components/GroupMessageSearch.tsx","pages/GroupChat/Groups.tsx","pages/GroupChat/hooks/useGroupInitialSettings.ts","shared/components/Elements/Fields/InputText.tsx","shared/components/Elements/Fields/InputTextIcon.tsx","shared/components/Elements/Fields/index.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { KntInputField } from '../../../shared/components/Fields';\nimport { Field } from 'formik';\nimport { Button, FileUploader, KntButton, Loader } from '../../../shared/components';\nimport get from 'lodash/get';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport config from 'config';\nimport { useTranslation } from 'react-i18next';\nconst imgPath = `${config.PUBLIC_ASSETS}img`;\n\ntype Props = {\n\tonSuccess: () => void;\n\tsetFieldValue: any;\n\tisSubmitting: boolean;\n\tvalues: any;\n\tisEditing?: any;\n};\n\nexport function GroupFormElements({\n\tonSuccess,\n\tsetFieldValue,\n\tisSubmitting,\n\tvalues,\n\tisEditing = false\n}: Props) {\n\tconst [uploadMeta, setUploadMeta] = useState<any>(null);\n\tconst [cancelSending, setCancelSending] = useState<any>(false);\n\tconst [file, setFile] = useState(isEditing ? values.image : null);\n\tconst { t } = useTranslation();\n\n\tuseEffect(() => {\n\t\tif (file) setFieldValue('image', file);\n\t}, [file]);\n\n\treturn (\n\t\t<div>\n\t\t\t<h2 className=\"mb-4 text-xl font-bold\">\n\t\t\t\t{isEditing ? t('edit_group_chat') : t('create_group_chat')}\n\t\t\t</h2>\n\n\t\t\t<Field\n\t\t\t\tlabel={t('group_chat_title')}\n\t\t\t\tlabelClasses=\"ml-6 text-xs font-light text-kgrey-welcome mb-2 block\"\n\t\t\t\tname=\"title\"\n\t\t\t\tcomponent={KntInputField}\n\t\t\t\tplaceholder={t('enter_group_title')}\n\t\t\t\trequired\n\t\t\t\tautoComplete=\"off\"\n\t\t\t\tmaxLength={100}\n\t\t\t\t// onChangeHandler={(e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t// \ttitleRef.current = e.target.value;\n\t\t\t\t// }}\n\t\t\t/>\n\n\t\t\t<Field\n\t\t\t\tlabel={t('group_description')}\n\t\t\t\tlabelClasses=\"ml-6 text-xs font-light text-kgrey-welcome mb-2 block\"\n\t\t\t\tplaceholder={t('type_group_description')}\n\t\t\t\tname=\"description\"\n\t\t\t\tcomponent={KntInputField}\n\t\t\t\ttype=\"textarea\"\n\t\t\t\tautoComplete=\"off\"\n\t\t\t\tmaxLength={250}\n\t\t\t/>\n\t\t\t<div className=\"mb-4 flex items-center\">\n\t\t\t\t<div className=\"mr-4\">\n\t\t\t\t\t<FileUploader\n\t\t\t\t\t\tuploadMeta={uploadMeta}\n\t\t\t\t\t\tsetUploadMeta={setUploadMeta}\n\t\t\t\t\t\tcancelSending={cancelSending}\n\t\t\t\t\t\tsetCancelSending={setCancelSending}\n\t\t\t\t\t\tsetFile={setFile}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"user-avatar-box__display relative h-20 w-20 overflow-hidden rounded-full\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={get(file, 'thumbnail_150') || `${imgPath}/chat-placeholder.svg`}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclassName={'h-full object-cover'}\n\t\t\t\t\t/>\n\t\t\t\t\t{uploadMeta !== null && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t'absolute top-1/2 left-1/2 z-10 h-10 w-10 -translate-y-1/2 -translate-x-1/2'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"upload-media-spinner\">\n\t\t\t\t\t\t\t\t<Loader variant=\"determinate\" value={uploadMeta} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetCancelSending(true);\n\t\t\t\t\t\t\t\t\tsetUploadMeta(null);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t'absolute top-[21px] left-[25px] z-20 h-8 w-8 -translate-y-1/2 -translate-x-1/2 ' +\n\t\t\t\t\t\t\t\t\t'cursor-pointer text-3xl text-primary-dark transition hover:text-primary'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<AiOutlineCloseCircle />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"btn-row mt-6 flex justify-end\">\n\t\t\t\t{isSubmitting && <Loader tiled withOverlay />}\n\t\t\t\t<Button\n\t\t\t\t\tclassName={'mr-5 border border-kgrey text-kgrey'}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClickHandler={onSuccess}\n\t\t\t\t>\n\t\t\t\t\t{t('cancel')}\n\t\t\t\t</Button>\n\t\t\t\t<KntButton\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName={'ml-4 dark:text-white dark:hover:bg-primary-300 dark:focus:ring-primary-300'}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tisDisabled={isSubmitting || !!uploadMeta}\n\t\t\t\t>\n\t\t\t\t\t{isEditing ? t('edit_group_chat') : t('create_group_chat')}\n\t\t\t\t</KntButton>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport EntityForm from 'modules/entity/forms';\nimport { useAppState } from '../../../shared/state';\nimport { GroupFormElements } from './GroupFormElements';\nimport { useQueryParams } from '../../../shared/hooks';\n\ntype Props = {\n\tonSuccess: () => void;\n};\n\nexport function CreateGroupForm({ onSuccess }: Props) {\n\tconst { companyId, groupSearchQuery } = useAppState();\n\tconst { changeUrlParams } = useQueryParams<{ chat: number }>();\n\n\treturn (\n\t\t<EntityForm.Main\n\t\t\tentity={'ims-chats'}\n\t\t\tname={`AllImsChats-${companyId}-${groupSearchQuery}`}\n\t\t\turl={`/${companyId}/ims/groups/`}\n\t\t\tmethod=\"post\"\n\t\t\tprimaryKey=\"id\"\n\t\t\tsendAsFormData={false}\n\t\t\tnormalizeData={(data: any) => data}\n\t\t\tprependData\n\t\t\tfields={[\n\t\t\t\t{\n\t\t\t\t\tname: 'title',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalue: '',\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'description',\n\t\t\t\t\tvalue: '',\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'image',\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'object'\n\t\t\t\t}\n\t\t\t]}\n\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\tchangeUrlParams({ chat: response.id });\n\t\t\t\tonSuccess();\n\t\t\t\tresetForm();\n\t\t\t}}\n\t\t\tonError={(error, resetForm): any => {\n\t\t\t\tconsole.log(error);\n\t\t\t}}\n\t\t>\n\t\t\t{({ isSubmitting, values, setFieldValue }) => {\n\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\tconsole.log('group create values', values);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<GroupFormElements\n\t\t\t\t\t\tonSuccess={onSuccess}\n\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityForm.Main>\n\t);\n}\n","import React, { useEffect, useState } from 'react';\nimport { CgSearch } from 'react-icons/cg';\nimport { useDebounce } from 'use-debounce';\nimport { useAppState } from '../../../shared/state';\nimport { useWhiteModal } from '../../../shared/hooks';\nimport { CreateGroupForm } from './CreateGroupForm';\nimport { Fab } from '@material-ui/core';\nimport { IoMdAdd } from 'react-icons/io';\nimport { BsFillBellFill } from 'react-icons/bs';\nimport { AiOutlineMenuUnfold } from 'react-icons/ai';\nimport { useTranslation } from 'react-i18next';\nimport { useTranslationHelpers } from 'shared/hooks/useTranslationHelpers';\nimport clsx from 'clsx';\n\ntype Props = {\n\ttoggleIsUnreadFilter: any;\n\tisUnreadFilter: boolean;\n};\n\nexport function GroupSidebarSearch({ toggleIsUnreadFilter, isUnreadFilter }: Props) {\n\tconst [query, setQuery] = useState('');\n\tconst [searchQuery] = useDebounce(query, 500);\n\tconst { setGroupSearchQuery, groupsUnreadCountData } = useAppState();\n\tconst { open, modalHandler, WhiteModal } = useWhiteModal();\n\tconst totalGroupUnreadCount = Object.values(groupsUnreadCountData)?.filter(\n\t\t(count) => count > 0\n\t).length;\n\tconst { t } = useTranslation();\n\tconst { isRTL } = useTranslationHelpers();\n\n\tuseEffect(() => {\n\t\tsetGroupSearchQuery(searchQuery);\n\t}, [searchQuery]);\n\n\treturn (\n\t\t<div className=\"mb-4 flex\">\n\t\t\t{totalGroupUnreadCount ? (\n\t\t\t\t<div\n\t\t\t\t\tonClick={() => toggleIsUnreadFilter()}\n\t\t\t\t\tclassName=\"relative mr-3 mt-1.5 cursor-pointer rounded-10 bg-kgrey-dark-2 p-2\"\n\t\t\t\t>\n\t\t\t\t\t{!isUnreadFilter ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<span className=\"absolute -top-1 left-1.5 right-1.5 rounded-md bg-kred-pink text-center text-10px text-white\">\n\t\t\t\t\t\t\t\t{totalGroupUnreadCount}\n\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t<BsFillBellFill />\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<AiOutlineMenuUnfold />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t) : null}\n\n\t\t\t<div className=\"group-sidebar__search relative flex-grow  pr-2\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"search\"\n\t\t\t\t\tvalue={query}\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t'group-sidebar__search-input w-full border-b px-4 outline-none ' +\n\t\t\t\t\t\t'border-kgrey-border-solid' +\n\t\t\t\t\t\t' pl-7 transition focus:border-primary' +\n\t\t\t\t\t\t' placeholder-[rgba(45, 45, 45, 0.3)] py-2 dark:bg-kdark dark:text-white'\n\t\t\t\t\t}\n\t\t\t\t\tplaceholder={t('search_for_chats')}\n\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tclassName={clsx('absolute top-1/2 -translate-y-1/2', {\n\t\t\t\t\t\t'right-0': isRTL,\n\t\t\t\t\t\t'left-0': !isRTL\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"text-kgrey\">\n\t\t\t\t\t\t<CgSearch />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Fab color=\"primary\" size=\"small\" onClick={modalHandler}>\n\t\t\t\t<IoMdAdd className=\"text-2xl text-white\" />\n\t\t\t</Fab>\n\t\t\t<WhiteModal handleModalOpen={modalHandler} open={open}>\n\t\t\t\t<CreateGroupForm onSuccess={modalHandler} />\n\t\t\t</WhiteModal>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport { useAxios } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\nimport Actions from 'store/actions';\nimport { useDispatch } from 'react-redux';\nconst UpdateEntities = Actions.entities.updateEntitiesSuccess;\n\ntype Pin = null | string | number;\n\nexport function useChatMenu(pin_time: Pin, chatId: number, isFromChat = false) {\n\tconst [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\tconst [managerRequested, setManagerRequested] = useState<boolean>(false);\n\tconst { companyId, toggleChatPanel } = useAppState();\n\tconst open = Boolean(anchorEl);\n\tconst dispatch = useDispatch();\n\n\tconst handleClick = (event: React.MouseEvent<HTMLElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\t//pin and unpin handler\n\tconst { fetchData: pinCase } = useAxios({\n\t\turl: `/${companyId}/ims/groups/${chatId}/pin/`,\n\t\tmethod: `${pin_time ? 'delete' : 'put'}`,\n\t\tcb: {\n\t\t\tsuccess: (data, args) => {\n\t\t\t\tconst [isPinning] = args;\n\t\t\t\tdispatch(\n\t\t\t\t\tUpdateEntities({\n\t\t\t\t\t\tentity: 'ims-chats',\n\t\t\t\t\t\tentityId: String(chatId),\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tpin_time: isPinning ? Date.now() : null\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tif (isFromChat) {\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tUpdateEntities({\n\t\t\t\t\t\t\tentity: 'ims-chats',\n\t\t\t\t\t\t\tentityId: String(chatId),\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tpin_time: isPinning ? Date.now() : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: (error) => {}\n\t\t}\n\t});\n\n\tconst handleNotificationClose = (event?: React.SyntheticEvent, reason?: string) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\n\t\tsetManagerRequested(false);\n\t};\n\n\tconst handleMenuItemClick = (menuType: string) => {\n\t\tswitch (menuType) {\n\t\t\tcase 'pin': {\n\t\t\t\tpinCase(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'unpin': {\n\t\t\t\tpinCase(false);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleCloseMenu = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn {\n\t\topen,\n\t\thandleClick,\n\t\tanchorEl,\n\t\tmanagerRequested,\n\t\thandleNotificationClose,\n\t\thandleMenuItemClick,\n\t\thandleCloseMenu\n\t};\n}\n","/**@jsxImportSource @emotion/react */\nimport React from 'react';\nimport clsx from 'clsx';\nimport { css } from '@emotion/react';\nimport { nanoid } from 'nanoid';\nimport { LastMessageView } from 'shared/components/LastMessageView';\nimport { time } from 'shared/services';\nimport { IconVertical } from 'shared/icons/IconVertical';\nimport { Menu } from 'shared/components/Elements';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { IconGroupChatMuted, IconPin } from 'shared/icons';\nimport { useQueryParams } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\nimport config from 'config';\nimport { useChatMenu } from '../hooks/useChatMenu';\nimport { ChatItemProps } from '../types';\nimport { SiMaildotru } from 'react-icons/si';\nimport { PiClockClockwise } from 'react-icons/pi';\nimport { useTranslation } from 'react-i18next';\nconst imgPath = `${config.PUBLIC_ASSETS}img/`;\n\nexport function ChatItemMarkup({\n\tchatId,\n\timage,\n\ttitle,\n\tlast_message_author,\n\tlast_message_type,\n\tlast_message_text,\n\tlast_message_time,\n\tpin_time,\n\tdraftMessage,\n\tisMuted = false,\n\tlastReadMessage = null\n}: ChatItemProps) {\n\tconst {\n\t\tgroupsUnreadCountData,\n\t\tsetActiveDraft,\n\t\tchatsMentionList,\n\t\tscheduledMessageIds,\n\t\tsetChatUuid\n\t} = useAppState();\n\tconst { changeUrlParams, query } = useQueryParams<{ chat: number; searchedMessageId?: number }>();\n\tconst { t } = useTranslation();\n\n\tconst { open, handleClick, anchorEl, handleMenuItemClick, handleCloseMenu } = useChatMenu(\n\t\tpin_time,\n\t\tchatId\n\t);\n\n\tconst isActive = query && Number(query.chat) === chatId;\n\tconst chatAvatar = image || `${imgPath}chat-placeholder.png`;\n\tconst hasUnread = groupsUnreadCountData?.[chatId];\n\tconst hasMentions = chatsMentionList?.[chatId]?.length;\n\tconst hasScheduledMessages = scheduledMessageIds?.[chatId]?.length;\n\n\tconst chatItemClickHandler = () => {\n\t\tchangeUrlParams({\n\t\t\tchat: chatId,\n\t\t\t...{\n\t\t\t\t...(lastReadMessage && hasUnread\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tunread: lastReadMessage,\n\t\t\t\t\t\t\thasUnreadMessage: true,\n\t\t\t\t\t\t\tlastReadMessage\n\t\t\t\t\t  }\n\t\t\t\t\t: {})\n\t\t\t}\n\t\t});\n\t\tsetChatUuid(nanoid());\n\t\tsetActiveDraft(draftMessage);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={clsx('chat-item mb-3 cursor-pointer rounded-lg p-2 transition hover:opacity-80 ', {\n\t\t\t\t'bg-primary-300 dark:bg-primary-300': isActive,\n\t\t\t\t'dark:bg-white/10': !isActive\n\t\t\t})}\n\t\t>\n\t\t\t<div className=\"chat-item__inner flex w-full items-center justify-between\">\n\t\t\t\t<div className=\"chat-item__img h-14 w-14 flex-shrink-0 overflow-hidden rounded-full\">\n\t\t\t\t\t<img src={chatAvatar} alt=\"\" className=\"h-full object-cover\" />\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"chat-item__body flex flex-grow items-center justify-between pl-2\"\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\twidth: 275px;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"chat-item__content w-9/12 overflow-hidden pr-2\"\n\t\t\t\t\t\tonClick={chatItemClickHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"chat-item__title flex-center-y truncate text-sm font-semibold dark:text-white\">\n\t\t\t\t\t\t\t<span>{title}</span>\n\t\t\t\t\t\t\t{isMuted && (\n\t\t\t\t\t\t\t\t<span className=\"ml-1 block h-4 w-4 text-kgrey\">\n\t\t\t\t\t\t\t\t\t<IconGroupChatMuted />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"chat-item__muted\">\n\t\t\t\t\t\t\t{last_message_author ? (\n\t\t\t\t\t\t\t\t<LastMessageView\n\t\t\t\t\t\t\t\t\tlast_message_type={last_message_type}\n\t\t\t\t\t\t\t\t\tlast_message_text={last_message_text || ''}\n\t\t\t\t\t\t\t\t\tlast_message_author={last_message_author}\n\t\t\t\t\t\t\t\t\tdraftMessage={draftMessage}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chat-item__info  flex w-3/12 flex-shrink-0 flex-col  items-end\">\n\t\t\t\t\t\t<div className=\"chat-item___actions mb-2.5 flex items-center justify-between\">\n\t\t\t\t\t\t\t<div className=\"chat-item__date text-[10px] font-bold text-kgrey-chatGrey/30 dark:text-white\">\n\t\t\t\t\t\t\t\t{time.toLastTime(last_message_time)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"chat-item__dots\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"more-btn w-4 cursor-pointer pr-1.5 text-right text-kgrey-menuText transition-colors hover:text-primary dark:text-white dark:hover:text-primary\"\n\t\t\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<IconVertical className={'inline'} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\t\tid=\"long-menu\"\n\t\t\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\t\t\tonClose={handleCloseMenu}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\thandleCloseMenu();\n\t\t\t\t\t\t\t\t\t\t\thandleMenuItemClick(pin_time ? 'unpin' : 'pin');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{pin_time ? t('unpin_chat') : t('pin_chat')}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"chat-item___pin mt-auto flex items-center justify-end leading-none\">\n\t\t\t\t\t\t\t{hasScheduledMessages ? (\n\t\t\t\t\t\t\t\t<div className=\"chat-item__scheduled-icon mr-1.5 items-start text-xl dark:text-white\">\n\t\t\t\t\t\t\t\t\t<PiClockClockwise />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t{pin_time ? <IconPin className={'text-kgrey-menuText'} /> : null}\n\t\t\t\t\t\t\t{hasUnread ? (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\t\t\t'ml-2 h-6 w-6  rounded-full text-center text-sm font-semibold leading-6 text-white',\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t'bg-primary': !isMuted,\n\t\t\t\t\t\t\t\t\t\t\t'bg-kgrey': isMuted\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{hasUnread}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t{hasMentions ? (\n\t\t\t\t\t\t\t\t<div className=\" px-1 text-lg text-primary\">\n\t\t\t\t\t\t\t\t\t<SiMaildotru />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { ChatItemMarkup } from './ChatItemMarkup';\nimport { ChatItemProps } from '../types';\nimport { ErrorBoundary } from 'shared/components';\n\nfunction ChatItemInner(props: ChatItemProps) {\n\tconst {\n\t\tchatId,\n\t\timage,\n\t\tpin_time,\n\t\tlast_message_type,\n\t\tlast_message_text,\n\t\ttitle,\n\t\tlast_message_author,\n\t\tlast_message_time,\n\t\tisMuted,\n\t\tdraftMessage,\n\t\tlastReadMessage\n\t} = props;\n\n\treturn (\n\t\t<ChatItemMarkup\n\t\t\tchatId={chatId}\n\t\t\ttitle={title}\n\t\t\timage={image}\n\t\t\tlast_message_author={last_message_author}\n\t\t\tlast_message_type={last_message_type}\n\t\t\tlast_message_text={last_message_text}\n\t\t\tlast_message_time={last_message_time}\n\t\t\tpin_time={pin_time}\n\t\t\tisMuted={isMuted}\n\t\t\tdraftMessage={draftMessage}\n\t\t\tlastReadMessage={lastReadMessage}\n\t\t/>\n\t);\n}\n\nexport function ChatItem(props: ChatItemProps) {\n\treturn (\n\t\t<ErrorBoundary isCompact>\n\t\t\t<ChatItemInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { ChatItem } from './ChatItem';\nimport EntityContainer from 'modules/entity/containers';\nimport { useAppState } from 'shared/state';\nimport { ErrorBoundary, LoadMoreVisible } from 'shared/components';\nimport { GroupMember, IGroupChat } from 'shared/interfaces';\nimport { useAuth } from 'modules/auth/hooks/useAuth';\nimport { useQueryParams } from 'shared/hooks';\nimport { sortChatList } from 'shared/services';\nimport { buildGroupParams, CHATS_MESSAGES_LIMIT } from 'shared/consts/groupChat.const';\n\ntype Props = {\n\tisUnreadFilter: boolean;\n};\n\nfunction GroupListInner({ isUnreadFilter }: Props) {\n\tconst [page, setPage] = useState(1);\n\tconst [searchPage, setSearchPage] = useState(1);\n\tconst { companyId, groupSearchQuery, groupsUnreadCountData } = useAppState();\n\tconst { userData } = useAuth();\n\tconst { query } = useQueryParams();\n\tconst isActiveChat = query.chat;\n\n\tuseEffect(() => {\n\t\tsetSearchPage(1);\n\t\tsetPage(1);\n\t}, [groupSearchQuery]);\n\n\treturn (\n\t\t<div className=\"group-sidebar__chats flex-grow overflow-y-auto pt-2\">\n\t\t\t{companyId ? (\n\t\t\t\t<EntityContainer.All\n\t\t\t\t\tentity={'ims-chats'}\n\t\t\t\t\tname={`AllImsChats-${companyId}-${groupSearchQuery}`}\n\t\t\t\t\turl={`/${companyId}/ims/groups/`}\n\t\t\t\t\tparams={{\n\t\t\t\t\t\textra: buildGroupParams(groupSearchQuery, isUnreadFilter),\n\t\t\t\t\t\tlimit: CHATS_MESSAGES_LIMIT,\n\t\t\t\t\t\tpage: groupSearchQuery.length ? searchPage : page\n\t\t\t\t\t}}\n\t\t\t\t\t// primaryKey={groupSearchQuery.length ? 'message_id' : 'id'}\n\t\t\t\t\tappendData\n\t\t\t\t\t// replaceIds\n\t\t\t\t\tisCancellable={!!groupSearchQuery.length}\n\t\t\t\t\tcancelField=\"groupChat\"\n\t\t\t\t>\n\t\t\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\t\t\t//3192's fix: remove unmatched groups on real-time when unread filter is active\n\t\t\t\t\t\tconst mappedAndFilteredChatItems = (items as IGroupChat[]).filter((item) =>\n\t\t\t\t\t\t\tisUnreadFilter\n\t\t\t\t\t\t\t\t? groupsUnreadCountData[item.id] > 0 || item.id.toString() === isActiveChat\n\t\t\t\t\t\t\t\t: item\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst sortedChatItems = sortChatList<IGroupChat>(mappedAndFilteredChatItems);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{sortedChatItems.map((item) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<React.Fragment key={item.id}>\n\t\t\t\t\t\t\t\t\t\t\t<ChatItem\n\t\t\t\t\t\t\t\t\t\t\t\tchatId={item.id}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={item.title}\n\t\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\t\t\t\tpin_time={item.pin_time}\n\t\t\t\t\t\t\t\t\t\t\t\tlast_message_type={item.last_message_type}\n\t\t\t\t\t\t\t\t\t\t\t\tlast_message_author={item.last_message_author}\n\t\t\t\t\t\t\t\t\t\t\t\tlast_message_text={item.last_message_text}\n\t\t\t\t\t\t\t\t\t\t\t\tlast_message_time={item.last_message_time}\n\t\t\t\t\t\t\t\t\t\t\t\timage={item.image?.thumbnail_150 || null}\n\t\t\t\t\t\t\t\t\t\t\t\tisMuted={\n\t\t\t\t\t\t\t\t\t\t\t\t\titem?.members?.find(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(member: GroupMember) => member.user.id === userData.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t)?.is_mute\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdraftMessage={item.draft_message}\n\t\t\t\t\t\t\t\t\t\t\t\tlastReadMessage={item.last_read_message}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{!isFetched ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t{[...Array(10)].map((_: any, key) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={'mb4'} key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ChatListLoader />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{isFetched &&\n\t\t\t\t\t\t\t\t\tmeta?.current_page &&\n\t\t\t\t\t\t\t\t\tmeta?.last_page &&\n\t\t\t\t\t\t\t\t\tmeta?.current_page < meta?.last_page ? (\n\t\t\t\t\t\t\t\t\t\t<LoadMoreVisible\n\t\t\t\t\t\t\t\t\t\t\tsetPage={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (meta.current_page !== page) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetPage(meta.current_page as number);\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tgroupSearchQuery.length\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? setSearchPage(searchPage + 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: setPage(page + 1);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityContainer.All>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n\nexport function GroupList(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<GroupListInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n\nfunction ChatListLoader() {\n\treturn (\n\t\t<ContentLoader\n\t\t\tspeed={2}\n\t\t\twidth={362}\n\t\t\theight={72}\n\t\t\tviewBox=\"0 0 362 72\"\n\t\t\tbackgroundColor=\"#f3f3f3\"\n\t\t\tforegroundColor=\"#ecebeb\"\n\t\t>\n\t\t\t<circle cx=\"48\" cy=\"33\" r=\"24\" />\n\t\t\t<rect x=\"79\" y=\"14\" rx=\"7\" ry=\"7\" width=\"217\" height=\"18\" />\n\t\t\t<rect x=\"80\" y=\"42\" rx=\"5\" ry=\"5\" width=\"155\" height=\"11\" />\n\t\t\t<rect x=\"351\" y=\"12\" rx=\"4\" ry=\"4\" width=\"12\" height=\"32\" />\n\t\t\t<rect x=\"313\" y=\"13\" rx=\"5\" ry=\"5\" width=\"30\" height=\"11\" />\n\t\t</ContentLoader>\n\t);\n}\n","/** @jsxImportSource @emotion/react */\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport { css } from '@emotion/react';\nimport EntityContainer from 'modules/entity/containers';\nimport { IMessage } from 'shared/interfaces';\nimport useDimensions from 'react-use-dimensions';\nimport { isSafari } from 'react-device-detect';\nimport clsx from 'clsx';\nimport { useChatContext } from 'shared/contexts/ChatContext';\nimport { ErrorBoundary } from 'shared/components';\nimport {\n\tChatMessage,\n\tVirtuosoCustomItem,\n\tVirtuosoFooter,\n\tVirtuosoScrollWrapper\n} from 'shared/components/Chat/components';\nimport { useOnInit, useGetEntityOne, useQueryParams } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\nimport { useChatInputContext } from 'shared/contexts';\nimport { useChatMessagesList } from 'shared/hooks/chat-hooks/useChatMessagesList';\nimport { ChatMessagesLoader } from 'shared/components/Chat/components';\nimport VizSensor from 'react-visibility-sensor';\nimport { checkMsgAuthor, getChatMessagesEntityName } from 'shared/components/Chat/utils';\nimport { Virtuoso } from 'react-virtuoso';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tchatId: number;\n};\n\nconst SHOW_LOGS = true;\n\nfunction GroupMessagesListInner({ chatId }: Props) {\n\tconst { t } = useTranslation();\n\tconst [chatBodyRef, { height: chatBodyHeight }] = useDimensions();\n\tconst { setIsDelayedMessage, isDelayedMessage } = useChatInputContext();\n\tconst { afterMessagesFetchService } = useOnInit();\n\tconst { entityPage, groupsUnreadCountData } = useAppState();\n\tconst { query } = useQueryParams();\n\tconst lastReadMsgIdFromQuery = (query.unread && Number(query.unread)) || null;\n\tconst hasUnread = !!groupsUnreadCountData?.[chatId];\n\tconst hasUnreadCached = useMemo(() => !!groupsUnreadCountData?.[chatId], [chatId]);\n\tconst firstUnread = useRef<number | null | undefined>(null);\n\n\tconst {\n\t\tentityId,\n\t\tisSetSearchReply,\n\t\tallowToLoad,\n\t\tsetAllowToLoad,\n\t\tdirection,\n\t\tmessagesLimit,\n\t\treplyLoading,\n\t\tscrollToMsgId,\n\t\tstate,\n\t\tsetScrollPosition,\n\t\tisMsgHasBeenIndicated,\n\t\tvirtuosoRef,\n\t\tisScheduledChat,\n\t\tentityType\n\t} = useChatContext();\n\n\tconst chatEntity = useGetEntityOne({\n\t\tentity: 'ims-chats',\n\t\tentityId,\n\t\tentityName: `GroupChat-${entityId}One`\n\t});\n\n\tconst {\n\t\tcursorTop,\n\t\tcursorBot,\n\t\thandlePageLoading,\n\t\tlocalEntityId,\n\t\tscrollIntoElement,\n\t\tisLoadedRepliedMessage,\n\t\tmessageVisibleHandler,\n\t\tsetUpdateEntityPage,\n\t\tsearchedMessageId,\n\t\tpaginationDepsRef,\n\t\tcursor,\n\t\tisLastPageFetched,\n\t\tsetIsLastPageFetched,\n\t\tisFirstPageFetched,\n\t\tsetIsFirstPageFetched,\n\t\ttotalMessagesCount,\n\t\tremoveUnreadCountFromCaseList,\n\t\tmessagesUrl\n\t} = useChatMessagesList();\n\n\tif (process.env.NODE_ENV === 'development' && SHOW_LOGS) {\n\t\tconsole.log('GroupMessagesList', {\n\t\t\tentityPage,\n\t\t\tallowToLoad,\n\t\t\tdirection,\n\t\t\tstate,\n\t\t\tcursorBot,\n\t\t\tcursorTop,\n\t\t\tisLoadedRepliedMessage,\n\t\t\tscrollToMsgId,\n\t\t\tisSetSearchReply,\n\t\t\treplyLoading,\n\t\t\tsearchedMessageId,\n\t\t\tcursor,\n\t\t\tisLastPageFetched,\n\t\t\tisFirstPageFetched,\n\t\t\tpaginationDepsRef,\n\t\t\ttotalMessagesCount\n\t\t});\n\t}\n\n\tconst shouldStartFromFirstUnread = lastReadMsgIdFromQuery && direction === null;\n\tconst entityName = getChatMessagesEntityName({\n\t\tisScheduled: isScheduledChat,\n\t\tentityId: localEntityId,\n\t\tentityType\n\t});\n\n\treturn (\n\t\t<EntityContainer.All\n\t\t\tentity=\"imsMessages\"\n\t\t\tname={entityName}\n\t\t\turl={messagesUrl}\n\t\t\tprimaryKey={'custom_uuid' || 'id'}\n\t\t\tprependData={(direction === 'next' || direction === null) && !isSetSearchReply}\n\t\t\tappendData={direction === 'previous' && !isSetSearchReply}\n\t\t\tisUniq\n\t\t\tcursorBased\n\t\t\tdirection={\n\t\t\t\tlastReadMsgIdFromQuery && direction === null\n\t\t\t\t\t? '1'\n\t\t\t\t\t: cursor === Number(scrollToMsgId)\n\t\t\t\t\t? '0'\n\t\t\t\t\t: direction === 'next' || direction === null\n\t\t\t\t\t? '-1'\n\t\t\t\t\t: '1'\n\t\t\t}\n\t\t\treplaceIds={\n\t\t\t\t(isLoadedRepliedMessage && cursor === scrollToMsgId && direction === null) ||\n\t\t\t\t//Fix prepended messages issues which had to be appended on case open. This is happened when reopened already opened and closes case which had new unread messages(2158, 2170)\n\t\t\t\t(cursor === null && (direction === 'next' || direction === null)) ||\n\t\t\t\t//TODO:MIGHT BE BREAKING CHANGE\n\t\t\t\t(hasUnread && !!lastReadMsgIdFromQuery)\n\t\t\t}\n\t\t\tparams={{\n\t\t\t\tlimit: messagesLimit,\n\t\t\t\textra: {\n\t\t\t\t\tentity_id: localEntityId,\n\t\t\t\t\tcursor\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonInit={(data) => {\n\t\t\t\tafterMessagesFetchService({\n\t\t\t\t\tdata,\n\t\t\t\t\tisDelayedMessage,\n\t\t\t\t\tsetIsDelayedMessage,\n\t\t\t\t\tsetAllowToLoad,\n\t\t\t\t\tdirection,\n\t\t\t\t\tscrollToMsgId,\n\t\t\t\t\tisMsgHasBeenIndicated,\n\t\t\t\t\tcursorTop,\n\t\t\t\t\tcursorBot,\n\t\t\t\t\tscrollIntoElement,\n\t\t\t\t\tsetUpdateEntityPage,\n\t\t\t\t\tsearchedMessageId,\n\t\t\t\t\tpaginationDepsRef,\n\t\t\t\t\tcursor,\n\t\t\t\t\tsetIsLastPageFetched,\n\t\t\t\t\tmessagesLimit,\n\t\t\t\t\tsetIsFirstPageFetched,\n\t\t\t\t\ttotalMessagesCount,\n\t\t\t\t\tisLoadedRepliedMessage,\n\t\t\t\t\tvirtuosoRef\n\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\tconst messagesList = (items as IMessage[]) ?? [];\n\t\t\t\tconst anywayAllowToLoadIfNotInScrollAndIndicateMode = allowToLoad || !isSetSearchReply;\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn (\n\t\t\t\t\t<div ref={chatBodyRef} id={'chat-body'} className={clsx(`chat__body flex-grow`)}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={clsx('h-full w-full px-5', {\n\t\t\t\t\t\t\t\t// 'pb-8': process.env.NODE_ENV !== 'production',\n\t\t\t\t\t\t\t\t'pt-11': chatEntity.item?.pinned_message\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t\theight: ${isSafari && `${chatBodyHeight}px`};\n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/*Messages start*/}\n\n\t\t\t\t\t\t\t{meta ? (\n\t\t\t\t\t\t\t\t<Virtuoso\n\t\t\t\t\t\t\t\t\tcontext={{\n\t\t\t\t\t\t\t\t\t\tisFetched,\n\t\t\t\t\t\t\t\t\t\titems,\n\t\t\t\t\t\t\t\t\t\tisSetSearchReply,\n\t\t\t\t\t\t\t\t\t\tdirection,\n\t\t\t\t\t\t\t\t\t\treplyLoading,\n\t\t\t\t\t\t\t\t\t\tisConfirmationRequired: false\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tref={virtuosoRef}\n\t\t\t\t\t\t\t\t\tfirstItemIndex={meta?.firstItemIndex}\n\t\t\t\t\t\t\t\t\tincreaseViewportBy={{ top: 1000, bottom: 1000 }}\n\t\t\t\t\t\t\t\t\tinitialTopMostItemIndex={{\n\t\t\t\t\t\t\t\t\t\tindex: shouldStartFromFirstUnread ? 0 : 'LAST',\n\t\t\t\t\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\t\t\t\t\tbehavior: 'auto'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tatTopStateChange={(atTop) => {\n\t\t\t\t\t\t\t\t\t\tif (atTop) {\n\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\tanywayAllowToLoadIfNotInScrollAndIndicateMode &&\n\t\t\t\t\t\t\t\t\t\t\t\tisFetched &&\n\t\t\t\t\t\t\t\t\t\t\t\t!isFirstPageFetched\n\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\thandlePageLoading(true, 'next', entityId);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tatBottomStateChange={(atBottom) => {\n\t\t\t\t\t\t\t\t\t\tif (atBottom) {\n\t\t\t\t\t\t\t\t\t\t\t//todo: refactor this\n\n\t\t\t\t\t\t\t\t\t\t\t// if (isLastPageFetched) {\n\t\t\t\t\t\t\t\t\t\t\tsetScrollPosition(true);\n\t\t\t\t\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\t\t\t\t\t//remove unread count if we react the end of chat and there is still unread count left\n\t\t\t\t\t\t\t\t\t\t\tif (isLastPageFetched && !!groupsUnreadCountData?.[chatId]) {\n\t\t\t\t\t\t\t\t\t\t\t\tremoveUnreadCountFromCaseList();\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif (allowToLoad && isFetched && !isLastPageFetched) {\n\t\t\t\t\t\t\t\t\t\t\t\thandlePageLoading(true, 'previous', entityId);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!atBottom) {\n\t\t\t\t\t\t\t\t\t\t\tsetScrollPosition(false);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tdata={messagesList}\n\t\t\t\t\t\t\t\t\titemContent={(_, item) => {\n\t\t\t\t\t\t\t\t\t\tconst tempMessage = {\n\t\t\t\t\t\t\t\t\t\t\tid: 100000000,\n\t\t\t\t\t\t\t\t\t\t\tname: 'Error message',\n\t\t\t\t\t\t\t\t\t\t\ttext: 'Error occured. This message is not valid',\n\t\t\t\t\t\t\t\t\t\t\ttype: 'ERROR',\n\t\t\t\t\t\t\t\t\t\t\tfrom_user: {}\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tconst idx = messagesList.findIndex((message) => message.id === item.id);\n\n\t\t\t\t\t\t\t\t\t\t//Set isFirstUnread to true if case has unread, not searched case\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tNumber(query?.lastReadMessage) === item.id &&\n\t\t\t\t\t\t\t\t\t\t\thasUnreadCached &&\n\t\t\t\t\t\t\t\t\t\t\t!searchedMessageId\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tfirstUnread.current = messagesList[idx + 1]?.id;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tconst isFirstUnread =\n\t\t\t\t\t\t\t\t\t\t\tfirstUnread.current && item.id && firstUnread.current === item.id;\n\n\t\t\t\t\t\t\t\t\t\tconst mapKey = item ? item?.custom_uuid || item.id : tempMessage.id;\n\n\t\t\t\t\t\t\t\t\t\tconst { isSameFromUserWithPrev, isSameFromUserWithNext } = checkMsgAuthor({\n\t\t\t\t\t\t\t\t\t\t\tcurrentMsgAuthorId: item.from_user.id,\n\t\t\t\t\t\t\t\t\t\t\tprevMsgAuthorId: messagesList[idx - 1]?.from_user.id,\n\t\t\t\t\t\t\t\t\t\t\tnextMsgAuthorId: messagesList[idx + 1]?.from_user.id,\n\t\t\t\t\t\t\t\t\t\t\tprevMsgType: messagesList[idx - 1]?.type,\n\t\t\t\t\t\t\t\t\t\t\tnextMsgType: messagesList[idx + 1]?.type\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tconst content = (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t{isFirstUnread && messagesList?.length > 1 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"my-2 mx-0 w-full bg-kgrey-inputBg text-center text-kdark-424242 dark:bg-kdark-dark333 dark:text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('unread_messages')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t<ChatMessage\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={mapKey}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage={item || tempMessage}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisSameFromUserWithPrev={isSameFromUserWithPrev}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisSameFromUserWithNext={isSameFromUserWithNext}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<VizSensor\n\t\t\t\t\t\t\t\t\t\t\t\tkey={mapKey}\n\t\t\t\t\t\t\t\t\t\t\t\toffset={{ bottom: 50 }}\n\t\t\t\t\t\t\t\t\t\t\t\tscrollDelay={50}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(isVisible) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessageVisibleHandler(isVisible, item);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<div>{content}</div>\n\t\t\t\t\t\t\t\t\t\t\t</VizSensor>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tcomponents={{\n\t\t\t\t\t\t\t\t\t\tScroller: VirtuosoScrollWrapper,\n\t\t\t\t\t\t\t\t\t\tItem: VirtuosoCustomItem,\n\t\t\t\t\t\t\t\t\t\tFooter: !isLastPageFetched ? VirtuosoFooter : undefined\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<ChatMessagesLoader />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{/*Messages end*/}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityContainer.All>\n\t);\n}\n\nexport function GroupMessagesList(props: Props) {\n\tconst resetKeys = useMemo(() => props.chatId, [props.chatId]);\n\n\tconst resetHandler = useCallback(() => {\n\t\twindow.location.reload();\n\t}, []);\n\n\treturn (\n\t\t<ErrorBoundary resetKeys={resetKeys as unknown as unknown[]} onResetHandler={resetHandler}>\n\t\t\t<GroupMessagesListInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React, { useEffect, useState } from 'react';\nimport { ChatInputLayout } from 'shared/components/Chat/components';\nimport { useChatInputContext } from 'shared/contexts/ChatInputContext';\nimport { useChatMessage, useDraftMessage, useUpdateEntities } from 'shared/hooks';\nimport { useChatSocket } from 'shared/contexts/ChatSocketContext';\nimport { useChatContext } from 'shared/contexts/ChatContext';\nimport { nanoid } from 'nanoid';\n\nimport { useSelector } from 'react-redux';\nimport Selectors from 'modules/entity/selectors';\nimport { useAppState } from 'shared/state';\nimport { ErrorBoundary } from 'shared/components';\n\nconst getOne = Selectors.getOne();\n\ntype Props = {\n\tisAllowedSendMsg: boolean | undefined;\n};\n\nexport function GroupChatInputControlsInner({ isAllowedSendMsg }: Props) {\n\tconst {\n\t\tsetMessage,\n\t\treply,\n\t\tsetReply,\n\t\teditingMessage,\n\t\tisDelayedMessage,\n\t\tsetIsDelayedMessage,\n\t\tmessage,\n\t\tisMentionSearching,\n\t\tsetMessageScheduleDate,\n\t\tmessageScheduleDate,\n\t\thandleScheduleModalToggle\n\t} = useChatInputContext();\n\tconst { entityId, entityType, isLastPageFetched, isScheduledChat } = useChatContext();\n\tconst { sendJsonMessage } = useChatSocket();\n\tconst { sendChatMessage } = useChatMessage({\n\t\tsendJsonMessage,\n\t\tentityId,\n\t\tentityType\n\t});\n\tconst { updateEntities } = useUpdateEntities();\n\tconst { setActiveDraft, activeDraft } = useAppState();\n\tconst { removeLS, updateEntityDraft, getLS, sendDeleteDraft } = useDraftMessage();\n\tconst [tempMessageEvent, setTempMessageEvent] = useState<\n\t\tReact.FormEvent<HTMLFormElement> | React.KeyboardEvent<HTMLTextAreaElement> | null\n\t>(null);\n\tconst draftObject = getLS();\n\n\tconst caseChatEntity = useSelector((state) =>\n\t\tgetOne(state, {\n\t\t\tid: entityId,\n\t\t\tentity: entityType === 'case' ? 'cases' : 'ims-chats',\n\t\t\tname: `${entityType === 'case' ? 'CaseChat' : 'GroupChat'}-${entityId}One`\n\t\t})\n\t);\n\n\tconst onSubmit = (\n\t\te: React.FormEvent<HTMLFormElement> | React.KeyboardEvent<HTMLTextAreaElement>\n\t) => {\n\t\tif (isMentionSearching) {\n\t\t\treturn;\n\t\t}\n\n\t\te?.preventDefault();\n\t\tif (tempMessageEvent) setTempMessageEvent(null);\n\t\t// if (!!caseChatEntity.item?.draft_message || entityId in draftObject) {\n\t\tif (activeDraft || entityId in draftObject) {\n\t\t\tupdateEntityDraft('reset');\n\t\t\tsetActiveDraft(null);\n\t\t\tremoveLS(entityId);\n\t\t\tsendDeleteDraft();\n\t\t}\n\t\t//Update pinned message if we edit pinned message\n\t\tif (editingMessage && editingMessage?.id === caseChatEntity?.item.pinned_message?.id) {\n\t\t\tupdateEntities({\n\t\t\t\tentity: 'ims-chats',\n\t\t\t\tentityId: entityId,\n\t\t\t\tupdatingData: {\n\t\t\t\t\tpinned_message: { ...caseChatEntity?.item?.pinned_message, text: message }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tsendChatMessage({\n\t\t\ttype: 'text',\n\t\t\treplied_to_id: reply ? reply.id : null,\n\t\t\treplied_to: null,\n\t\t\tmsgSendingChatId: entityId,\n\t\t\tuuid: nanoid(),\n\t\t\tedited: !!editingMessage,\n\t\t\tis_draft: !!caseChatEntity.item?.draft_message,\n\t\t\tscheduled_to: messageScheduleDate\n\t\t});\n\t\tsetMessage('');\n\t\tsetMessageScheduleDate(null);\n\n\t\tif (reply) setReply(null);\n\t};\n\n\t//sending text message after selecting scheduling date&time in schedule chat\n\tuseEffect(() => {\n\t\tif (isScheduledChat && messageScheduleDate && tempMessageEvent) {\n\t\t\tonSubmit(tempMessageEvent);\n\t\t}\n\t}, [messageScheduleDate]);\n\n\t//Sending message when not all initial pages have been loaded\n\tuseEffect(() => {\n\t\tif (!isDelayedMessage && tempMessageEvent) {\n\t\t\t//send delayed message when page 1 messages has been loaded\n\t\t\tonSubmit(tempMessageEvent);\n\t\t}\n\t}, [isDelayedMessage]);\n\n\tconst handleSubmit = (\n\t\te: React.FormEvent<HTMLFormElement> | React.KeyboardEvent<HTMLTextAreaElement>\n\t) => {\n\t\te.preventDefault();\n\n\t\t//before sending message, we select scheduling date&time and then send message in scheduled chats\n\t\tif (isScheduledChat && !messageScheduleDate && !editingMessage && message) {\n\t\t\thandleScheduleModalToggle();\n\t\t\tsetTempMessageEvent(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isLastPageFetched && !editingMessage) {\n\t\t\t//if we are  in the above through scrolling to upper\n\t\t\t// pages, we must load page 1 message before sending message\n\t\t\tsetIsDelayedMessage(true);\n\t\t\tsetTempMessageEvent(e);\n\t\t\treturn;\n\t\t}\n\t\tonSubmit(e);\n\t};\n\n\treturn (\n\t\t<ChatInputLayout\n\t\t\tonFormSubmit={handleSubmit}\n\t\t\tisAllowedSendMsg={isAllowedSendMsg}\n\t\t\tisGroup={true}\n\t\t/>\n\t);\n}\n\nexport function GroupChatInputControls(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<GroupChatInputControlsInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport { SwitchComp } from '../../../shared/components/Elements/Fields';\nimport { useTranslationHelpers } from 'shared/hooks/useTranslationHelpers';\nimport clsx from 'clsx';\n\ntype Props = {\n\ttext: string;\n\tComponent: any;\n\ticonProp: any;\n\tfield_name: string;\n\thandleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n\tproperty: any;\n};\n\nexport function PermissionItem({\n\ttext,\n\tComponent,\n\ticonProp,\n\tfield_name,\n\thandleChange,\n\tproperty\n}: Props) {\n\tconst { isRTL } = useTranslationHelpers();\n\treturn (\n\t\t<div className=\"permissions__item mb-4 \">\n\t\t\t<div className=\"permission flex items-center rounded-xl bg-white p-3 shadow-lg dark:bg-kdark-dark333\">\n\t\t\t\t<div className=\"icon flex-centered h-10 w-10 rounded-lg bg-primary\">\n\t\t\t\t\t<div className=\"text-white\">{<Component {...iconProp} />}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mx-4 text-sm\">{text}</div>\n\t\t\t\t<div className={clsx({ 'ml-auto': !isRTL, 'mr-auto': isRTL })}>\n\t\t\t\t\t<SwitchComp\n\t\t\t\t\t\thandleChange={(e) => handleChange(e)}\n\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\tname={field_name}\n\t\t\t\t\t\tchecked={property[field_name]}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\n\ntype Props = {\n\thandler: () => void;\n\tIcon: React.ElementType;\n\ttext: string;\n};\n\nexport function ChatPermissionMenuItem({ handler, Icon, text }: Props) {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"permissions__leave flex cursor-pointer items-center pl-2 font-semibold transition hover:text-primary\"\n\t\t\tonClick={handler}\n\t\t>\n\t\t\t<div className=\"icon flex-centered h-10  w-10\">\n\t\t\t\t<Icon />\n\t\t\t</div>\n\t\t\t<div className=\"ml-2 text-sm\">{text}</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { GroupImage } from '../../../shared/interfaces';\nimport { GroupFormElements } from './GroupFormElements';\nimport EntityForm from '../../../modules/entity/forms';\nimport { useAppState } from '../../../shared/state';\n\ntype Props = {\n\tonSuccess: () => void;\n\ttitle: string;\n\tdescription: string;\n\timage: null | GroupImage;\n\tid: number;\n};\n\nexport function EditGroupForm({ onSuccess, title, description, image, id }: Props) {\n\tconst { groupSearchQuery, companyId } = useAppState();\n\n\treturn (\n\t\t<>\n\t\t\t<EntityForm.Main\n\t\t\t\tentity={'ims-chats'}\n\t\t\t\tname={`AllImsChats-${companyId}-${groupSearchQuery}`}\n\t\t\t\turl={`/${companyId}/ims/groups/${id}/`}\n\t\t\t\tid={id}\n\t\t\t\tmethod=\"put\"\n\t\t\t\tprimaryKey=\"id\"\n\t\t\t\tsendAsFormData={false}\n\t\t\t\tnormalizeData={(data: any) => data}\n\t\t\t\tprependData\n\t\t\t\tfields={[\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'title',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalue: title,\n\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\tvalue: description,\n\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'image',\n\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tvalue: image\n\t\t\t\t\t}\n\t\t\t\t]}\n\t\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\t\tonSuccess();\n\t\t\t\t\tresetForm();\n\t\t\t\t}}\n\t\t\t\tonError={(error, resetForm): any => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({ isSubmitting, values, setFieldValue }) => {\n\t\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\t\tconsole.log('group edit values', values);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<GroupFormElements\n\t\t\t\t\t\t\tonSuccess={onSuccess}\n\t\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\tisEditing\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</EntityForm.Main>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport { GroupImage } from 'shared/interfaces';\nimport { useGroupRequest } from '../hooks/useGroupRequest';\nimport { ConfirmModal, ErrorBoundary } from 'shared/components';\nimport { GoMute, GoUnmute } from 'react-icons/go';\nimport { IoExitOutline } from 'react-icons/io5';\nimport { PermissionItem } from './PermissionItem';\nimport { ChatPermissionMenuItem } from './ChatPermissionMenuItem';\nimport { MdOutlineDelete } from 'react-icons/md';\nimport { FiEdit } from 'react-icons/fi';\nimport { useWhiteModal } from '../../../shared/hooks';\nimport { EditGroupForm } from './EditGroupForm';\nimport { useAppState } from '../../../shared/state';\nimport { t } from 'i18next';\n\ntype Props = {\n\ttitle: string;\n\timage: null | GroupImage;\n\tmembersCount: number;\n\tisMuted: boolean | undefined;\n\tchatId: number;\n\t// handleMute: (chatId: number, changingData: { [key: string]: any }) => void;\n\tmemberId: number | undefined;\n\tisOwner: boolean;\n};\n\nfunction PermissionsInner({\n\ttitle,\n\timage,\n\tmembersCount,\n\tisMuted,\n\tchatId,\n\tmemberId,\n\tisOwner\n}: Props) {\n\tconst {\n\t\tleaveGroupChat,\n\t\tpermissions,\n\t\thandlePropertyChange,\n\t\tproperty,\n\t\thandlerSwitchMute,\n\t\tcanLeaveChat,\n\t\tcanDeleteChat,\n\t\tdeleteVisible,\n\t\tdeleteLoading,\n\t\ttoggleDeleteVisible,\n\t\tdeleteGroupChat,\n\t\texitLoading,\n\t\topen,\n\t\tsetExitOpen,\n\t\timsData,\n\t\tcurrentUserProperty\n\t} = useGroupRequest({\n\t\tchatId,\n\t\tisMuted,\n\t\tmemberId\n\t});\n\n\tconst { isAdmin } = useAppState();\n\n\tconst { open: openEditModal, modalHandler, WhiteModal } = useWhiteModal();\n\treturn (\n\t\t<div className=\"w-72 \">\n\t\t\t<div className=\"permissions font-poppins\">\n\t\t\t\t<div className=\"permissions__top\">\n\t\t\t\t\t<div className=\"permission__header flex rounded-lg bg-primary p-2 text-white  shadow-lg\">\n\t\t\t\t\t\t<div className=\"permissions__img flex-centered mx-2 h-14 w-14 flex-shrink-0 overflow-hidden rounded-md bg-white text-primary-dark\">\n\t\t\t\t\t\t\t{image ? <img src={image.thumbnail_150} alt={title} /> : title?.[0].toUpperCase()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"permissions__header-text flex-grow \">\n\t\t\t\t\t\t\t<div className=\"flex-center-between text-base\">\n\t\t\t\t\t\t\t\t<span>{title}</span>\n\t\t\t\t\t\t\t\t{isAdmin || isOwner || currentUserProperty?.is_allowed_edit_info ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName=\"cursor-pointer transition hover:text-primary-dark\"\n\t\t\t\t\t\t\t\t\t\tonClick={modalHandler}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<FiEdit />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t\t\t<WhiteModal handleModalOpen={modalHandler} open={openEditModal}>\n\t\t\t\t\t\t\t\t\t<EditGroupForm\n\t\t\t\t\t\t\t\t\t\tonSuccess={modalHandler}\n\t\t\t\t\t\t\t\t\t\ttitle={imsData.title}\n\t\t\t\t\t\t\t\t\t\tdescription={imsData.description}\n\t\t\t\t\t\t\t\t\t\timage={imsData.image}\n\t\t\t\t\t\t\t\t\t\tid={imsData.id}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"text-sm\">\n\t\t\t\t\t\t\t\t{t('members_lowercase', { membersCount: String(membersCount) })}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"permissions__content mt-4\">\n\t\t\t\t\t{/*Permission with Switch component*/}\n\t\t\t\t\t{permissions.map((permission) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<React.Fragment key={permission.text}>\n\t\t\t\t\t\t\t\t{permission.show ? (\n\t\t\t\t\t\t\t\t\t<PermissionItem\n\t\t\t\t\t\t\t\t\t\tkey={permission.text}\n\t\t\t\t\t\t\t\t\t\ttext={permission.text}\n\t\t\t\t\t\t\t\t\t\tComponent={permission.Component}\n\t\t\t\t\t\t\t\t\t\ticonProp={permission.iconProp}\n\t\t\t\t\t\t\t\t\t\tfield_name={permission.field_name}\n\t\t\t\t\t\t\t\t\t\thandleChange={handlePropertyChange}\n\t\t\t\t\t\t\t\t\t\tproperty={property}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\n\t\t\t\t\t{/*Mute Notifications*/}\n\t\t\t\t\t<ChatPermissionMenuItem\n\t\t\t\t\t\ttext={isMuted ? t('unmute_notifications') : t('mute_notifications')}\n\t\t\t\t\t\thandler={() => handlerSwitchMute(isMuted as boolean)}\n\t\t\t\t\t\tIcon={isMuted ? GoMute : GoUnmute}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{/*Delete Chat Notifications*/}\n\t\t\t\t\t{canDeleteChat ? (\n\t\t\t\t\t\t<ChatPermissionMenuItem\n\t\t\t\t\t\t\ttext={t('delete_group')}\n\t\t\t\t\t\t\thandler={toggleDeleteVisible}\n\t\t\t\t\t\t\tIcon={MdOutlineDelete}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t{/*Exit Group Chat*/}\n\t\t\t\t\t{canLeaveChat ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ChatPermissionMenuItem\n\t\t\t\t\t\t\t\ttext={t('leave_group')}\n\t\t\t\t\t\t\t\thandler={() => setExitOpen(true)}\n\t\t\t\t\t\t\t\tIcon={IoExitOutline}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\tfeatureHandler={leaveGroupChat}\n\t\t\t\t\t\tisOpen={Boolean(open)}\n\t\t\t\t\t\ttoggleHandler={() => setExitOpen((prev) => !prev)}\n\t\t\t\t\t\ttitle={t('exit_group_confirmation', title)}\n\t\t\t\t\t\thasLoader\n\t\t\t\t\t\tisLoading={exitLoading}\n\t\t\t\t\t/>\n\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\tfeatureHandler={deleteGroupChat}\n\t\t\t\t\t\tisOpen={Boolean(deleteVisible)}\n\t\t\t\t\t\ttoggleHandler={toggleDeleteVisible}\n\t\t\t\t\t\ttitle={t('delete_group_confirmation', title)}\n\t\t\t\t\t\thasLoader\n\t\t\t\t\t\tisLoading={deleteLoading}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport function Permissions(props: Props) {\n\treturn (\n\t\t<ErrorBoundary isCompact>\n\t\t\t<PermissionsInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import { useAxios, useGetEntityOne, useQueryParams, useUpdateEntities } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\nimport { useEntityForm } from 'modules/entity/hooks/useEntityForm';\nimport { Dispatch, SetStateAction, useCallback, useEffect, useRef, useState } from 'react';\nimport { BiMessageSquareDetail } from 'react-icons/bi';\nimport { CgAdd } from 'react-icons/cg';\nimport { MdHistoryEdu, MdOutlineRemoveCircleOutline } from 'react-icons/md';\nimport { AiOutlineEdit, AiOutlinePushpin } from 'react-icons/ai';\nimport { IoExitOutline } from 'react-icons/io5';\nimport get from 'lodash/get';\nimport { ChatMember } from '../types';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\nimport { GroupMember, IGroupChat } from '../../../shared/interfaces';\nimport { useTranslation } from 'react-i18next';\n\ntype GroupRequests = {\n\tchatId: number;\n\tisMuted?: boolean | undefined;\n\tmemberId?: number | undefined;\n\tmutingCallback?: (chatId: number, data: { [key: string]: any }) => void;\n\tsetExitLoading?: Dispatch<SetStateAction<boolean>>;\n\tsetExitOpen?: Dispatch<SetStateAction<boolean>>;\n};\n\nexport function useGroupRequest({ chatId, isMuted, memberId }: GroupRequests) {\n\tconst { t } = useTranslation();\n\tconst { companyId, groupSearchQuery, isAdmin } = useAppState();\n\tconst { userData } = useAuth();\n\tconst { removeQueryParams, query } = useQueryParams();\n\n\tconst [exitLoading, setExitLoading] = useState(false);\n\tconst [open, setExitOpen] = useState(false);\n\n\tconst [deleteVisible, setDeleteVisible] = useState(false);\n\tconst [deleteLoading, setDeleteLoading] = useState(false);\n\n\tconst toggleDeleteVisible = () => setDeleteVisible((prev) => !prev);\n\tconst toggleDeleteLoading = () => setDeleteLoading((prev) => !prev);\n\n\tconst propertyRef = useRef<null | IGroupChat>(null);\n\n\tconst { updateEntities } = useUpdateEntities();\n\n\tconst entityId = query?.searchedMessageId ? query?.searchedMessageId : chatId;\n\n\tconst chatEntity = useGetEntityOne({\n\t\tentity: 'ims-chats',\n\t\tentityId: chatId,\n\t\tentityName: `GroupChat-${entityId}One`\n\t});\n\n\tuseEffect(() => {\n\t\tpropertyRef.current = chatEntity.item.property;\n\t}, [chatEntity.item.property]);\n\n\tconst owner = (get(chatEntity, 'item.members', []) as ChatMember[]).find(\n\t\t(member) => member.role === 'OWNER'\n\t);\n\tconst currentMember = (get(chatEntity, 'item.members', []) as ChatMember[]).find(\n\t\t(member) => member.user.id === userData.id\n\t);\n\t// const isAllowedExitGroup = currentMember?.is_allowed_exit_group;\n\tconst isOwner = owner?.user.id === userData.id;\n\n\tlet canLeaveChat = true;\n\tif (isOwner || isAdmin || !currentMember?.is_allowed_exit_group) canLeaveChat = false;\n\n\tlet canDeleteChat = false;\n\tif (isAdmin || isOwner || currentMember?.is_allowed_delete_group) canDeleteChat = true;\n\n\t//Update Permission accept muted and delete chat\n\tconst { fetchData: updatePermission } = useAxios({\n\t\turl: `/${companyId}/ims/groups/${chatId}/`,\n\t\tdynamicValues: true,\n\t\tmethod: 'put',\n\t\tcb: {\n\t\t\tsuccess: (data, args) => {},\n\t\t\terror: (error, args) => {\n\t\t\t\tsetPropertyHandler(args[0]?.fieldName, !args[0]?.checked);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst handleMute = useCallback(\n\t\t(chatId, changingData) => {\n\t\t\tupdateEntities({\n\t\t\t\tentity: 'ims-chats',\n\t\t\t\tentityId: chatId,\n\t\t\t\tupdatingData: {\n\t\t\t\t\tmembers: [\n\t\t\t\t\t\t...chatEntity?.item?.members.filter(\n\t\t\t\t\t\t\t(member: GroupMember) => member.user.id !== userData.id\n\t\t\t\t\t\t),\n\t\t\t\t\t\t{ ...currentMember, ...changingData }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[chatEntity?.item]\n\t);\n\n\tconst setPropertyHandler = (fieldName: string, checked: boolean) => {\n\t\tconst chatProperty = { ...propertyRef.current } || {};\n\n\t\tupdateEntities({\n\t\t\tentity: 'ims-chats',\n\t\t\tentityId: chatId,\n\t\t\tupdatingData: {\n\t\t\t\tproperty: {\n\t\t\t\t\t...chatProperty,\n\t\t\t\t\t[fieldName]: checked\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tconst handlePropertyChange = useCallback(\n\t\tasync (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\tconst name = event.target.name;\n\t\t\tconst checked = event.target.checked;\n\n\t\t\tsetPropertyHandler(name, checked);\n\n\t\t\t//Send api request to change Permission\n\t\t\tawait updatePermission({ values: { [name]: checked }, fieldName: name, checked });\n\t\t},\n\t\t[chatEntity.item.property]\n\t);\n\n\t//mute/unmute notifications\n\tconst { fetchData: handleChatMute } = useAxios({\n\t\turl: `/${companyId}/ims/groups/${chatId}/`,\n\t\tmethod: 'put',\n\t\tvalues: {\n\t\t\tis_mute: !isMuted\n\t\t},\n\t\tcb: {\n\t\t\tsuccess: (data, args) => {},\n\t\t\terror: (error, args) => {\n\t\t\t\thandleMute?.(chatId, { is_mute: isMuted });\n\t\t\t}\n\t\t}\n\t});\n\n\tconst { handleLocalDelete } = useEntityForm({\n\t\tentity: 'ims-chats',\n\t\tname: `AllImsChats-${companyId}-`,\n\t\tdeleteData: true,\n\t\tid: chatId,\n\t\turl: '',\n\t\tmethod: 'delete',\n\t\tcb: {\n\t\t\tsuccess: (data) => {},\n\t\t\terror: (errors) => {},\n\t\t\tfinally: () => {}\n\t\t}\n\t});\n\n\tconst { handleRequest: handleExitRequest } = useEntityForm({\n\t\tentity: 'ims-chats',\n\t\tname: `AllImsChats-${companyId}-${groupSearchQuery}`,\n\t\tmethod: open ? 'patch' : 'delete',\n\t\turl: open\n\t\t\t? `/${companyId}/ims/groups/${chatId}/members/${memberId}/leave/`\n\t\t\t: `/${companyId}/ims/groups/${chatId}/`,\n\t\tdeleteData: true,\n\t\tid: Number(entityId) as string | number | undefined,\n\t\tcb: {\n\t\t\tsuccess: (data) => {\n\t\t\t\tsetExitLoading?.(false); //stop loading spinner\n\t\t\t\tsetExitOpen?.(false); // close modal\n\n\t\t\t\tdeleteLoading && toggleDeleteLoading();\n\t\t\t\tdeleteVisible && toggleDeleteVisible();\n\n\t\t\t\tremoveQueryParams(); // close open chat\n\n\t\t\t\tif (groupSearchQuery) {\n\t\t\t\t\t//Because search mode has different entity name in\n\t\t\t\t\t// redux state we must remove chat from not search mode entity too.\n\t\t\t\t\t//Or it will remain in chat list when we clear search query from input\n\t\t\t\t\thandleLocalDelete();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: (error) => {\n\t\t\t\tsetExitLoading?.(false);\n\t\t\t\ttoggleDeleteLoading();\n\t\t\t},\n\t\t\tfinally: () => {}\n\t\t}\n\t});\n\n\tconst deleteGroupChat = () => {\n\t\ttoggleDeleteLoading();\n\t\thandleExitRequest();\n\t};\n\n\tconst leaveGroupChat = () => {\n\t\tsetExitLoading?.(true);\n\t\thandleExitRequest();\n\t};\n\n\tconst localDelete = () => {\n\t\thandleLocalDelete();\n\t\tsetExitOpen?.(false);\n\t\tremoveQueryParams();\n\t};\n\n\tconst handlerSwitchMute = (isMuting: boolean) => {\n\t\t//Optimistic update of state\n\t\thandleMute(chatId, { is_mute: !isMuting });\n\n\t\t//CallAsync request\n\t\thandleChatMute(isMuting);\n\t};\n\n\tconst permissions = [\n\t\t{\n\t\t\tComponent: BiMessageSquareDetail,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: {},\n\t\t\ttext: t('send_message'),\n\t\t\tfield_name: 'is_allowed_send_msg',\n\t\t\tshow: isAdmin || isOwner\n\t\t},\n\t\t{\n\t\t\tComponent: CgAdd,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: {},\n\t\t\ttext: t('add_users'),\n\t\t\tfield_name: 'is_allowed_add_user',\n\t\t\tshow: isAdmin || isOwner\n\t\t},\n\t\t{\n\t\t\tComponent: MdOutlineRemoveCircleOutline,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: {},\n\t\t\ttext: t('remove_users'),\n\t\t\tfield_name: 'is_allowed_remove_user',\n\t\t\tshow: isAdmin || isOwner\n\t\t},\n\t\t{\n\t\t\tComponent: AiOutlinePushpin,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: {},\n\t\t\ttext: t('pin_message'),\n\t\t\tfield_name: 'is_allowed_pin_msg',\n\t\t\tshow: isAdmin || isOwner\n\t\t},\n\t\t{\n\t\t\tComponent: AiOutlineEdit,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: { width: 11, height: 11 },\n\t\t\ttext: t('edit_group_info'),\n\t\t\tfield_name: 'is_allowed_edit_info',\n\t\t\tshow: isAdmin || isOwner\n\t\t},\n\t\t{\n\t\t\tComponent: IoExitOutline,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: { className: 'chat-icon-exit' },\n\t\t\ttext: t('exit_from_group'),\n\t\t\tfield_name: 'is_allowed_exit_group',\n\t\t\tshow: isAdmin || isOwner\n\t\t},\n\t\t{\n\t\t\tComponent: MdHistoryEdu,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: { className: 'chat-icon-exit' },\n\t\t\ttext: t('show_chat_history'),\n\t\t\tfield_name: 'show_history',\n\t\t\tclassName: 'white-icon',\n\t\t\thandler: () => {},\n\t\t\thasSwitch: true,\n\t\t\tshow: isAdmin || isOwner\n\t\t}\n\t];\n\n\treturn {\n\t\tleaveGroupChat,\n\t\tlocalDelete,\n\t\tpermissions,\n\t\thandlePropertyChange,\n\t\tcurrentUserProperty:\n\t\t\tchatEntity?.item?.members.find((member: GroupMember) => member?.id === memberId) ?? {},\n\t\tproperty: chatEntity?.item?.property ?? {},\n\t\thandlerSwitchMute,\n\t\tcanLeaveChat,\n\t\tcanDeleteChat,\n\t\tdeleteVisible,\n\t\tdeleteLoading,\n\t\ttoggleDeleteVisible,\n\t\tdeleteGroupChat,\n\t\texitLoading,\n\t\topen,\n\t\tsetExitOpen,\n\t\timsData: chatEntity?.item\n\t};\n}\n","import React, { useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { useDebounce } from 'use-debounce';\nimport EntityContainer from 'modules/entity/containers';\nimport { useChatContext } from 'shared/contexts';\nimport { useAppState } from 'shared/state';\nimport { GroupMember } from 'shared/interfaces';\nimport { AvatarSized } from 'shared/components/Elements';\nimport { ErrorBoundary, LoadMoreVisible } from 'shared/components';\nimport ContentLoader from 'react-content-loader';\n\nexport function GroupChatMembersInner() {\n\tconst [query, setQuery] = useState('');\n\tconst [page, setPage] = useState(1);\n\tconst [searchQuery] = useDebounce(query, 300);\n\tconst { entityId } = useChatContext();\n\tconst { companyId } = useAppState();\n\treturn (\n\t\t<div className={'group-members'}>\n\t\t\t<h2 className={'mb-4 text-xl font-bold'}>Group chat members</h2>\n\t\t\t<div className=\"mb-4\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t'inline-block w-full rounded-xl border p-2 outline-none hover:border-primary focus:border-primary dark:bg-kdark-lighter dark:text-white'\n\t\t\t\t\t}\n\t\t\t\t\tvalue={query}\n\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t\tplaceholder={'Search members'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"group-members__content h-48\">\n\t\t\t\t<Scrollbars autoHide style={{ height: '100%' }}>\n\t\t\t\t\t<EntityContainer.All\n\t\t\t\t\t\tentity={`group-members`}\n\t\t\t\t\t\tname={`GroupMembers-${entityId}`}\n\t\t\t\t\t\turl={`/${companyId}/ims/${entityId}/members_list/`}\n\t\t\t\t\t\tparams={{\n\t\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\t\tsearch: searchQuery\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpage,\n\t\t\t\t\t\t\tlimit: 10\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tappendData\n\t\t\t\t\t>\n\t\t\t\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\t\t\t\tconst members = [...items] as GroupMember[];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{members.map((item) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"msg-info__content-user mb-3 flex items-center\" key={item.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"avatar mr-3 flex-shrink-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<AvatarSized\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={36}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsmallSize={36}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={''}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tletter={`${item.user.first_name[0]}${item.user.last_name[0]}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`${item.user.first_name} ${item.user.last_name}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.user.avatar?.thumbnail_150 ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.user.avatar?.thumbnail ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.user.avatar?.url\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// color={item.user.color}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"msg-info__user-content\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"msg-info__user-name mb-1 text-sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{`${item.user.first_name} ${item.user.last_name}`}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.role === 'OWNER' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"italic text-kgrey\"> Group owner</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t{!isFetched\n\t\t\t\t\t\t\t\t\t\t? [...Array(6)].map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={'mb-2'} key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MembersSkeleton />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t{isFetched &&\n\t\t\t\t\t\t\t\t\tmeta?.current_page &&\n\t\t\t\t\t\t\t\t\tmeta?.last_page &&\n\t\t\t\t\t\t\t\t\tmeta?.current_page < meta?.last_page ? (\n\t\t\t\t\t\t\t\t\t\t<LoadMoreVisible setPage={() => setPage((prev) => prev + 1)} />\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</EntityContainer.All>\n\t\t\t\t</Scrollbars>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport function GroupChatMembers() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<GroupChatMembersInner />\n\t\t</ErrorBoundary>\n\t);\n}\n\nfunction MembersSkeleton() {\n\treturn (\n\t\t<ContentLoader\n\t\t\tspeed={2}\n\t\t\twidth={369}\n\t\t\theight={40}\n\t\t\tviewBox=\"0 0 369 40\"\n\t\t\tbackgroundColor=\"#f3f3f3\"\n\t\t\tforegroundColor=\"#ecebeb\"\n\t\t>\n\t\t\t<circle cx=\"75\" cy=\"125\" r=\"27\" />\n\t\t\t<circle cx=\"30\" cy=\"20\" r=\"20\" />\n\t\t\t<rect x=\"55\" y=\"10\" rx=\"4\" ry=\"4\" width=\"69\" height=\"18\" />\n\t\t\t<rect x=\"131\" y=\"10\" rx=\"4\" ry=\"4\" width=\"151\" height=\"18\" />\n\t\t</ContentLoader>\n\t);\n}\n","import { useAppState } from '../../../shared/state';\n\nexport function useGroupMessageSearch() {\n\tconst { setGroupSearchOpen, groupSearchOpen } = useAppState();\n\tconst handleSearchBtnClick = () => {\n\t\tconsole.log('clicked');\n\t};\n\n\tconst toggleSearchSidebar = () => setGroupSearchOpen(!groupSearchOpen);\n\n\treturn { handleSearchBtnClick, toggleSearchSidebar };\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport get from 'lodash/get';\nimport classnames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { convertToLocalizationKey } from 'shared/services/utils/convertToLocalizationKey';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\t'& > *': {\n\t\t\tmargin: theme.spacing(1)\n\t\t}\n\t},\n\tpurple: {\n\t\tcolor: theme.palette.getContrastText(deepPurple[500]),\n\t\tbackgroundColor: deepPurple[500]\n\t}\n}));\n\ntype Props = {\n\tmember: any;\n\tareAddedMembers?: boolean;\n\tonClickHandler?: (id: any, member: any) => void;\n\tselectedMembers?: any;\n\tisAddingMember?: boolean;\n\tisOwner?: boolean;\n\tisAdminManager?: boolean;\n\tshowChatEditSettingModal?: (member: any) => void;\n\tsetOpen?: any;\n\tcurrentMember?: any;\n};\n\nconst ChatMember = ({\n\tmember,\n\tareAddedMembers,\n\tonClickHandler = () => {},\n\tselectedMembers = [],\n\tisAddingMember = false,\n\tisOwner = false,\n\tisAdminManager,\n\tshowChatEditSettingModal = () => {},\n\tsetOpen,\n\tcurrentMember\n}: Props) => {\n\tconst { t } = useTranslation();\n\tconst classes = useStyles();\n\tconst firstName = isAddingMember ? member.first_name : get(member, 'user.first_name');\n\tconst lastName = isAddingMember ? member.last_name : get(member, 'user.last_name');\n\tconst companyName = get(member, 'company.name');\n\tconst isIndividualClient = isAddingMember\n\t\t? companyName === member?.username\n\t\t: companyName === get(member, 'user.username');\n\tconst avatarSrc = isAddingMember\n\t\t? get(member, 'avatar.thumbnail_150')\n\t\t: get(member, 'user.avatar.thumbnail_150');\n\tconst FN = firstName[0]?.toUpperCase();\n\tconst LN = lastName[0]?.toUpperCase();\n\tconst name = `${firstName} ${lastName}`;\n\tconst userId = isAddingMember ? member.id : get(member, 'user.id');\n\tconst role = !isAddingMember ? member.role : null;\n\tconst isBusinessAdmin = !isAddingMember ? member?.is_admin : null;\n\tconst isStaff = member?.is_staff;\n\n\tconst isCurrentChatOwner = member.role === 'OWNER';\n\tconst isMemberSelected = selectedMembers.find(\n\t\t(selectedMember: any) =>\n\t\t\tselectedMember.id === userId && selectedMember.companyId === member?.company?.id\n\t);\n\tconst renderMemberType = () => {\n\t\tif (isStaff && isCurrentChatOwner) {\n\t\t\treturn '';\n\t\t} else {\n\t\t\treturn `${isStaff ? t('staff') : t('client')} | ${\n\t\t\t\tisIndividualClient ? t('individual') : companyName\n\t\t\t}`;\n\t\t}\n\t};\n\n\treturn (\n\t\t<ListItem\n\t\t\t// @ts-ignore\n\t\t\tbutton={!areAddedMembers}\n\t\t\tonClick={() => onClickHandler(userId, member)}\n\t\t\tclassName={classnames('member-list-item', {\n\t\t\t\t'item-active': selectedMembers.includes(userId)\n\t\t\t})}\n\t\t>\n\t\t\t<ListItemAvatar>\n\t\t\t\t<Avatar alt={FN} src={avatarSrc} className={classes.purple}>\n\t\t\t\t\t{`${FN} ${LN}`}\n\t\t\t\t</Avatar>\n\t\t\t</ListItemAvatar>\n\t\t\t{\n\t\t\t\t<ListItemText\n\t\t\t\t\tprimary={name}\n\t\t\t\t\tsecondary={`${isCurrentChatOwner ? t('group_owner') : ''} ${renderMemberType()}`}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t{isMemberSelected && (\n\t\t\t\t<>\n\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t<IconButton edge=\"end\" aria-label=\"checked\">\n\t\t\t\t\t\t\t<CheckCircleOutlineIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t{areAddedMembers && (isAdminManager || isOwner || currentMember.is_allowed_remove_user) && (\n\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t{(isAdminManager || isOwner) && (\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\taria-label=\"checked\"\n\t\t\t\t\t\t\tdisabled={role === 'OWNER' || isBusinessAdmin}\n\t\t\t\t\t\t\tonClick={() => showChatEditSettingModal(member)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\taria-label=\"checked\"\n\t\t\t\t\t\tdisabled={role === 'OWNER' /*|| isBusinessAdmin*/}\n\t\t\t\t\t\tonClick={() => setOpen(member)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</ListItemSecondaryAction>\n\t\t\t)}\n\t\t</ListItem>\n\t);\n};\n\nexport default ChatMember;\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\ntype Props = {\n\tclassName: string;\n\thandler: any;\n\ttext: string;\n\tComponent: any;\n\ticonProp: any;\n\thasSwitch: boolean;\n\tfield_name: string;\n\thandleChange: any;\n\tproperty: any;\n\tisMuteSetting?: any;\n\tisMute?: boolean;\n};\n\nfunction ChatSettingItem({\n\tclassName,\n\thandler,\n\ttext,\n\tComponent,\n\ticonProp,\n\thasSwitch,\n\tfield_name,\n\thandleChange,\n\tproperty,\n\tisMuteSetting,\n\tisMute\n}: Props) {\n\tconst clickHandler = () => () =>\n\t\tisMuteSetting ? handleChange({ target: { checked: !isMute } }) : handler(true);\n\treturn (\n\t\t<div\n\t\t\tclassName={`chat-sett-toggler flex items-center dark:!bg-kdark-dark333 ${className}`}\n\t\t\tonClick={clickHandler()}\n\t\t>\n\t\t\t<div className=\"chat-sett-toggler__icon flex items-center justify-center text-white\">\n\t\t\t\t{<Component {...iconProp} />}\n\t\t\t</div>\n\t\t\t<div className=\"chat-sett-toggler__name\">{text}</div>\n\t\t\t{hasSwitch && !isMuteSetting && (\n\t\t\t\t<div className=\"chat-sett-toggler__switch\">\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\tname={field_name}\n\t\t\t\t\t\tchecked={property[field_name]}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tinputProps={{ 'aria-labelledby': 'switch-list-label-group-admin' }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default ChatSettingItem;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { IconAdd, IconEdit, IconExit, IconMessage, IconRemove, IconPin } from 'shared/icons';\nimport ChatSettingItem from './ChatSettingItem';\nimport Actions from 'store/actions';\nimport { useLoadAll } from '../../../../shared/hooks';\nimport { MdHistoryEdu } from 'react-icons/md';\nconst FormRequest = Actions.entity.formRequest;\n\ntype Props = {\n\tcompanyId: number | undefined;\n\tchatId: number;\n\tmember: any;\n\tisOwner: boolean;\n\tstaffMembersLength: number;\n\tisAdminManager: boolean;\n};\n\nconst MemberChatSettings = ({\n\tcompanyId,\n\tmember,\n\tchatId,\n\tisOwner,\n\tstaffMembersLength,\n\tisAdminManager\n}: Props) => {\n\tconst {\n\t\tis_allowed_send_msg,\n\t\tis_allowed_add_user,\n\t\tis_allowed_remove_user,\n\t\tis_allowed_pin_msg,\n\t\tis_allowed_edit_info,\n\t\tis_allowed_delete_group,\n\t\tis_allowed_exit_group,\n\t\tis_mute,\n\t\tshow_history\n\t} = member && member;\n\tconst [property, setProperty] = useState({\n\t\tis_allowed_send_msg,\n\t\tis_allowed_add_user,\n\t\tis_allowed_remove_user,\n\t\tis_allowed_pin_msg,\n\t\tis_allowed_edit_info,\n\t\tis_allowed_delete_group,\n\t\tis_allowed_exit_group,\n\t\tis_mute,\n\t\tshow_history\n\t});\n\n\tconst { id: memberId } = member;\n\tconst { reloadEntityAll } = useLoadAll();\n\n\tconst dispatch = useDispatch();\n\n\tconst handlePropertyChange = (event: any) => {\n\t\tconst name = event.target.name;\n\t\tconst checked = event.target.checked;\n\t\tconst prevProperty = { ...property };\n\t\tsetProperty((prev) => ({ ...prev, [name]: checked }));\n\t\tconst payload = { [name]: checked };\n\t\tdispatch(\n\t\t\tFormRequest({\n\t\t\t\tid: member?.id,\n\t\t\t\tentity: 'chatmembers',\n\t\t\t\tname: `Allchatmembers-${chatId}-${staffMembersLength}`,\n\t\t\t\turl: `/${companyId}/ims/groups/${chatId}/members/${memberId}/`,\n\t\t\t\tmethod: 'patch',\n\t\t\t\tparams: {},\n\t\t\t\tupdateData: true,\n\t\t\t\tvalues: payload,\n\t\t\t\tnormalizeData: (data: any) => data,\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: (data: any) => {\n\t\t\t\t\t\treloadEntityAll({\n\t\t\t\t\t\t\turl: `/${companyId}/ims/${chatId}/members_list/`,\n\t\t\t\t\t\t\tentity: 'userCompanies',\n\t\t\t\t\t\t\tname: `Allchatmembers-${chatId}-${staffMembersLength}`,\n\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\tpage: 1,\n\t\t\t\t\t\t\t\tlimit: 10\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\terror: (error: Error) => {\n\t\t\t\t\t\tsetProperty(prevProperty);\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t};\n\n\tconst permissions = [\n\t\t{\n\t\t\tComponent: IconMessage,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: {},\n\t\t\ttext: 'Send Messages',\n\t\t\tfield_name: 'is_allowed_send_msg',\n\t\t\tclassName: '',\n\t\t\thandler: () => {},\n\t\t\thasSwitch: true,\n\t\t\tshow: isAdminManager || isOwner\n\t\t},\n\t\t{\n\t\t\tComponent: IconAdd,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: {},\n\t\t\ttext: 'Add Users',\n\t\t\tfield_name: 'is_allowed_add_user',\n\t\t\tclassName: '',\n\t\t\thandler: () => {},\n\t\t\thasSwitch: true,\n\t\t\tshow: isAdminManager || isOwner\n\t\t},\n\t\t{\n\t\t\tComponent: IconRemove,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: {},\n\t\t\ttext: 'Remove users',\n\t\t\tfield_name: 'is_allowed_remove_user',\n\t\t\tclassName: '',\n\t\t\thandler: () => {},\n\t\t\thasSwitch: true,\n\t\t\tshow: isAdminManager || isOwner\n\t\t},\n\t\t{\n\t\t\tComponent: IconPin,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: {},\n\t\t\ttext: 'Pin Messages',\n\t\t\tfield_name: 'is_allowed_pin_msg',\n\t\t\tclassName: '',\n\t\t\thandler: () => {},\n\t\t\thasSwitch: true,\n\t\t\tshow: isAdminManager || isOwner\n\t\t},\n\t\t{\n\t\t\tComponent: IconEdit,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: { width: 11, height: 11 },\n\t\t\ttext: 'Edit Group Info',\n\t\t\tfield_name: 'is_allowed_edit_info',\n\t\t\tclassName: '',\n\t\t\thandler: () => {},\n\t\t\thasSwitch: true,\n\t\t\tshow: isAdminManager || isOwner\n\t\t},\n\t\t{\n\t\t\tComponent: IconExit,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: { className: 'chat-icon-exit' },\n\t\t\ttext: 'Exit From Group',\n\t\t\tfield_name: 'is_allowed_exit_group',\n\t\t\tclassName: 'white-icon',\n\t\t\thandler: () => {},\n\t\t\thasSwitch: true,\n\t\t\tshow: isAdminManager || isOwner\n\t\t},\n\t\t{\n\t\t\tComponent: MdHistoryEdu,\n\t\t\thandleChange: handlePropertyChange,\n\t\t\ticonProp: { className: 'chat-icon-exit' },\n\t\t\ttext: 'Show Chat History For The User',\n\t\t\tfield_name: 'show_history',\n\t\t\tclassName: 'white-icon',\n\t\t\thandler: () => {},\n\t\t\thasSwitch: true,\n\t\t\tshow: isAdminManager || isOwner\n\t\t}\n\t];\n\n\treturn (\n\t\t<div className=\"chat-settings__inner\">\n\t\t\t<div className=\"chat-settings__content\">\n\t\t\t\t<div className=\"chat-settings__title mb-4 font-bold\">Individual Permissions</div>\n\t\t\t\t<div className=\"chat-settings__l\">\n\t\t\t\t\t{permissions.map((setting) => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tclassName,\n\t\t\t\t\t\t\thandler,\n\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\thasSwitch,\n\t\t\t\t\t\t\tfield_name,\n\t\t\t\t\t\t\tComponent,\n\t\t\t\t\t\t\ticonProp,\n\t\t\t\t\t\t\tshow,\n\t\t\t\t\t\t\thandleChange\n\t\t\t\t\t\t} = setting;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tshow && (\n\t\t\t\t\t\t\t\t<div className=\"chat-settings__i\" key={field_name}>\n\t\t\t\t\t\t\t\t\t<ChatSettingItem\n\t\t\t\t\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\t\t\t\t\thandler={handler}\n\t\t\t\t\t\t\t\t\t\ttext={text}\n\t\t\t\t\t\t\t\t\t\tComponent={Component}\n\t\t\t\t\t\t\t\t\t\ticonProp={iconProp}\n\t\t\t\t\t\t\t\t\t\thasSwitch={hasSwitch}\n\t\t\t\t\t\t\t\t\t\tfield_name={field_name}\n\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tproperty={property}\n\t\t\t\t\t\t\t\t\t\tisMuteSetting={false}\n\t\t\t\t\t\t\t\t\t\tisMute={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MemberChatSettings;\n","import React, { useState } from 'react';\nimport EntityContainer from 'modules/entity/containers';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { ConfirmModal, LoadMoreVisible } from 'shared/components';\nimport { ErrorBoundary, Loader } from 'shared/components';\nimport ChatMember from './ChatMember';\nimport List from '@material-ui/core/List';\nimport TextField from '@material-ui/core/TextField';\nimport { useDebounce } from 'use-debounce';\nimport MemberChatSettings from './MemberChatSettings';\nimport { useDispatch } from 'react-redux';\nimport { useAppState } from 'shared/state';\nimport Actions from 'store/actions';\nimport { useChatContext } from 'shared/contexts';\nimport { WhiteModal } from 'shared/components/Elements';\nimport { useNotistack } from 'shared/hooks';\nimport { loadOneRequest } from 'modules/entity/actions';\nimport { useTranslation } from 'react-i18next';\nconst { formRequest } = Actions.entity;\n\nconst MembersList = (props: any) => {\n\tconst [page, setPage] = useState(1);\n\tconst [query, setQuery] = useState('');\n\tconst [searchQuery] = useDebounce(query, 300);\n\tconst [open, setOpen] = useState(false);\n\tconst [chatEditSettingModal, showChatEditSettingModal] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\tconst { companyId } = useAppState();\n\tconst { entityId } = useChatContext();\n\tconst dispatch = useDispatch();\n\tconst { showNotification } = useNotistack();\n\tconst { t } = useTranslation();\n\n\tconst {\n\t\tisAdminManager,\n\t\tisOwner,\n\t\tcurrentMember,\n\t\tstaffMembersLength\n\t\t// chatId,\n\t} = props;\n\n\tconst removeMember = (member: any) => {\n\t\tsetLoading(true);\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'chatmembers',\n\t\t\t\tname: `Allchatmembers-${entityId}-${staffMembersLength}`,\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: `/${companyId}/ims/groups/${entityId}/members/${member.id}/`,\n\t\t\t\tdeleteData: true,\n\t\t\t\tid: member.id,\n\t\t\t\tcb: {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t//We must refetch ims object because of members count which is changed.\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tloadOneRequest({\n\t\t\t\t\t\t\t\tid: entityId,\n\t\t\t\t\t\t\t\tentity: 'ims-chats',\n\t\t\t\t\t\t\t\tname: `GroupChat-${entityId}`,\n\t\t\t\t\t\t\t\turl: `/${companyId}/ims/groups/${entityId}/`,\n\t\t\t\t\t\t\t\tparams: {},\n\t\t\t\t\t\t\t\tprimaryKey: 'id',\n\t\t\t\t\t\t\t\trelations: ''\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t\tshowNotification({ message: 'Successfully deleted', variant: 'success' });\n\t\t\t\t\t},\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\t// NotificationManager.error(err.code);\n\t\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\t\t\tfinally: () => {\n\t\t\t\t\t\tsetOpen(false);\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id',\n\t\t\t\tvalues: {}\n\t\t\t})\n\t\t);\n\t};\n\n\tconst closeRemoveMemberHandler = () => setOpen(false);\n\n\treturn (\n\t\t<div className=\"members-list\">\n\t\t\t<EntityContainer.All\n\t\t\t\tentity=\"chatmembers\"\n\t\t\t\tname={`Allchatmembers-${entityId}-${staffMembersLength}`}\n\t\t\t\turl={`/${companyId}/ims/${entityId}/members_list/`}\n\t\t\t\tappendData\n\t\t\t\tparams={{\n\t\t\t\t\tpage,\n\t\t\t\t\tlimit: 20,\n\t\t\t\t\textra: {\n\t\t\t\t\t\tsearch: searchQuery\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tonInit={(data) => {\n\t\t\t\t\t// console.log(\"data\", data);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"members-list__search p-4\">\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t// type=\"search\"\n\t\t\t\t\t\t\t\t\tlabel={t('search_members')}\n\t\t\t\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Scrollbars\n\t\t\t\t\t\t\t\tclassName=\"rct-scroll\"\n\t\t\t\t\t\t\t\tautoHide\n\t\t\t\t\t\t\t\t/*style={{ height: getChatBoxHeight() }}*/ style={{ height: '300px' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"members-list__list\">\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<List dir=\"ltr\" dense>\n\t\t\t\t\t\t\t\t\t\t\t{(items as any).map((member: any) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<ChatMember\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={member.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmember={member}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisAdminManager={isAdminManager}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisOwner={isOwner}\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowChatEditSettingModal={showChatEditSettingModal}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetOpen={setOpen}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentMember={currentMember}\n\t\t\t\t\t\t\t\t\t\t\t\t\tareAddedMembers\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t{isFetched &&\n\t\t\t\t\t\t\t\t\t\t\tmeta?.current_page &&\n\t\t\t\t\t\t\t\t\t\t\tmeta?.last_page &&\n\t\t\t\t\t\t\t\t\t\t\tmeta?.current_page < meta?.last_page && (\n\t\t\t\t\t\t\t\t\t\t\t\t<LoadMoreVisible setPage={() => setPage((prev) => prev + 1)} />\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{!isFetched ? (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"case-chat-loader flex items-center justify-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\t\t\t\tfeatureHandler={() => removeMember(open)}\n\t\t\t\t\t\t\t\t\t\t\tisOpen={Boolean(open)}\n\t\t\t\t\t\t\t\t\t\t\ttoggleHandler={closeRemoveMemberHandler}\n\t\t\t\t\t\t\t\t\t\t\ttitle={t('are_you_sure_delete_member')}\n\t\t\t\t\t\t\t\t\t\t\thasLoader\n\t\t\t\t\t\t\t\t\t\t\tisLoading={loading}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\t\t\thandleModalOpen={() => showChatEditSettingModal(false)}\n\t\t\t\t\t\t\t\t\t\t\topen={chatEditSettingModal}\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth={310}\n\t\t\t\t\t\t\t\t\t\t\tminWidth={310}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<MemberChatSettings\n\t\t\t\t\t\t\t\t\t\t\t\tcompanyId={companyId}\n\t\t\t\t\t\t\t\t\t\t\t\tchatId={entityId}\n\t\t\t\t\t\t\t\t\t\t\t\tisAdminManager={isAdminManager}\n\t\t\t\t\t\t\t\t\t\t\t\tisOwner={isOwner}\n\t\t\t\t\t\t\t\t\t\t\t\tmember={chatEditSettingModal}\n\t\t\t\t\t\t\t\t\t\t\t\tstaffMembersLength={staffMembersLength}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Scrollbars>\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</EntityContainer.All>\n\t\t</div>\n\t);\n};\n\nexport default function MembersListWithErrorBoundary(props: any) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<MembersList {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tvalue: any;\n\thandleChange: any;\n};\n\nconst MembersFilter = ({ value, handleChange }: Props) => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<div className=\"members-list__filter\">\n\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t<FormLabel component=\"legend\">{t('filter_dot')}</FormLabel>\n\t\t\t\t<RadioGroup aria-label=\"gender\" name=\"filter\" value={value} onChange={handleChange}>\n\t\t\t\t\t<div className=\"members-list__filter_inner\">\n\t\t\t\t\t\t<div className=\"members-list__filter_item\">\n\t\t\t\t\t\t\t<FormControlLabel value=\"all\" control={<Radio color=\"primary\" />} label={t('all')} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"members-list__filter_item\">\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tvalue=\"staff\"\n\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\n\t\t\t\t\t\t\t\tlabel={t('staff')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"members-list__filter_item\">\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tvalue=\"individual\"\n\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\n\t\t\t\t\t\t\t\tlabel={t('individual_clients')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"members-list__filter_item\">\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tvalue=\"clients\"\n\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\n\t\t\t\t\t\t\t\tlabel={t('business_client_users')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\t\t</div>\n\t);\n};\n\nexport default MembersFilter;\n","import React, { useState, useEffect } from 'react';\nimport EntityContainer from 'modules/entity/containers';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { LoadMoreVisible } from 'shared/components';\nimport { ErrorBoundary, Loader } from 'shared/components';\nimport ChatMember from './ChatMember';\nimport List from '@material-ui/core/List';\nimport Fab from '@material-ui/core/Fab';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport TextField from '@material-ui/core/TextField';\nimport { useDebounce } from 'use-debounce';\nimport MembersFilter from './MembersFilter';\nimport IconButton from '@material-ui/core/IconButton';\nimport TuneIcon from '@material-ui/icons/Tune';\nimport { useEntityForm } from 'modules/entity/hooks/useEntityForm';\nimport { useAppState } from 'shared/state';\nimport { useChatContext } from 'shared/contexts';\nimport { WhiteModal } from 'shared/components/Elements';\nimport { useNotistack } from 'shared/hooks';\nimport { loadOneRequest } from 'modules/entity/actions';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { convertToLocalizationKey } from 'shared/services/utils/convertToLocalizationKey';\n\nconst AddChatMembers = (props: any) => {\n\tconst { t } = useTranslation();\n\tconst [page, setPage] = useState(1);\n\tconst { onSuccess, activeChat, staffMembersLength } = props;\n\n\tconst { companyId } = useAppState();\n\tconst { entityId } = useChatContext();\n\n\tconst [selectedMembers, setSelectedMembers] = useState<any[]>([]);\n\tconst [selectedMembersFull, setSelectedMembersFull] = useState<any[]>([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [value, setValue] = useState('all');\n\tconst [options, setOptions] = useState({\n\t\tis_individual: 'true',\n\t\tis_business: 'true',\n\t\tis_member: 'true'\n\t});\n\n\tconst dispatch = useDispatch();\n\n\tconst [selected, setSelected] = useState('All');\n\tconst { showNotification } = useNotistack();\n\n\tconst { handleRequest: handleAddMember } = useEntityForm({\n\t\tentity: 'chatmembers',\n\t\tname: `Allchatmembers-${entityId}-${staffMembersLength}`,\n\t\tmethod: 'post',\n\t\turl: `/${companyId}/ims/groups/${entityId}/members/`,\n\t\tvalues: selectedMembersFull.reduce(\n\t\t\t(acc, curr) => [\n\t\t\t\t...acc,\n\t\t\t\t{ user: { id: curr.id }, role: 'MEMBER', company: { id: curr.companyId } }\n\t\t\t],\n\t\t\t[]\n\t\t),\n\t\tcb: {\n\t\t\tsuccess: (data) => {\n\t\t\t\t//We must refetch ims object because of members count which is changed.\n\t\t\t\tdispatch(\n\t\t\t\t\tloadOneRequest({\n\t\t\t\t\t\tid: entityId,\n\t\t\t\t\t\tentity: 'ims-chats',\n\t\t\t\t\t\tname: `GroupChat-${entityId}`,\n\t\t\t\t\t\turl: `/${companyId}/ims/groups/${entityId}/`,\n\t\t\t\t\t\tparams: {},\n\t\t\t\t\t\tprimaryKey: 'id',\n\t\t\t\t\t\trelations: ''\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tshowNotification({ message: t('member_added_success'), variant: 'success' });\n\t\t\t},\n\t\t\terror: (error) => {\n\t\t\t\tshowNotification({ message: t('something_went_wrong'), variant: 'error' });\n\t\t\t},\n\t\t\tfinally: () => {\n\t\t\t\tsetLoading(false);\n\t\t\t\tonSuccess();\n\t\t\t}\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\t(() => {\n\t\t\tswitch (value) {\n\t\t\t\tcase 'all':\n\t\t\t\t\tsetSelected('All');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'individual':\n\t\t\t\t\tsetSelected('Individual Clients');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'clients':\n\t\t\t\t\tsetSelected('Business Client Users');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'staff':\n\t\t\t\t\tsetSelected('Staff');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t})();\n\t}, [value]);\n\n\tconst handleChange = (event: any) => {\n\t\tconst value = event.target.value;\n\t\tsetValue(value);\n\t\tsetLoading(true);\n\t\tsetPage(1);\n\t\tsetOpen(false);\n\t\tswitch (value) {\n\t\t\tcase 'all':\n\t\t\t\tsetOptions({\n\t\t\t\t\tis_individual: 'true',\n\t\t\t\t\tis_business: 'true',\n\t\t\t\t\tis_member: 'true'\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'individual':\n\t\t\t\tsetOptions({\n\t\t\t\t\tis_individual: 'true',\n\t\t\t\t\tis_business: 'false',\n\t\t\t\t\tis_member: 'false'\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'clients':\n\t\t\t\tsetOptions({\n\t\t\t\t\tis_individual: 'false',\n\t\t\t\t\tis_business: 'true',\n\t\t\t\t\tis_member: 'false'\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'staff':\n\t\t\t\tsetOptions({\n\t\t\t\t\tis_individual: 'false',\n\t\t\t\t\tis_business: 'false',\n\t\t\t\t\tis_member: 'true'\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\tconst { is_individual, is_business, is_member } = options;\n\tconst [query, setQuery] = useState('');\n\tconst [open, setOpen] = useState(false);\n\tconst [searchQuery] = useDebounce(query, 300);\n\n\tuseEffect(() => {\n\t\tsetPage(1);\n\t}, [searchQuery]);\n\n\tconst onClickHandler = (id: any, member: any) => {\n\t\tif (selectedMembers.includes(id)) {\n\t\t\tconst filteredIds = selectedMembers.filter((selId) => selId !== id);\n\t\t\tconst filteredMembers = selectedMembersFull.filter((m) => m.id !== id);\n\t\t\tsetSelectedMembers(filteredIds);\n\t\t\tsetSelectedMembersFull(filteredMembers);\n\t\t} else {\n\t\t\tsetSelectedMembers((prev) => [...prev, id]);\n\t\t\tsetSelectedMembersFull((prev) => [\n\t\t\t\t...prev,\n\t\t\t\t{ id: member.id, companyId: member?.company?.id }\n\t\t\t]);\n\t\t}\n\t};\n\n\tconst addMembersToChat = () => {\n\t\tsetLoading(true);\n\t\thandleAddMember();\n\t};\n\n\treturn (\n\t\t<div className=\"members-list relative\">\n\t\t\t<EntityContainer.All\n\t\t\t\tentity=\"clientMembers\"\n\t\t\t\tname={`AllClientMembers-${entityId}-${staffMembersLength}`}\n\t\t\t\turl={`/${companyId}/my/company/client_users/`}\n\t\t\t\tprimaryKey={(value) => `${value.id}-${value.company.id}`}\n\t\t\t\tappendData\n\t\t\t\tisUniq={false}\n\t\t\t\tparams={{\n\t\t\t\t\tpage,\n\t\t\t\t\tlimit: 20,\n\t\t\t\t\textra: {\n\t\t\t\t\t\tsearch: searchQuery,\n\t\t\t\t\t\tis_individual,\n\t\t\t\t\t\tis_business,\n\t\t\t\t\t\tis_member,\n\t\t\t\t\t\texclude_ids: (activeChat.members as any)\n\t\t\t\t\t\t\t.filter((member: any) => member.role.toUpperCase() !== 'KICKED')\n\t\t\t\t\t\t\t.reduce((acc: any[], curr: any) => [...acc, curr?.user.id], [])\n\t\t\t\t\t\t\t.join(',')\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tonInit={(data) => {\n\t\t\t\t\t// console.log(\"data\", data);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"members-list__settings\">\n\t\t\t\t\t\t\t\t<div className=\"members-list__search\">\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tlabel={t('search_members')}\n\t\t\t\t\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tsetPage(1);\n\t\t\t\t\t\t\t\t\t\t\tsetQuery(e.target.value);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"members-list__filter-btn pl-2.5\">\n\t\t\t\t\t\t\t\t\t<IconButton aria-label=\"filter\" color=\"default\" onClick={() => setOpen(true)}>\n\t\t\t\t\t\t\t\t\t\t<TuneIcon />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"ml-2.5 flex items-center\">\n\t\t\t\t\t\t\t\t<div className=\"mr-2.5\">\n\t\t\t\t\t\t\t\t\t<strong>{t('filtering_type')}</strong>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"mr-2.5\">{t(convertToLocalizationKey(selected))}</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<Scrollbars className=\"rct-scroll\" autoHide style={{ height: '300px' }}>\n\t\t\t\t\t\t\t\t<div className=\"members-list__list\">\n\t\t\t\t\t\t\t\t\t{loading && <Loader tiled />}\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<List dir=\"ltr\" className=\"add-chat-member__list\" dense>\n\t\t\t\t\t\t\t\t\t\t\t{(items as any).map((member: any, index: number) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<ChatMember\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmember={member}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClickHandler={onClickHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedMembers={selectedMembersFull}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisAddingMember\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t{isFetched &&\n\t\t\t\t\t\t\t\t\t\t\tmeta?.current_page &&\n\t\t\t\t\t\t\t\t\t\t\tmeta?.last_page &&\n\t\t\t\t\t\t\t\t\t\t\tmeta?.current_page < meta?.last_page && (\n\t\t\t\t\t\t\t\t\t\t\t\t<LoadMoreVisible setPage={() => setPage((prev) => prev + 1)} />\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{!isFetched ? (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"case-chat-loader flex items-center justify-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Scrollbars>\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</EntityContainer.All>\n\t\t\t{/*<Dialog*/}\n\t\t\t{/*\tclasses={{*/}\n\t\t\t{/*\t\tpaper: 'case-form-modal-paper visible-modal-paper',*/}\n\t\t\t{/*\t\tcontainer: 'case-form-paper-container visible-modal-paper-container'*/}\n\t\t\t{/*\t}}*/}\n\t\t\t{/*\topen={open}*/}\n\t\t\t{/*\tonClose={() => setOpen(false)}*/}\n\t\t\t{/*\taria-labelledby=\"alert-dialog-title\"*/}\n\t\t\t{/*\taria-describedby=\"alert-dialog-description\"*/}\n\t\t\t{/*\tmaxWidth=\"xl\"></Dialog>*/}\n\t\t\t{/*Group Chat Members and Add Members popup*/}\n\t\t\t<WhiteModal handleModalOpen={() => setOpen(false)} open={open}>\n\t\t\t\t<MembersFilter value={value} handleChange={handleChange} />\n\t\t\t</WhiteModal>\n\n\t\t\t<div className=\"absolute bottom-2.5 right-2.5\">\n\t\t\t\t<Fab\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\taria-label=\"add\"\n\t\t\t\t\tonClick={addMembersToChat}\n\t\t\t\t\tdisabled={selectedMembers.length === 0}\n\t\t\t\t>\n\t\t\t\t\t<CheckCircleIcon />\n\t\t\t\t</Fab>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default function AddChatMembersWithErrorBoundary(props: any) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<AddChatMembers {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ChatMembersList from './ChatMembersList';\nimport AddChatMembers from './AddChatMembers';\nimport { useAppState } from '../../../../shared/state';\nimport { useChatContext } from '../../../../shared/contexts';\nimport { useGetEntityOne } from '../../../../shared/hooks';\nimport get from 'lodash/get';\nimport { ChatMember } from '../../types';\nimport { useAuth } from '../../../../modules/auth/hooks/useAuth';\nimport { useTranslation } from 'react-i18next';\n\nfunction TabPanel(props: any) {\n\tconst { children, value, index, ...other } = props;\n\n\treturn (\n\t\t<div\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={value !== index}\n\t\t\tid={`scrollable-force-tabpanel-${index}`}\n\t\t\taria-labelledby={`scrollable-force-tab-${index}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{value === index && (\n\t\t\t\t<Box p={0}>\n\t\t\t\t\t<Typography component=\"div\">{children}</Typography>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nTabPanel.propTypes = {\n\tchildren: PropTypes.node,\n\tindex: PropTypes.any.isRequired,\n\tvalue: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index: number) {\n\treturn {\n\t\tid: `scrollable-force-tab-${index}`,\n\t\t'aria-controls': `scrollable-force-tabpanel-${index}`\n\t};\n}\n\ntype Props = {\n\tonSuccess: () => void;\n};\n\nconst Members = ({ onSuccess }: Props) => {\n\tconst { isPermitted, companyId } = useAppState();\n\tconst { entityId } = useChatContext();\n\tconst { userData } = useAuth();\n\tconst [value, setValue] = React.useState(0);\n\tconst { t } = useTranslation();\n\n\tconst chatEntity = useGetEntityOne({\n\t\tentity: 'ims-chats',\n\t\tentityId,\n\t\tentityName: `GroupChat-${entityId}One`\n\t});\n\n\tconst activeChat = chatEntity.item || {};\n\n\tconst owner = (get(chatEntity, 'item.members', []) as ChatMember[]).find(\n\t\t(member) => member.role === 'OWNER'\n\t);\n\tconst currentMember = (get(chatEntity, 'item.members', []) as ChatMember[]).find(\n\t\t(member) => member.user.id === userData.id\n\t);\n\tconst isOwner = owner?.user.id === userData.id;\n\n\tconst isAllowed = currentMember?.is_allowed_add_user || isPermitted;\n\n\tconst handleChange = (event: React.ChangeEvent<Record<string, unknown>>, newValue: any) => {\n\t\tsetValue(newValue);\n\t};\n\n\treturn (\n\t\t<div className=\"case-form case-form_group-chat -mt-5 rounded-xl\">\n\t\t\t<AppBar position=\"static\" color=\"default\">\n\t\t\t\t<Tabs\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvariant=\"fullWidth\"\n\t\t\t\t\tindicatorColor=\"primary\"\n\t\t\t\t\ttextColor=\"primary\"\n\t\t\t\t\taria-label=\"scrollable2 force tabs example\"\n\t\t\t\t>\n\t\t\t\t\t<Tab label={t('members')} icon={<PeopleIcon />} {...a11yProps(0)} />\n\t\t\t\t\t<Tab\n\t\t\t\t\t\tlabel={t('add_member')}\n\t\t\t\t\t\ticon={<PersonAddIcon />}\n\t\t\t\t\t\t{...a11yProps(1)}\n\t\t\t\t\t\tdisabled={!isAllowed}\n\t\t\t\t\t/>\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t\t<TabPanel value={value} index={0}>\n\t\t\t\t<ChatMembersList\n\t\t\t\t\tisAdminManager={isPermitted}\n\t\t\t\t\tisOwner={isOwner}\n\t\t\t\t\tcurrentMember={currentMember}\n\t\t\t\t\tstaffMembersLength={123}\n\t\t\t\t/>\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={1}>\n\t\t\t\t<AddChatMembers\n\t\t\t\t\t{...{ chatId: entityId, companyId, onSuccess, activeChat, staffMembersLength: 123 }}\n\t\t\t\t/>\n\t\t\t</TabPanel>\n\t\t</div>\n\t);\n};\n\nexport default Members;\n","import React, { useEffect } from 'react';\nimport { GroupMember, IGroupChat } from 'shared/interfaces';\nimport isEmpty from 'lodash/isEmpty';\nimport { ChatHeaderLayout } from 'shared/components/Chat/components/ChatHeaderLayout';\nimport { useChatMenu } from '../hooks/useChatMenu';\nimport { Menu } from 'shared/components/Elements';\nimport { useChatContext } from 'shared/contexts/ChatContext';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Permissions } from '../components/Permissions';\nimport { useAuth } from 'modules/auth/hooks/useAuth';\nimport { useDraftMessage, useQueryParams, useUpdateEntities, useWhiteModal } from 'shared/hooks';\nimport { useChatSocket } from 'shared/contexts';\nimport { GroupChatMembers } from './GroupChatMembers';\nimport { useAppState } from 'shared/state';\nimport { ErrorBoundary } from 'shared/components';\nimport { IconPin } from '../../../shared/icons';\nimport { AiOutlineMore, AiOutlineSearch, AiOutlineUsergroupAdd } from 'react-icons/ai';\nimport { FiUsers } from 'react-icons/fi';\nimport { IoClose } from 'react-icons/io5';\nimport { useGroupMessageSearch } from '../hooks';\nimport ChatMembers from './Members/ChatMembers';\nimport { ChatMember } from '../types';\nimport { useTranslationHelpers } from 'shared/hooks/useTranslationHelpers';\nimport clsx from 'clsx';\n\ntype Props = {\n\timsData: IGroupChat;\n\tisFetched: boolean;\n};\n\nconst useStyles = makeStyles(\n\tcreateStyles({\n\t\tpaper: {\n\t\t\tborderRadius: '16px',\n\t\t\tpadding: '10px'\n\t\t}\n\t})\n);\n\nexport function GroupChatHeaderInner({ imsData, isFetched }: Props) {\n\tconst { isRTL } = useTranslationHelpers();\n\tconst { setScrollToMessageHandler, lastReadMessageId, entityId } = useChatContext();\n\tconst { userData } = useAuth();\n\tconst classes = useStyles();\n\tconst { removeQueryParams } = useQueryParams();\n\tconst { closeSocket } = useChatSocket();\n\tconst { setActiveDraft, activeDraft, setGroupSearchOpen, groupSearchOpen, isAdmin } =\n\t\tuseAppState();\n\tconst { saveDraft, getLS } = useDraftMessage();\n\tconst { toggleSearchSidebar } = useGroupMessageSearch();\n\tconst pinTime = imsData.pin_time;\n\tconst {\n\t\topen: membersModalOpen,\n\t\tmodalHandler: membersModalOpenHandler,\n\t\tWhiteModal\n\t} = useWhiteModal();\n\n\tconst { updateEntities } = useUpdateEntities();\n\n\tconst {\n\t\topen: membersAddModalOpen,\n\t\tmodalHandler: membersAddModalOpenHandler,\n\t\tWhiteModal: MembersAddWhiteModal\n\t} = useWhiteModal();\n\n\tconst { open, handleClick, anchorEl, handleCloseMenu } = useChatMenu(\n\t\timsData.pin_time,\n\t\timsData.id,\n\t\ttrue\n\t);\n\n\tconst draftObject = getLS();\n\n\tconst mainText = imsData.title;\n\tlet headerAvatar = null;\n\n\tif (isFetched && !isEmpty(imsData)) {\n\t\theaderAvatar = {\n\t\t\tavatarSrc: imsData?.image?.thumbnail_150,\n\t\t\tavatarLetter: imsData?.title?.[0],\n\t\t\tavatarAlt: imsData?.title\n\t\t};\n\t}\n\n\tconst currentUserMemberData = imsData?.members?.find(\n\t\t(member: GroupMember) => member?.user?.id === userData.id\n\t);\n\tconst owner = (imsData?.members as ChatMember[])?.find((member) => member.role === 'OWNER');\n\tconst isOwner = owner?.user?.id === userData.id;\n\n\t// // const isAllowedExitGroup = currentMember?.is_allowed_exit_group;\n\t// const isAllowedPinMsg = currentUserMemberData?.is_allowed_pin_msg;\n\t// const isAllowedSendMsg = currentUserMemberData?.is_allowed_send_msg;\n\n\tconst closeCaseChat = () => {\n\t\t//Close message search sidebar if it is open\n\t\tif (groupSearchOpen) {\n\t\t\tsetGroupSearchOpen(false);\n\t\t}\n\t\tremoveQueryParams();\n\t\tcloseSocket?.();\n\t\tif (entityId in draftObject) saveDraft('user');\n\n\t\ttry {\n\t\t\tupdateEntities({\n\t\t\t\tentity: 'ims-chats',\n\t\t\t\tentityId: imsData?.id,\n\t\t\t\tupdatingData: {\n\t\t\t\t\tlast_read_message: lastReadMessageId\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {}\n\t};\n\n\tuseEffect(() => {\n\t\tif ('draft_message' in imsData && imsData?.draft_message && !activeDraft) {\n\t\t\tsetActiveDraft(imsData.draft_message);\n\t\t}\n\t}, [imsData]);\n\n\treturn (\n\t\t<ChatHeaderLayout\n\t\t\tisFetched\n\t\t\tHeaderActions={\n\t\t\t\t<>\n\t\t\t\t\t{pinTime ? (\n\t\t\t\t\t\t<div className={'mr-4'}>\n\t\t\t\t\t\t\t<IconPin className={'text-kgrey-menuText'} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t{/*Members Popup open button*/}\n\t\t\t\t\t{isAdmin || isOwner || currentUserMemberData?.is_allowed_add_user ? (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t'flex-centered mr-2 h-8 w-8 rounded-full bg-primary text-white transition hover:bg-primary-dark active:translate-y-0.5 active:shadow-inner'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={membersAddModalOpenHandler}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AiOutlineUsergroupAdd />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t'flex-centered h-8 w-8 rounded-full bg-primary text-white transition hover:bg-primary-dark active:translate-y-0.5 active:shadow-inner'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={membersModalOpenHandler}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FiUsers />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{/*Group Chat Members and Add Members popup*/}\n\t\t\t\t\t<MembersAddWhiteModal\n\t\t\t\t\t\thandleModalOpen={membersAddModalOpenHandler}\n\t\t\t\t\t\topen={membersAddModalOpen}\n\t\t\t\t\t\tnoPadding\n\t\t\t\t\t\tcropRounded\n\t\t\t\t\t>\n\t\t\t\t\t\t<ChatMembers onSuccess={membersAddModalOpenHandler} />\n\t\t\t\t\t</MembersAddWhiteModal>\n\n\t\t\t\t\t{/*Group Chat Members and Add Members popup*/}\n\t\t\t\t\t<WhiteModal handleModalOpen={membersModalOpenHandler} open={membersModalOpen}>\n\t\t\t\t\t\t<GroupChatMembers />\n\t\t\t\t\t</WhiteModal>\n\n\t\t\t\t\t{/* Group Chat Search Sidebar open button */}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t'flex-centered mx-2 h-8 w-8 rounded-full bg-primary text-white transition hover:bg-primary-dark active:translate-y-0.5 active:shadow-inner'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={toggleSearchSidebar}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AiOutlineSearch />\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{/*Three dot button*/}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"more-btn w-4 cursor-pointer text-right text-kdark-dark333\n\t\t\t\t\t\t transition hover:text-primary dark:text-white dark:hover:text-primary\"\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AiOutlineMore className={'inline text-3xl'} />\n\t\t\t\t\t</div>\n\t\t\t\t\t{/*Permissions popover*/}\n\t\t\t\t\t<Menu\n\t\t\t\t\t\tid=\"long-menu\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tleft: isRTL ? '-4%' : 0\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\topen={open}\n\t\t\t\t\t\tclasses={{ paper: classes.paper }}\n\t\t\t\t\t\tonClose={handleCloseMenu}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isFetched ? (\n\t\t\t\t\t\t\t<Permissions\n\t\t\t\t\t\t\t\timage={imsData?.image}\n\t\t\t\t\t\t\t\ttitle={imsData?.title}\n\t\t\t\t\t\t\t\tmembersCount={imsData?.members?.length}\n\t\t\t\t\t\t\t\tisMuted={currentUserMemberData?.is_mute}\n\t\t\t\t\t\t\t\tchatId={imsData.id}\n\t\t\t\t\t\t\t\tmemberId={currentUserMemberData?.id}\n\t\t\t\t\t\t\t\tisOwner={isOwner}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</Menu>\n\n\t\t\t\t\t{/*Group chat close button*/}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t'flex-center-y border-border-solid  px-4 py-2 text-kred-pink transition hover:opacity-80',\n\t\t\t\t\t\t\t{ 'border-l lg:ml-4': !isRTL, 'border-r lg:mr-4': isRTL }\n\t\t\t\t\t\t)}\n\t\t\t\t\t\ttype={'button'}\n\t\t\t\t\t\tonClick={closeCaseChat}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"icon \">\n\t\t\t\t\t\t\t<IoClose />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t</>\n\t\t\t}\n\t\t\tmainText={mainText}\n\t\t\tdata={headerAvatar}\n\t\t\tpinnedMessage={{\n\t\t\t\ttitle: imsData?.pinned_message?.text,\n\t\t\t\tid: imsData?.pinned_message?.id\n\t\t\t}}\n\t\t\tscrollToHandler={setScrollToMessageHandler}\n\t\t/>\n\t);\n}\n\nexport function GroupChatHeader(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<GroupChatHeaderInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport EntityContainer from 'modules/entity/containers';\nimport { useGetEntity, useNotistack, useQueryParams } from 'shared//hooks';\nimport { useAppState } from 'shared/state';\nimport { GroupMember, IGroupChat } from 'shared/interfaces';\nimport { ChatLayout } from 'shared/components/Chat/ChatLayout';\nimport { GroupMessagesList } from './GroupMessagesList';\nimport { GroupChatInputControls } from './GroupChatInputControls';\nimport { ChatContextProvider, ChatInputContextProvider, ChatSocketProvider } from 'shared/contexts';\nimport { GroupChatHeader } from './GroupChatHeader';\nimport { useAuth } from 'modules/auth/hooks/useAuth';\nimport { ErrorBoundary } from 'shared/components';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tisUnreadFilterActive: boolean;\n};\n\nfunction GroupChatInner({ isUnreadFilterActive }: Props) {\n\tconst { t } = useTranslation();\n\tconst { query, removeQueryParams } = useQueryParams<{ chat: number }>();\n\tconst { showNotification } = useNotistack();\n\tconst { companyId, groupSearchQuery } = useAppState();\n\tconst chatId = Number('chat' in query ? query.chat : undefined);\n\tconst { userData } = useAuth();\n\tconst { all: groupList } = useGetEntity({\n\t\tentity: 'ims-chats',\n\t\tentityName: `AllImsChats-${companyId}-${groupSearchQuery}`\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t{chatId && companyId ? (\n\t\t\t\t<EntityContainer.One\n\t\t\t\t\tid={String(chatId)}\n\t\t\t\t\trelations={''}\n\t\t\t\t\tentity={'ims-chats'}\n\t\t\t\t\tname={`GroupChat-${chatId}`}\n\t\t\t\t\turl={`/${companyId}/ims/groups/${chatId}/`}\n\t\t\t\t\tparams={{}}\n\t\t\t\t\tonError={(error) => {\n\t\t\t\t\t\t//if current user does not have access to the chat, It should be closed\n\t\t\t\t\t\tif (error?.response?.status === 404) {\n\t\t\t\t\t\t\tremoveQueryParams();\n\t\t\t\t\t\t\tshowNotification({ variant: 'error', message: \"You don't have access to the chat.\" });\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ item, isFetched }) => {\n\t\t\t\t\t\tconst imsData = { ...item } as IGroupChat;\n\n\t\t\t\t\t\tconst currentUserMemberData = imsData?.members?.find(\n\t\t\t\t\t\t\t(member: GroupMember) => member?.user?.id === userData.id\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ChatContextProvider entityId={chatId} entityType={'ims'}>\n\t\t\t\t\t\t\t\t<ChatInputContextProvider>\n\t\t\t\t\t\t\t\t\t<ChatSocketProvider entityId={chatId} entityType={'ims'}>\n\t\t\t\t\t\t\t\t\t\t<ChatLayout\n\t\t\t\t\t\t\t\t\t\t\tChatHeader={<GroupChatHeader isFetched={isFetched} imsData={imsData} />}\n\t\t\t\t\t\t\t\t\t\t\tChatBody={<GroupMessagesList chatId={chatId} />}\n\t\t\t\t\t\t\t\t\t\t\tChatInput={\n\t\t\t\t\t\t\t\t\t\t\t\t<GroupChatInputControls\n\t\t\t\t\t\t\t\t\t\t\t\t\tisAllowedSendMsg={currentUserMemberData?.is_allowed_send_msg}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ChatSocketProvider>\n\t\t\t\t\t\t\t\t</ChatInputContextProvider>\n\t\t\t\t\t\t\t</ChatContextProvider>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityContainer.One>\n\t\t\t) : (\n\t\t\t\t<div className={'flex-centered h-full w-full text-xl font-semibold dark:text-white'}>\n\t\t\t\t\t{groupList?.items?.length\n\t\t\t\t\t\t? t('select_group_chat')\n\t\t\t\t\t\t: isUnreadFilterActive\n\t\t\t\t\t\t? t('have_no_unread_group_chats')\n\t\t\t\t\t\t: t('have_no_group_chats')}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport function GroupChat(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<GroupChatInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport Highlighter from 'react-highlight-words';\nimport { normalizeSearchResult } from '../../../shared/components/LastMessageView';\nimport { IMessage } from '../../../shared/interfaces';\n\ntype Props = {\n\tmessage: IMessage;\n\tlistItemClickHandler: (messageId: number) => void;\n\tsearchQuery: string;\n};\n\nfunction SearchMessageItem({ message, listItemClickHandler, searchQuery }: Props) {\n\tconst name = `${message.from_user?.first_name} ${message.from_user?.last_name}`;\n\tconst avatarSrc = message?.from_user?.avatar?.thumbnail_150;\n\treturn (\n\t\t<>\n\t\t\t<ListItem\n\t\t\t\tonClick={() => listItemClickHandler(message.message_id!)}\n\t\t\t\tclassName=\"hover:bg-kprimary-200 cursor-pointer transition\"\n\t\t\t>\n\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t<Avatar alt={name} src={avatarSrc} />\n\t\t\t\t</ListItemAvatar>\n\t\t\t\t<ListItemText\n\t\t\t\t\tclassName=\"dark:text-white\"\n\t\t\t\t\tprimary={name}\n\t\t\t\t\tsecondary={<MessageText messageText={message?.text || ''} searchQuery={searchQuery} />}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t\t<Divider variant=\"inset\" component=\"li\" />\n\t\t</>\n\t);\n}\n\ntype MessageTextType = {\n\tsearchQuery: string;\n\tmessageText: string;\n};\n\nfunction MessageText({ searchQuery, messageText }: MessageTextType) {\n\t// const splittedWords =\n\t// \tsearchQuery && !isEmpty(searchQuery) && searchQuery.toLowerCase().split(/\\s/);\n\t// const searchWords = [isArray(splittedWords) && splittedWords.join(' ')] || [];\n\tif (searchQuery) {\n\t\tconst searchWords = searchQuery.split(/\\s/).filter((word: string) => word);\n\t\tconst normalizedText = '' + normalizeSearchResult(messageText, searchQuery, 25);\n\n\t\treturn (\n\t\t\t<span>\n\t\t\t\t<Highlighter\n\t\t\t\t\thighlightClassName=\"highlighted\"\n\t\t\t\t\tsearchWords={searchWords}\n\t\t\t\t\tautoEscape\n\t\t\t\t\ttextToHighlight={normalizedText}\n\t\t\t\t/>\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn <span>{messageText}</span>;\n}\n\nexport default SearchMessageItem;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useQueryParams, useSearchQuery } from '../../../shared/hooks';\nimport { useAppState } from '../../../shared/state';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useGroupMessageSearch } from '../hooks';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport List from '@material-ui/core/List';\nimport EntityContainer from 'modules/entity/containers';\nimport { Loader, LoadMoreVisible } from '../../../shared/components';\nimport SearchMessageItem from '../chat-components/SearchMessageItem';\nimport { IMessage } from '../../../shared/interfaces';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { useTranslation } from 'react-i18next';\nimport { useTranslationHelpers } from 'shared/hooks/useTranslationHelpers';\nimport clsx from 'clsx';\n\nexport function GroupMessageSearch() {\n\tconst { t } = useTranslation();\n\tconst { isRTL } = useTranslationHelpers();\n\tconst [page, setPage] = useState(1);\n\tconst { groupSearchOpen, companyId, setGroupMessageSearchQuery, setIsLastPageLoadedTriggered } =\n\t\tuseAppState();\n\tconst { query, setQuery, searchQuery } = useSearchQuery();\n\tconst { toggleSearchSidebar } = useGroupMessageSearch();\n\tconst { query: searchQueryParams } = useQueryParams();\n\tconst { changeUrlParams } = useQueryParams<{ chat: number; searchedMessageId?: number }>();\n\tconst inputRef = useRef(null);\n\n\tconst listItemClickHandler = useCallback(\n\t\t(messageId) => {\n\t\t\tif (searchQuery.length > 0) {\n\t\t\t\tchangeUrlParams({ chat: Number(searchQueryParams.chat), searchedMessageId: messageId });\n\n\t\t\t\tsetIsLastPageLoadedTriggered(true);\n\t\t\t}\n\t\t},\n\t\t[searchQuery, searchQueryParams]\n\t);\n\n\tuseEffect(() => {\n\t\tif (groupSearchOpen && inputRef.current) {\n\t\t\tsetTimeout(() => {\n\t\t\t\t(inputRef?.current as unknown as HTMLInputElement).focus();\n\t\t\t}, 300);\n\t\t}\n\t}, [groupSearchOpen]);\n\n\tuseEffect(() => {\n\t\tsetGroupMessageSearchQuery(searchQuery);\n\t}, [searchQuery]);\n\n\tconst handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetPage(1);\n\t\tsetQuery(e.target.value);\n\t};\n\n\tconst closeSearchSidebar = () => {\n\t\tchangeUrlParams({ chat: Number(searchQueryParams.chat) }, true);\n\t\ttoggleSearchSidebar();\n\t};\n\n\tconst chatId = searchQueryParams?.chat;\n\n\treturn (\n\t\t<div className=\"flex h-full flex-col border-l p-1 pr-2 dark:bg-kdark-dark333\">\n\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t<IconButton aria-label=\"close\" onClick={closeSearchSidebar} className=\"!mr-1\">\n\t\t\t\t\t<CloseIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<div className=\"search-input relative flex-grow\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\tclassName=\"group-search-input w-full rounded border p-2 pr-4 transition focus:outline-none focus:ring focus:ring-primary dark:bg-kdark-lighter dark:text-white\"\n\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\tplaceholder={t('type_message_keyword')}\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={clsx('hover:text-kprimary absolute top-3 cursor-pointer', {\n\t\t\t\t\t\t\t'right-5': !isRTL,\n\t\t\t\t\t\t\t'left-5': isRTL\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\t{!query.length ? <AiOutlineSearch /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"content flex-grow\">\n\t\t\t\t<>\n\t\t\t\t\t<Scrollbars\n\t\t\t\t\t\tclassName=\"rct-scroll\"\n\t\t\t\t\t\tautoHide\n\t\t\t\t\t\tstyle={{ height: 'calc(100vh - 104px)' }}\n\t\t\t\t\t\tonScroll={() => {}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<List className=\"mb-0 p-0\">\n\t\t\t\t\t\t\t{searchQuery.length && companyId ? (\n\t\t\t\t\t\t\t\t<EntityContainer.All\n\t\t\t\t\t\t\t\t\tentity=\"search-messages\"\n\t\t\t\t\t\t\t\t\tname={`${companyId}-AllSearchMessages-${chatId}`}\n\t\t\t\t\t\t\t\t\turl={`/${companyId}/ims/message_search/`}\n\t\t\t\t\t\t\t\t\tappendData\n\t\t\t\t\t\t\t\t\tparams={{\n\t\t\t\t\t\t\t\t\t\tpage,\n\t\t\t\t\t\t\t\t\t\tlimit: 20,\n\t\t\t\t\t\t\t\t\t\textra: { search: searchQuery, group_chat_id: chatId }\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tprimaryKey=\"message_id\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{({ isFetched, items, meta }) => {\n\t\t\t\t\t\t\t\t\t\tif (!items.length && searchQuery && isFetched) {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"p-4 !text-xl font-bold dark:text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t('no_messages_found')}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t{(items as IMessage[]).map((message) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SearchMessageItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={message.message_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsearchQuery={searchQuery}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlistItemClickHandler={listItemClickHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t{!isFetched && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{isFetched &&\n\t\t\t\t\t\t\t\t\t\t\t\tmeta?.current_page &&\n\t\t\t\t\t\t\t\t\t\t\t\tmeta?.last_page &&\n\t\t\t\t\t\t\t\t\t\t\t\tmeta?.current_page < meta?.last_page ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<LoadMoreVisible setPage={() => setPage((prev) => prev + 1)} />\n\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t</EntityContainer.All>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<p className=\"!p-4 dark:text-white\">{t('please_search_for_messages')}</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Scrollbars>\n\t\t\t\t</>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/** @jsxImportSource @emotion/react */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { GroupSidebarSearch } from './components/GroupSidebarSearch';\nimport { GroupList } from './components/GroupList';\nimport { GroupChat } from './chat-components/GroupChat';\nimport { useGroupInitialSettings } from './hooks/useGroupInitialSettings';\nimport { useQueryParams, useUnreadCaseTab, useWindowSize } from '../../shared/hooks';\nimport clsx from 'clsx';\nimport { isMobile } from 'react-device-detect';\nimport { Helmet } from 'react-helmet';\nimport { ErrorBoundary } from 'shared/components';\nimport { useAppState } from 'shared/state';\nimport { GroupMessageSearch } from './components';\nimport { StatusPriorityMessagePopup } from 'shared/components/Chat/components';\nimport { WhiteModal } from 'shared/components/Elements';\nimport { useTranslationHelpers } from 'shared/hooks/useTranslationHelpers';\n\nconst PAGE_ELEM_WIDTHS = {\n\tAPP_SIDEBAR: 285,\n\tAPP_CONTAINER: 1155,\n\tAPP_CONTAINER_CONTENT_PADDING_LEFT: 28,\n\tCHAT_SIDEBAR: 362,\n\tCHAT_SIDEBAR_DIFFERENCE_ON_SEARCH_OPEN: 77,\n\tCHAT_SIDEBAR_MARGIN_RIGHT: 8,\n\tGROUP_SEARCH_SIDEBAR: 285\n};\n\nconst {\n\tAPP_SIDEBAR,\n\tAPP_CONTAINER_CONTENT_PADDING_LEFT,\n\tCHAT_SIDEBAR,\n\tCHAT_SIDEBAR_MARGIN_RIGHT,\n\tGROUP_SEARCH_SIDEBAR,\n\tCHAT_SIDEBAR_DIFFERENCE_ON_SEARCH_OPEN\n} = PAGE_ELEM_WIDTHS;\n\nfunction GroupsInner() {\n\tuseGroupInitialSettings();\n\tconst { unreadCasesQuantity, isHidden } = useUnreadCaseTab('Group chats');\n\tconst { query } = useQueryParams();\n\tconst {\n\t\tgroupSearchOpen,\n\t\tgroupsUnreadCountData,\n\t\tsetStatusPriorityMessagePopup,\n\t\tstatusPriorityMessagePopup\n\t} = useAppState();\n\tconst { width: windowWidth } = useWindowSize();\n\tconst [isUnreadFilter, setIsUnreadFilter] = useState(false);\n\tconst { isRTL } = useTranslationHelpers();\n\n\tconst toggleIsUnreadFilter = useCallback(() => {\n\t\tsetIsUnreadFilter((prev) => !prev);\n\t}, []);\n\n\tconst closeStatusPriorityMessagePopup = () => setStatusPriorityMessagePopup(null);\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tisUnreadFilter &&\n\t\t\t!Object.values(groupsUnreadCountData)?.filter((count) => count > 0).length\n\t\t) {\n\t\t\tsetIsUnreadFilter(false);\n\t\t}\n\t}, [groupsUnreadCountData]);\n\n\tconst COMPUTED_CHAT_WIDTH =\n\t\twindowWidth! -\n\t\tAPP_SIDEBAR -\n\t\tAPP_CONTAINER_CONTENT_PADDING_LEFT -\n\t\tCHAT_SIDEBAR -\n\t\tCHAT_SIDEBAR_MARGIN_RIGHT -\n\t\tGROUP_SEARCH_SIDEBAR;\n\n\tconst COMPUTED_CHAT_WIDTH_NORMAL =\n\t\twindowWidth! -\n\t\tAPP_SIDEBAR -\n\t\tAPP_CONTAINER_CONTENT_PADDING_LEFT -\n\t\tCHAT_SIDEBAR -\n\t\tCHAT_SIDEBAR_MARGIN_RIGHT;\n\n\treturn (\n\t\t<div\n\t\t\t/*ref={casePageRef}*/ className={clsx('flex h-full w-full flex-col pb-1 lg:pt-7', {\n\t\t\t\t'pl-2 lg:pl-7': !isRTL,\n\t\t\t\t'pr-2 lg:pr-7': isRTL\n\t\t\t})}\n\t\t>\n\t\t\t<div className=\"relative flex h-full\">\n\t\t\t\t{(!isHidden || unreadCasesQuantity === 0) && (\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<title>KENNEKT | Group chats</title>\n\t\t\t\t\t</Helmet>\n\t\t\t\t)}\n\t\t\t\t<div\n\t\t\t\t\tclassName={clsx('w-full flex-shrink-0 transition-all', {\n\t\t\t\t\t\thidden: query.chat && isMobile,\n\t\t\t\t\t\t'lg:w-[362px]': !groupSearchOpen,\n\t\t\t\t\t\t'lg:w-[285px]': groupSearchOpen,\n\t\t\t\t\t\t'lg:ml-2': isRTL,\n\t\t\t\t\t\t'lg:mr-2': !isRTL\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"group-sidebar flex h-full flex-col pt-4 font-poppins lg:pt-0\">\n\t\t\t\t\t\t{/*<GroupSidebarTop />*/}\n\t\t\t\t\t\t<GroupSidebarSearch\n\t\t\t\t\t\t\tisUnreadFilter={isUnreadFilter}\n\t\t\t\t\t\t\ttoggleIsUnreadFilter={toggleIsUnreadFilter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<GroupList isUnreadFilter={isUnreadFilter} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={clsx(!groupSearchOpen && 'flex-grow', 'transition-all')}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: groupSearchOpen\n\t\t\t\t\t\t\t? `${COMPUTED_CHAT_WIDTH + CHAT_SIDEBAR_DIFFERENCE_ON_SEARCH_OPEN}px`\n\t\t\t\t\t\t\t: COMPUTED_CHAT_WIDTH_NORMAL\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<GroupChat isUnreadFilterActive={isUnreadFilter} />\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t`message-search bottom-o absolute top-0 w-[285px] bg-white transition`,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'translate-x-[285px]': !groupSearchOpen && !isRTL,\n\t\t\t\t\t\t\t'translate-x-0': groupSearchOpen && !isRTL\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'translate-x-[-285px]': !groupSearchOpen && isRTL,\n\t\t\t\t\t\t\t'translate-x-0': groupSearchOpen && isRTL\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'left-0': isRTL,\n\t\t\t\t\t\t\t'right-0': !isRTL\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<GroupMessageSearch />\n\t\t\t\t\t<span className=\" hidden focus:ring-2 focus:ring-primary\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<WhiteModal\n\t\t\t\thandleModalOpen={closeStatusPriorityMessagePopup}\n\t\t\t\topen={statusPriorityMessagePopup?.type === 'group'}\n\t\t\t\tmaxWidth={446}\n\t\t\t>\n\t\t\t\t<StatusPriorityMessagePopup onClose={closeStatusPriorityMessagePopup} />\n\t\t\t</WhiteModal>\n\t\t</div>\n\t);\n}\n\nexport default function Groups() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<GroupsInner />\n\t\t</ErrorBoundary>\n\t);\n}\n","import { useEffect } from 'react';\nimport { useUnreadCount } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\n\nexport function useGroupInitialSettings() {\n\tconst { setPageType, companyId } = useAppState();\n\n\tconst { fetchCompanyAllUnreadCounts } = useUnreadCount();\n\n\tuseEffect(() => {\n\t\tif (companyId)\n\t\t\tfetchCompanyAllUnreadCounts({\n\t\t\t\tgroupUnread: true\n\t\t\t});\n\t}, [companyId]);\n\n\tuseEffect(() => {\n\t\tsetPageType(true);\n\t\treturn () => {\n\t\t\tsetPageType(false);\n\t\t};\n\t}, [setPageType]);\n}\n","import React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { InputProps, makeStyles } from '@material-ui/core';\nimport { createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tborder: '1px solid #B8BCCF',\n\t\t\tfontSize: '15px',\n\t\t\tlineHeight: 1,\n\t\t\tborderRadius: '12px',\n\t\t\tpadding: '10px 30px',\n\t\t\tfontWeight: 300,\n\t\t\twidth: '100%'\n\t\t},\n\t\tinput: {\n\t\t\tpadding: 0\n\t\t}\n\t})\n);\n\nexport function InputText(props: InputProps) {\n\tconst classes = useStyles();\n\n\treturn <InputBase classes={{ root: classes.root, input: classes.input }} {...props} />;\n}\n\nexport default InputText;\n","import React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { InputProps, makeStyles } from '@material-ui/core';\nimport { createStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tborder: '1px solid #B8BCCF',\n\t\t\tfontSize: '15px',\n\t\t\tlineHeight: 1,\n\t\t\tborderRadius: '12px',\n\t\t\tpadding: '10px 40px 10px 20px',\n\t\t\tfontWeight: 300,\n\t\t\twidth: '100%'\n\t\t},\n\t\tinput: {\n\t\t\tpadding: 0\n\t\t},\n\t\tgridContainer: {\n\t\t\tposition: 'relative'\n\t\t},\n\t\ticonRoot: {\n\t\t\tposition: 'absolute',\n\t\t\ttop: '50%',\n\t\t\ttransform: 'translateY(-50%)',\n\t\t\tfontSize: '22px',\n\t\t\twidth: '22px',\n\t\t\theight: '22px',\n\t\t\tright: '15px'\n\t\t},\n\t\tsvgRoot: {\n\t\t\tposition: 'absolute'\n\t\t}\n\t})\n);\n\nexport function InputTextIcon(props: InputProps) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container classes={{ container: classes.gridContainer }}>\n\t\t\t<InputBase classes={{ root: classes.root, input: classes.input }} {...props} />\n\t\t\t<div className={classes.iconRoot}>\n\t\t\t\t<SearchIcon fontSize={'inherit'} classes={{ root: classes.svgRoot }} />\n\t\t\t</div>\n\t\t</Grid>\n\t);\n}\n","import { InputText } from './InputText';\nimport { InputTextIcon } from './InputTextIcon';\nimport { SwitchComp } from './SwitchComp';\n\nexport { SwitchComp } from './SwitchComp';\nconst fields = {\n\tInputText,\n\tInputTextIcon,\n\tSwitchComp\n};\n\nexport default fields;\n"],"names":["imgPath","config","GroupFormElements","onSuccess","setFieldValue","isSubmitting","values","isEditing","useState","uploadMeta","setUploadMeta","cancelSending","setCancelSending","image","file","setFile","t","useTranslation","useEffect","className","label","labelClasses","name","component","KntInputField","placeholder","required","autoComplete","maxLength","type","src","get","alt","variant","value","onClick","tiled","withOverlay","onClickHandler","color","isDisabled","CreateGroupForm","useAppState","companyId","groupSearchQuery","changeUrlParams","useQueryParams","entity","url","method","primaryKey","sendAsFormData","normalizeData","data","prependData","fields","onSubmitKey","response","resetForm","chat","id","onError","error","console","log","GroupSidebarSearch","toggleIsUnreadFilter","isUnreadFilter","query","setQuery","useDebounce","searchQuery","setGroupSearchQuery","groupsUnreadCountData","useWhiteModal","open","modalHandler","WhiteModal","totalGroupUnreadCount","Object","filter","count","length","isRTL","useTranslationHelpers","onChange","e","target","clsx","Fab","size","handleModalOpen","UpdateEntities","Actions","useChatMenu","pin_time","chatId","isFromChat","anchorEl","setAnchorEl","managerRequested","setManagerRequested","toggleChatPanel","Boolean","dispatch","useDispatch","pinCase","useAxios","cb","success","args","isPinning","entityId","String","Date","now","fetchData","handleClick","event","currentTarget","handleNotificationClose","reason","handleMenuItemClick","menuType","handleCloseMenu","ChatItemMarkup","title","last_message_author","last_message_type","last_message_text","last_message_time","draftMessage","isMuted","lastReadMessage","setActiveDraft","chatsMentionList","scheduledMessageIds","setChatUuid","isActive","Number","chatAvatar","hasUnread","hasMentions","hasScheduledMessages","css","unread","hasUnreadMessage","nanoid","LastMessageView","time","IconVertical","keepMounted","onClose","MenuItem","ChatItemInner","props","ChatItem","isCompact","GroupListInner","page","setPage","searchPage","setSearchPage","userData","useAuth","isActiveChat","params","extra","buildGroupParams","limit","CHATS_MESSAGES_LIMIT","appendData","isCancellable","cancelField","items","isFetched","meta","mappedAndFilteredChatItems","item","toString","sortedChatItems","sortChatList","map","thumbnail_150","members","find","member","user","is_mute","draft_message","last_read_message","Array","_","key","ChatListLoader","current_page","last_page","GroupList","speed","width","height","viewBox","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","GroupMessagesListInner","useDimensions","chatBodyRef","chatBodyHeight","useChatInputContext","setIsDelayedMessage","isDelayedMessage","afterMessagesFetchService","useOnInit","entityPage","lastReadMsgIdFromQuery","hasUnreadCached","useMemo","firstUnread","useRef","useChatContext","isSetSearchReply","allowToLoad","setAllowToLoad","direction","messagesLimit","replyLoading","scrollToMsgId","setScrollPosition","state","isMsgHasBeenIndicated","virtuosoRef","isScheduledChat","entityType","chatEntity","useGetEntityOne","entityName","useChatMessagesList","cursorTop","cursorBot","handlePageLoading","localEntityId","scrollIntoElement","isLoadedRepliedMessage","messageVisibleHandler","setUpdateEntityPage","searchedMessageId","paginationDepsRef","cursor","isLastPageFetched","setIsLastPageFetched","isFirstPageFetched","setIsFirstPageFetched","totalMessagesCount","removeUnreadCountFromCaseList","messagesUrl","shouldStartFromFirstUnread","getChatMessagesEntityName","isScheduled","isUniq","cursorBased","replaceIds","entity_id","onInit","messagesList","anywayAllowToLoadIfNotInScrollAndIndicateMode","ref","pinned_message","isSafari","context","isConfirmationRequired","firstItemIndex","increaseViewportBy","top","bottom","initialTopMostItemIndex","index","align","behavior","atTopStateChange","atTop","atBottomStateChange","atBottom","itemContent","tempMessage","text","from_user","idx","findIndex","message","current","isFirstUnread","mapKey","custom_uuid","checkMsgAuthor","currentMsgAuthorId","prevMsgAuthorId","nextMsgAuthorId","prevMsgType","nextMsgType","isSameFromUserWithPrev","isSameFromUserWithNext","content","offset","scrollDelay","isVisible","components","Scroller","VirtuosoScrollWrapper","Item","VirtuosoCustomItem","Footer","undefined","VirtuosoFooter","GroupMessagesList","resetKeys","resetHandler","useCallback","window","location","reload","onResetHandler","getOne","Selectors","GroupChatInputControlsInner","isAllowedSendMsg","setMessage","reply","setReply","editingMessage","isMentionSearching","setMessageScheduleDate","messageScheduleDate","handleScheduleModalToggle","sendJsonMessage","useChatSocket","sendChatMessage","useChatMessage","updateEntities","useUpdateEntities","activeDraft","useDraftMessage","removeLS","updateEntityDraft","getLS","sendDeleteDraft","tempMessageEvent","setTempMessageEvent","draftObject","caseChatEntity","useSelector","onSubmit","preventDefault","updatingData","replied_to_id","replied_to","msgSendingChatId","uuid","edited","is_draft","scheduled_to","onFormSubmit","isGroup","GroupChatInputControls","PermissionItem","Component","iconProp","field_name","handleChange","property","disabled","checked","ChatPermissionMenuItem","handler","Icon","EditGroupForm","description","PermissionsInner","membersCount","memberId","isOwner","isAdmin","removeQueryParams","exitLoading","setExitLoading","setExitOpen","deleteVisible","setDeleteVisible","deleteLoading","setDeleteLoading","toggleDeleteVisible","prev","toggleDeleteLoading","propertyRef","owner","role","currentMember","canLeaveChat","is_allowed_exit_group","canDeleteChat","is_allowed_delete_group","updatePermission","dynamicValues","setPropertyHandler","fieldName","handleMute","changingData","chatProperty","handlePropertyChange","handleChatMute","handleLocalDelete","useEntityForm","deleteData","errors","finally","handleExitRequest","handleRequest","leaveGroupChat","localDelete","permissions","BiMessageSquareDetail","show","CgAdd","MdOutlineRemoveCircleOutline","AiOutlinePushpin","AiOutlineEdit","IoExitOutline","MdHistoryEdu","hasSwitch","currentUserProperty","handlerSwitchMute","isMuting","deleteGroupChat","imsData","useGroupRequest","openEditModal","toUpperCase","is_allowed_edit_info","permission","GoMute","GoUnmute","MdOutlineDelete","featureHandler","isOpen","toggleHandler","hasLoader","isLoading","Permissions","GroupChatMembersInner","autoHide","style","search","smallSize","letter","first_name","last_name","avatar","thumbnail","MembersSkeleton","GroupChatMembers","useGroupMessageSearch","setGroupSearchOpen","groupSearchOpen","handleSearchBtnClick","toggleSearchSidebar","useStyles","makeStyles","theme","root","display","margin","spacing","purple","palette","getContrastText","deepPurple","areAddedMembers","selectedMembers","isAddingMember","isAdminManager","showChatEditSettingModal","setOpen","classes","firstName","lastName","companyName","isIndividualClient","username","avatarSrc","FN","LN","userId","isBusinessAdmin","is_admin","isStaff","is_staff","isCurrentChatOwner","isMemberSelected","selectedMember","company","ListItem","button","classnames","includes","ListItemAvatar","Avatar","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","CheckCircleOutline","is_allowed_remove_user","Edit","Delete","isMuteSetting","isMute","Switch","inputProps","FormRequest","staffMembersLength","is_allowed_send_msg","is_allowed_add_user","is_allowed_pin_msg","show_history","setProperty","reloadEntityAll","useLoadAll","prevProperty","payload","updateData","IconMessage","IconAdd","IconRemove","IconPin","IconEdit","IconExit","setting","formRequest","MembersList","chatEditSettingModal","loading","setLoading","showNotification","useNotistack","closeRemoveMemberHandler","TextField","fullWidth","List","dir","dense","loadOneRequest","relations","err","maxWidth","minWidth","MembersListWithErrorBoundary","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","AddChatMembers","activeChat","setSelectedMembers","selectedMembersFull","setSelectedMembersFull","setValue","is_individual","is_business","is_member","options","setOptions","selected","setSelected","handleAddMember","reduce","acc","curr","filteredIds","selId","filteredMembers","m","exclude_ids","join","Tune","convertToLocalizationKey","CheckCircle","AddChatMembersWithErrorBoundary","TabPanel","children","other","hidden","Box","p","Typography","a11yProps","isPermitted","React","isAllowed","AppBar","position","Tabs","newValue","indicatorColor","textColor","Tab","icon","People","PersonAdd","createStyles","paper","borderRadius","padding","GroupChatHeaderInner","setScrollToMessageHandler","lastReadMessageId","closeSocket","saveDraft","pinTime","membersModalOpen","membersModalOpenHandler","membersAddModalOpen","membersAddModalOpenHandler","MembersAddWhiteModal","mainText","headerAvatar","isEmpty","avatarLetter","avatarAlt","currentUserMemberData","ChatHeaderLayout","HeaderActions","noPadding","cropRounded","ChatMembers","left","pinnedMessage","scrollToHandler","GroupChatHeader","GroupChatInner","isUnreadFilterActive","groupList","useGetEntity","all","status","ChatLayout","ChatHeader","ChatBody","ChatInput","GroupChat","MessageText","messageText","searchWords","split","word","normalizedText","normalizeSearchResult","highlightClassName","autoEscape","textToHighlight","listItemClickHandler","message_id","Divider","GroupMessageSearch","setGroupMessageSearchQuery","setIsLastPageLoadedTriggered","useSearchQuery","searchQueryParams","inputRef","messageId","setTimeout","focus","Close","onScroll","group_chat_id","textAlign","APP_SIDEBAR","APP_CONTAINER_CONTENT_PADDING_LEFT","CHAT_SIDEBAR","CHAT_SIDEBAR_MARGIN_RIGHT","GROUP_SEARCH_SIDEBAR","CHAT_SIDEBAR_DIFFERENCE_ON_SEARCH_OPEN","GroupsInner","setPageType","fetchCompanyAllUnreadCounts","useUnreadCount","groupUnread","useGroupInitialSettings","useUnreadCaseTab","unreadCasesQuantity","isHidden","setStatusPriorityMessagePopup","statusPriorityMessagePopup","windowWidth","useWindowSize","setIsUnreadFilter","closeStatusPriorityMessagePopup","COMPUTED_CHAT_WIDTH","COMPUTED_CHAT_WIDTH_NORMAL","Helmet","isMobile","Groups","border","fontSize","lineHeight","fontWeight","input","InputText","gridContainer","iconRoot","transform","right","svgRoot","SwitchComp"],"sourceRoot":""}