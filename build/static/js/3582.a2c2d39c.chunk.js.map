{"version":3,"file":"static/js/3582.a2c2d39c.chunk.js","mappings":"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","sources":["pages/Checkout/components/CheckoutCard.tsx","pages/Checkout/components/CheckoutHeader.tsx","pages/Checkout/mockData/planJson.ts","pages/Checkout/mockData/paymentMethodJson.ts","pages/Checkout/components/CheckoutPlans.tsx","pages/Checkout/components/CheckoutMethods.tsx","pages/Checkout/utils.ts","pages/Checkout/paymentConsts.ts","pages/Checkout/hooks/useCheckout.ts","pages/Checkout/components/CheckoutSidebar.tsx","pages/Checkout/components/CardsCollection.tsx","pages/Checkout/components/CheckoutPaymentPopup.tsx","pages/Checkout/Checkout.tsx","pages/Payments/hooks/usePayments.ts","pages/Payments/hooks/useSubscription.ts","pages/Payments/utils/parsePlans.ts"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\ntype Props = {\n\tisActive?: boolean;\n\tisFixed?: boolean;\n} & React.HTMLAttributes<HTMLElement>;\nexport const CheckoutCard: React.FC<Props> = ({\n\tchildren,\n\tisActive = false,\n\tisFixed = false,\n\tclassName,\n\t...rest\n}) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={clsx(\n\t\t\t\t'cursor-pointer rounded-lg border transition ' +\n\t\t\t\t\t'flex-centered flex-col hover:border-primary',\n\t\t\t\t{\n\t\t\t\t\t'border-kgrey-dark-2': !isActive,\n\t\t\t\t\t'border-primary-dark bg-primary-dark-50': isActive,\n\t\t\t\t\t'px-4 pt-5 pb-4': !isFixed,\n\t\t\t\t\t'h-[105px] w-[105px]': isFixed\n\t\t\t\t},\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { AvatarSized } from '../../../shared/components/Elements';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\n\nexport function CheckoutHeader({ invoiceId }: { invoiceId: number }) {\n\tconst { company } = useAuth();\n\n\treturn (\n\t\t<div className=\"checkout__header border-b pb-2.5\">\n\t\t\t<h2 className=\"mb-4 text-lg font-semibold text-kdark-lighter dark:text-white\">{`Order summary ${\n\t\t\t\tinvoiceId ? 'for unpaid invoice ' + invoiceId + ' (Upgradable)' : ''\n\t\t\t}`}</h2>\n\t\t\t<div className=\"mb-4 text-xs text-kgrey-menuText\">Upgrade Business:</div>\n\t\t\t<div className=\"flex-center-y\">\n\t\t\t\t<AvatarSized\n\t\t\t\t\tsize={40}\n\t\t\t\t\tletter=\"S\"\n\t\t\t\t\talt=\"some descr\"\n\t\t\t\t\tsrc={company?.company?.icon?.thumbnail_150 || company?.company?.icon?.url}\n\t\t\t\t/>\n\t\t\t\t<div className=\"ml-2 text-xs text-kdark-text dark:text-white\">{company?.company?.name}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","export const planJson = [\n\t{ id: 1, title: 'Billed Yearly', price: 2, type: 'year' },\n\t{ id: 2, title: 'Billed Monthly', price: 4, type: 'month' }\n];\n","export const paymentMethodJson = [\n\t{ id: 1, text: 'Credit Card', type: 'card' },\n\t{ id: 2, text: 'Paypal', type: 'paypal' }\n];\n","import React from 'react';\nimport { planJson } from '../mockData';\nimport { CheckoutCard } from './CheckoutCard';\nimport { CheckoutPlan, PriceType } from '../types';\nimport clsx from 'clsx';\n\ntype Props = {\n\tplanClickHandler: (plan: CheckoutPlan) => void;\n\tplan: CheckoutPlan;\n\tprice: PriceType;\n\tyearlyDiscount: number;\n};\n\nexport function CheckoutPlans({ planClickHandler, plan, price, yearlyDiscount }: Props) {\n\treturn (\n\t\t<div className=\"checkout__plans mb-5 flex\">\n\t\t\t{planJson.map((planItem) => {\n\t\t\t\tconst isYearPlan = planItem.type === 'year';\n\n\t\t\t\treturn (\n\t\t\t\t\t<CheckoutCard\n\t\t\t\t\t\tonClick={() => planClickHandler(planItem.type as CheckoutPlan)}\n\t\t\t\t\t\tclassName={clsx('mr-3 last:mr-0', { relative: isYearPlan })}\n\t\t\t\t\t\tkey={planItem.id}\n\t\t\t\t\t\tisActive={plan === planItem.type}\n\t\t\t\t\t>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h4 className=\"mb-1.5 text-xs text-kdark-text dark:text-white\">{planItem.title}</h4>\n\t\t\t\t\t\t\t<strong className=\"mb-1.5 block text-xl text-primary-dark\">{`$${\n\t\t\t\t\t\t\t\tprice[isYearPlan ? 'year' : 'month']\n\t\t\t\t\t\t\t}`}</strong>\n\t\t\t\t\t\t\t<span className=\"text-10px uppercase text-kgrey-menuText\">PER member PER MONTH</span>\n\t\t\t\t\t\t\t{isYearPlan && <CheckoutDiscount yearlyDiscount={yearlyDiscount} />}\n\t\t\t\t\t\t</>\n\t\t\t\t\t</CheckoutCard>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nfunction CheckoutDiscount({ yearlyDiscount }: { yearlyDiscount: number }) {\n\treturn (\n\t\t<div className=\"flex-centered absolute -top-[7px] -right-[7px] h-[30px] w-[30px] rounded-full bg-primary-dark text-10px text-white\">\n\t\t\t{`-${yearlyDiscount}%`}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { paymentMethodJson } from '../mockData';\nimport { CheckoutCard } from './CheckoutCard';\nimport { CheckoutMethodType } from '../types';\nimport { IconCreditCard, IconPaypal } from 'shared/icons';\n\ntype Props = {\n\tmethodClickHandler: (plan: CheckoutMethodType) => void;\n\tmethod: CheckoutMethodType;\n};\n\nexport function CheckoutMethods({ methodClickHandler, method }: Props) {\n\treturn (\n\t\t<div className=\"checkout__pmethods\">\n\t\t\t<h2 className=\"mb-4 text-lg font-semibold text-kdark-lighter dark:text-white\">\n\t\t\t\tPayment Method\n\t\t\t</h2>\n\t\t\t<div className=\"flex-center-y\">\n\t\t\t\t{paymentMethodJson.map((methodItem) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<CheckoutCard\n\t\t\t\t\t\t\tonClick={() => methodClickHandler(methodItem.type as CheckoutMethodType)}\n\t\t\t\t\t\t\tclassName=\"mr-3 last:mr-0\"\n\t\t\t\t\t\t\tkey={methodItem.id}\n\t\t\t\t\t\t\tisActive={method === methodItem.type}\n\t\t\t\t\t\t\tisFixed\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{methodItem.type === 'card' ? <IconCreditCard /> : <IconPaypal />}\n\t\t\t\t\t\t\t\t<div className=\"mt-1.5 text-xs font-medium dark:text-white\">{methodItem.text}</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t</CheckoutCard>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { DAYS_IN_MONTH } from './hooks/useCheckout';\nimport { roundNumber } from '../../shared/services';\nimport { PlanType } from '../Payments/types';\nimport { CompSubscriptionType } from '../../modules/user/reducers';\n\nconst MONTH_IN_YEAR = 12;\n\nexport function calculatePrice(\n\tisExtraInvoice: boolean,\n\tprice: number,\n\tdaysInMonth: number,\n\tmemberCount: number,\n\tplan: 'year' | 'month',\n\tdaysLeft: number,\n\tallPaymentsCount: number\n) {\n\tconst computedPrice = isExtraInvoice ? price / DAYS_IN_MONTH : price;\n\tconst computedDaysOrMonths = isExtraInvoice ? (daysLeft as number) : MONTH_IN_YEAR;\n\tconst isYear = plan === 'year';\n\tconst isFreeTrial = allPaymentsCount - memberCount <= 2;\n\n\treturn roundNumber(\n\t\t(isYear ? computedPrice : price) *\n\t\t\t(isFreeTrial ? allPaymentsCount : memberCount) *\n\t\t\t(isYear ? computedDaysOrMonths : 1)\n\t);\n}\n\nexport function getFreePlan(plans: PlanType[], subscription: CompSubscriptionType) {\n\tconst userPaidStaffCount = subscription && subscription.paid_staffs_count;\n\tif (plans.length && userPaidStaffCount) {\n\t\treturn plans.find(\n\t\t\t(plan) =>\n\t\t\t\tuserPaidStaffCount >= plan.staffs_count_from &&\n\t\t\t\tuserPaidStaffCount <= plan.staffs_count_to &&\n\t\t\t\tparseFloat(plan.monthly_price) === 0 &&\n\t\t\t\tparseFloat(plan.yearly_price) === 0\n\t\t);\n\t}\n}\n","export const MAX_USERS_PLAN = 10000;\nexport const MIN_USER_ALLOWED = 1;\n","import { useCallback, useEffect, useState } from 'react';\nimport { CheckoutMethodType, CheckoutPlan, PaymentDetailsType, PriceType } from '../types';\nimport { useAxios, useRouter } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\nimport { getPlanByMemberCount, getSubscriptionRemainedTIme } from 'shared/services';\nimport { ParsedPlanType, PlanType } from '../../Payments/types';\nimport { parsePlans } from '../../Payments/utils/parsePlans';\nimport { CompSubscriptionType } from '../../../modules/user/reducers';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\nimport { calculatePrice, getFreePlan } from '../utils';\nimport { MAX_USERS_PLAN } from '../paymentConsts';\n\ntype StaffCount = { staffs_count: number };\nexport const DAYS_IN_MONTH = 30;\ntype PaidStaffCountType = {\n\tpaid_staffs_count: number;\n\tid: number;\n\tcompany_id: number;\n};\n\nexport function useCheckout() {\n\tconst { companyId, isAppAvailable } = useAppState();\n\tconst { companies } = useAuth();\n\tconst [plan, setPlan] = useState<CheckoutPlan>('year');\n\tconst [method, setMethod] = useState<CheckoutMethodType>('card');\n\tconst [memberCount, setMemberCount] = useState<number>(0);\n\tconst [allPaymentsCount, setAllPaymentsCount] = useState<number>(0);\n\tconst [staffCount, setStaffCount] = useState(0);\n\tconst [parsedPlansList, setParsedPlansList] = useState<ParsedPlanType[] | null>(null);\n\tconst [selectedPlan, setSelectedPlan] = useState<ParsedPlanType | null>(null);\n\tconst [openPaymentPopup, setOpenPaymentPopup] = useState<null | PaymentDetailsType>(null);\n\tconst [price, setPrice] = useState<PriceType>({\n\t\tmonth: 6.5,\n\t\tyear: Math.floor(6.5 * 0.6 * 100) / 100\n\t});\n\tconst [subscription, setSubscription] = useState<CompSubscriptionType | null>(null);\n\n\tconst [daysLeft, setDaysLeft] = useState<number | null>(null);\n\n\tconst { params, history } = useRouter();\n\n\tconst isExtraInvoice = isAppAvailable && subscription?.subscription_type === 'PRO';\n\n\tconst goBack = () => history.goBack();\n\n\t//Computing months left in current subscription when paying for  extra members\n\t//We must pay only for those left month when main plan is yearly.\n\tuseEffect(() => {\n\t\tif (subscription) {\n\t\t\tconst remainingDayString = getSubscriptionRemainedTIme(subscription?.end_date);\n\t\t\t// console.log('remainedMonth', { months, computedMonths, daysLeft: +remainingDayString[0] });\n\n\t\t\tsetDaysLeft(+remainingDayString[0]);\n\t\t}\n\t}, [subscription]);\n\n\t//Set subscription object\n\tuseEffect(() => {\n\t\tif (companyId && companies.length) {\n\t\t\tconst currentCompany = companies.find((com) => com.company.id === companyId);\n\t\t\tconst currentSubscription = currentCompany?.company.comp_subscription as CompSubscriptionType;\n\t\t\tif (currentSubscription) {\n\t\t\t\tsetSubscription(currentSubscription);\n\t\t\t}\n\t\t}\n\t}, [companies, companyId]);\n\n\tconst invoiceId = parseInt((params as { invoice: string })?.invoice);\n\tconst isMonthlyParam = parseInt((params as { isMonthly: string })?.isMonthly);\n\tconst staffsCountParam = parseInt((params as { staffsCount: string })?.staffsCount);\n\n\t//Set plan when paying from invoice\n\tuseEffect(() => {\n\t\tsetPlan(isMonthlyParam ? 'month' : 'year');\n\t}, [isMonthlyParam]);\n\n\tconst setPaymentDetailHandler = useCallback(\n\t\t(isClosing = false) => {\n\t\t\tsetOpenPaymentPopup(\n\t\t\t\tisClosing\n\t\t\t\t\t? null\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tcompany_id: companyId as number,\n\t\t\t\t\t\t\tstaffs_count: memberCount,\n\t\t\t\t\t\t\tpayment_type: method === 'card' ? 'STRIPE' : 'PAYPAL',\n\t\t\t\t\t\t\t// amount: roundNumber(\n\t\t\t\t\t\t\t// \t(isExtraInvoice ? price[plan] / DAYS_IN_MONTH : price[plan]) *\n\t\t\t\t\t\t\t// \t\tmemberCount *\n\t\t\t\t\t\t\t// \t\t(plan === 'year' ? (isExtraInvoice ? (daysLeft as number) : MONTH_IN_YEAR) : 1)\n\t\t\t\t\t\t\t// ),\n\t\t\t\t\t\t\tamount: calculatePrice(\n\t\t\t\t\t\t\t\tisExtraInvoice,\n\t\t\t\t\t\t\t\tprice[plan],\n\t\t\t\t\t\t\t\tDAYS_IN_MONTH,\n\t\t\t\t\t\t\t\tmemberCount,\n\t\t\t\t\t\t\t\tplan,\n\t\t\t\t\t\t\t\tdaysLeft as number,\n\t\t\t\t\t\t\t\tallPaymentsCount\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tsubscription_plan_id: selectedPlan?.id as number,\n\t\t\t\t\t\t\tis_monthly: plan === 'month',\n\t\t\t\t\t\t\torder_id: invoiceId || null,\n\t\t\t\t\t\t\tis_extra: isExtraInvoice\n\t\t\t\t\t  }\n\t\t\t);\n\t\t},\n\t\t[companyId, memberCount, method, plan, selectedPlan, price, invoiceId, isExtraInvoice, daysLeft]\n\t);\n\n\t//Request for fetching staff count in the business\n\tconst {\n\t\tfetchData: fetchStaffCount,\n\t\tresponse: staffCountResponse,\n\t\tloading: staffCountLoading\n\t} = useAxios({\n\t\turl: `/${companyId}/companies/staffs_count/`\n\t});\n\t// payment/{{company_id}}/paid-staffs-coun\n\t//Request for fetching plans\n\tconst {\n\t\tfetchData: fetchPlans,\n\t\tresponse: plansResponse,\n\t\tloading: plansLoading\n\t} = useAxios({\n\t\turl: `/${companyId}/payment/plans/`\n\t});\n\n\tconst {\n\t\tfetchData: fetchPaidStaffs,\n\t\tresponse: paidStaffResponse,\n\t\tloading: paidStaffLoading\n\t} = useAxios({\n\t\turl: `/payment/${companyId}/paid-staffs-count/`\n\t});\n\t//Fetch staff count and plans\n\tuseEffect(() => {\n\t\tif (companyId) {\n\t\t\t(async () => {\n\t\t\t\tawait fetchPaidStaffs();\n\t\t\t\tawait fetchStaffCount();\n\t\t\t\tawait fetchPlans();\n\t\t\t})();\n\t\t}\n\t}, [companyId]);\n\n\t//Set initial data after backend request\n\tuseEffect(() => {\n\t\tif ((plansResponse as any)?.results?.length && staffCountResponse) {\n\t\t\tconst staffCount = (staffCountResponse as StaffCount).staffs_count;\n\t\t\tconst parsedPlans = parsePlans((plansResponse as any)?.results as PlanType[]);\n\t\t\tconst plan = getPlanByMemberCount(staffCount, parsedPlans);\n\n\t\t\tsetStaffCount(isExtraInvoice ? staffsCountParam || 1 : staffCount);\n\t\t\tsetMemberCount(isExtraInvoice ? staffsCountParam || 1 : staffCount);\n\n\t\t\tsetParsedPlansList(parsedPlans);\n\t\t\tsetPrice(plan!.price);\n\t\t\tsetSelectedPlan(plan as ParsedPlanType);\n\t\t}\n\t}, [plansResponse, staffCountResponse, isExtraInvoice, staffsCountParam]);\n\n\tconst paidStaffCount =\n\t\t(paidStaffResponse && (paidStaffResponse as PaidStaffCountType).paid_staffs_count) ?? 0;\n\tconst hasUserFreePlan = Boolean(\n\t\tisExtraInvoice && plansResponse && getFreePlan((plansResponse as any).results, subscription)\n\t);\n\n\tuseEffect(() => {\n\t\tsetAllPaymentsCount(isExtraInvoice ? paidStaffCount + memberCount : memberCount);\n\t}, [paidStaffResponse, isExtraInvoice, memberCount]);\n\n\t//Update price on member count change\n\tuseEffect(() => {\n\t\tif (allPaymentsCount > 0 && parsedPlansList?.length) {\n\t\t\tconst parsedPlans = parsePlans((plansResponse as any)?.results as PlanType[]);\n\t\t\tconst plan = getPlanByMemberCount(allPaymentsCount, parsedPlans);\n\t\t\tsetPrice(plan!.price);\n\t\t\tsetSelectedPlan(plan as ParsedPlanType);\n\t\t}\n\t}, [memberCount, parsedPlansList, allPaymentsCount]);\n\n\tconst planClickHandler = useCallback((planText: CheckoutPlan) => setPlan(planText), []);\n\tconst methodClickHandler = useCallback(\n\t\t(methodText: CheckoutMethodType) => setMethod(methodText),\n\t\t[]\n\t);\n\n\t//Decrement count click handler\n\tconst decrementMemberCount = useCallback(() => {\n\t\tsetMemberCount((prev) => {\n\t\t\tif ((isExtraInvoice || prev > staffCount) && prev > 1) {\n\t\t\t\treturn prev - 1;\n\t\t\t} else {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t});\n\t}, [staffCount]);\n\n\t//Increment count click handler\n\tconst incrementMemberCount = useCallback(\n\t\t() =>\n\t\t\tsetMemberCount((prev) => {\n\t\t\t\tif (prev < MAX_USERS_PLAN - paidStaffCount) {\n\t\t\t\t\treturn prev + 1;\n\t\t\t\t}\n\t\t\t\treturn MAX_USERS_PLAN - paidStaffCount;\n\t\t\t}),\n\t\t[paidStaffCount]\n\t);\n\n\t//Member count Input onChange handler\n\tconst setCounterHandler = useCallback(\n\t\t({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\tconst staffCountInputValue = parseInt(value);\n\n\t\t\tif (staffCountInputValue > staffCount) {\n\t\t\t\t//Total of already paid staff count and user inputted member count must not be over MAX_USER_PLAN which is 10000\n\t\t\t\tif (staffCountInputValue + paidStaffCount > MAX_USERS_PLAN) {\n\t\t\t\t\tsetMemberCount(MAX_USERS_PLAN - paidStaffCount);\n\t\t\t\t} else {\n\t\t\t\t\tsetMemberCount(staffCountInputValue);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetMemberCount((prev) => {\n\t\t\t\t\t//IF: user has unpaid plan and wants to continue his invoice, allow any staff count from input not fixed staff count\n\t\t\t\t\tif (isExtraInvoice && prev > 0 && staffCountInputValue > 0) {\n\t\t\t\t\t\treturn staffCountInputValue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[staffCount]\n\t);\n\n\treturn {\n\t\tplan,\n\t\tmethod,\n\t\tplanClickHandler,\n\t\tmethodClickHandler,\n\t\tprice,\n\t\tdecrementMemberCount,\n\t\tincrementMemberCount,\n\t\tmemberCount,\n\t\tsetCounterHandler,\n\t\tstaffCountLoading,\n\t\tplansLoading,\n\t\tsetPaymentDetailHandler,\n\t\topenPaymentPopup,\n\t\tyearlyDiscount: selectedPlan?.yearlyDiscount,\n\t\tinvoiceId,\n\t\tgoBack,\n\t\tisExtraInvoice,\n\t\tdaysLeft,\n\t\tallPaymentsCount,\n\t\tpaidStaffLoading,\n\t\thasUserFreePlan\n\t};\n}\n","import React from 'react';\nimport { BiMinus, BiPlus } from 'react-icons/bi';\nimport { DAYS_IN_MONTH } from '../hooks/useCheckout';\nimport { calculatePrice } from '../utils';\nimport Slider from '@material-ui/core/Slider';\nimport { MAX_USERS_PLAN, MIN_USER_ALLOWED } from '../paymentConsts';\nimport { useSubscription } from '../../Payments/hooks';\n\ntype Props = {\n\tprice: number;\n\tmemberCount: number;\n\tdecrementMemberCount: () => void;\n\tincrementMemberCount: () => void;\n\tplan: 'month' | 'year';\n\tsetCounterHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\n\tisExtraInvoice: boolean;\n\tdaysLeft: number | null;\n\tallPaymentsCount: number;\n\n\thasUserFreePlan: boolean;\n};\n\nexport function CheckoutSidebar({\n\thasUserFreePlan,\n\tprice,\n\tmemberCount,\n\tdecrementMemberCount,\n\tincrementMemberCount,\n\tplan,\n\tsetCounterHandler,\n\tisExtraInvoice,\n\tdaysLeft,\n\tallPaymentsCount\n}: Props) {\n\tconst { hasUserAlreadyPaidInvoice } = useSubscription();\n\tconst isWithinFreePlan = price === 0;\n\tconst showUserBeingChargedAlertText =\n\t\t(!hasUserAlreadyPaidInvoice && !isWithinFreePlan) || (hasUserFreePlan && !isWithinFreePlan);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"mb-6\">\n\t\t\t\t<h2 className=\"py-2.5 text-lg font-semibold dark:text-white\">\n\t\t\t\t\t{plan === 'month' ? 'Monthly' : 'Yearly'} Plan\n\t\t\t\t</h2>\n\t\t\t\t<div className=\"mb-6 divide-y divide-y divide-dashed divide-kgrey-light-grey-6  rounded-lg bg-primary-dark-50 px-2.5  lg:w-[255px]\">\n\t\t\t\t\t<div className=\"flex-col py-2.5 text-kgrey-menuText\">\n\t\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={decrementMemberCount}\n\t\t\t\t\t\t\t\tclassName=\"checkout-counter mr-1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<BiMinus className=\"pointer-events-none\" />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tvalue={memberCount}\n\t\t\t\t\t\t\t\tclassName=\"w-14 border-b bg-transparent text-center text-sm font-semibold\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmin={MIN_USER_ALLOWED}\n\t\t\t\t\t\t\t\tmax={MAX_USERS_PLAN}\n\t\t\t\t\t\t\t\tonChange={setCounterHandler}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={incrementMemberCount}\n\t\t\t\t\t\t\t\tclassName=\"checkout-counter ml-1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<BiPlus className=\"pointer-events-none\" />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<span className=\"ml-2.5 text-sm\">{`member${memberCount > 1 ? 's' : ''}`}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"pointer-events-none mt-4 text-sm leading-none leading-none\">\n\t\t\t\t\t\t\t<strong className=\"pointer-events-none text-kgrey-2d2d2d dark:text-white\">{`$${price}`}</strong>\n\t\t\t\t\t\t\t<span className=\"pointer-events-none \">/ per member per month</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"py-2.5\">\n\t\t\t\t\t\t<div className=\"flex-center-between\">\n\t\t\t\t\t\t\t<span className=\"dark:text-white\">Total: </span>\n\t\t\t\t\t\t\t<strong className=\"text-lg font-bold dark:text-white\">{`$${calculatePrice(\n\t\t\t\t\t\t\t\tisExtraInvoice,\n\t\t\t\t\t\t\t\tprice,\n\t\t\t\t\t\t\t\tDAYS_IN_MONTH,\n\t\t\t\t\t\t\t\tmemberCount,\n\t\t\t\t\t\t\t\tplan,\n\t\t\t\t\t\t\t\tdaysLeft as number,\n\t\t\t\t\t\t\t\tallPaymentsCount\n\t\t\t\t\t\t\t)}`}</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/*allPaymentsCount - memberCount <= 2 && price > 0 && allPaymentsCount - memberCount !== 0 */}\n\t\t\t\t{showUserBeingChargedAlertText ? (\n\t\t\t\t\t<div className=\"mb-3 pr-4\">\n\t\t\t\t\t\t<span className=\"text-sm font-medium dark:text-white\">\n\t\t\t\t\t\t\tBecause you are subscribing to paid plan you will be charged for all of your staff\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\n\t\t\t\t{isExtraInvoice ? (\n\t\t\t\t\t<div className=\"p-tariff mr-4 rounded-lg border-t-4 border-primary-dark bg-primary-dark-50 py-5 px-4 font-poppins shadow-p-tariff lg:w-[255px]\">\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t<span className=\"dark:text-white\">Total Staff:</span>{' '}\n\t\t\t\t\t\t\t<span className=\"dark:text-white\">{allPaymentsCount}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={allPaymentsCount}\n\t\t\t\t\t\t\t\taria-labelledby=\"input-slider\"\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tclassName=\"!text-primary-dark\"\n\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport config from 'config';\nconst imgPath = `${config.PUBLIC_ASSETS}img`;\n\nexport function CardsCollection() {\n\treturn (\n\t\t<div>\n\t\t\t<h3 className=\"mb-2.5 text-xs text-kgrey-menuText\">\n\t\t\t\tWe accept the following payment methods\n\t\t\t</h3>\n\t\t\t<div className=\"flex items-center\">\n\t\t\t\t{['logo-visa', 'logo-mastercard', 'logo-paypal'].map((method) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"mr-2.5 last:mr-0\"\n\t\t\t\t\t\t\tsrc={`${imgPath}/${method}.svg`}\n\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\tkey={method}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from 'react';\nimport { PaymentDetailsType } from '../types';\nimport { NewButton } from '../../../shared/components/Elements';\nimport { useAppState } from '../../../shared/state';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\nimport { useAxios, useNotistack } from '../../../shared/hooks';\nimport { Loader } from '../../../shared/components';\nimport { Company } from '../../../modules/user/reducers';\nimport userActions from '../../../modules/user/actions';\nimport { storage } from '../../../shared/services';\nimport { useDispatch } from 'react-redux';\nimport Actions from '../../../store/actions';\nimport { useHistory } from 'react-router';\n\nconst SetSelectedUserCompany = Actions.user.setUserCompany;\n\ntype Props = {\n\tdetails: PaymentDetailsType;\n\tonSuccess: () => void;\n};\n\nexport function CheckoutPaymentPopup({ details, onSuccess }: Props) {\n\tconst { companyId } = useAppState();\n\tconst { companies, company } = useAuth();\n\tconst [loading, setLoading] = useState(false);\n\tconst { showNotification } = useNotistack();\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tif (!details?.subscription_plan_id) {\n\t\t\talert('Something wrong with payment. Please contact to support');\n\t\t\tonSuccess();\n\t\t\treturn;\n\t\t}\n\t}, []);\n\n\tconst { fetchData: processPaymentRequest } = useAxios({\n\t\turl: `${companyId}/payment/create-checkout-session/`,\n\t\tvalues: details,\n\t\tmethod: 'post',\n\t\tcb: {\n\t\t\tsuccess: (data, args) => {\n\t\t\t\tif ('payment_link' in data) {\n\t\t\t\t\tonSuccess();\n\t\t\t\t\t//Forward to Stripe's or Paypal's website\n\t\t\t\t\tlocation.href = data.payment_link;\n\t\t\t\t} else if (details && details?.amount === 0) {\n\t\t\t\t\tconst changedCompanies = companies.map((comp: Company) => {\n\t\t\t\t\t\tif (comp.company.id === companyId) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...comp,\n\t\t\t\t\t\t\t\tcompany: {\n\t\t\t\t\t\t\t\t\t...comp.company,\n\t\t\t\t\t\t\t\t\tcomp_subscription: data\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn comp;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tdispatch(userActions.loadUserCompaniesSuccess(changedCompanies));\n\t\t\t\t\tconst selectedBusiness = {\n\t\t\t\t\t\t...company,\n\t\t\t\t\t\tcompany: {\n\t\t\t\t\t\t\t...company?.company,\n\t\t\t\t\t\t\tcomp_subscription: data\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdispatch(SetSelectedUserCompany(selectedBusiness));\n\t\t\t\t\tstorage.set('company', JSON.stringify(selectedBusiness));\n\t\t\t\t\thistory.push('/payment-success');\n\t\t\t\t} else if (!('payment_link' in data) && details.amount !== 0) {\n\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t}\n\t\t\t\tsetLoading(false);\n\t\t\t},\n\t\t\terror: (error, args) => {\n\t\t\t\tconst errorText = error?.response?.data?.message;\n\t\t\t\tconsole.log('error payment', { response: error.response, errorText });\n\t\t\t\tshowNotification({ message: errorText || 'Something went wrong', variant: 'error' });\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst paymentHandler = async () => {\n\t\tsetLoading(true);\n\t\tawait processPaymentRequest();\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2 className=\"mb-6 text-lg font-bold\">\n\t\t\t\tDo you want to proceed with the following information?\n\t\t\t</h2>\n\t\t\t{loading && <Loader tiled withOverlay />}\n\t\t\t<div className=\"mb-4\">\n\t\t\t\t<dl className=\"flex-center-y mb-4\">\n\t\t\t\t\t<dt className=\"mr-2 \">Business Company:</dt>\n\t\t\t\t\t<dd className=\"font-medium\">{company?.company.name}</dd>\n\t\t\t\t</dl>\n\t\t\t\t<dl className=\"flex-center-y mb-4\">\n\t\t\t\t\t<dt className=\"mr-2 \">Staffs Count:</dt>\n\t\t\t\t\t<dd className=\"font-medium\">{details?.staffs_count}</dd>\n\t\t\t\t</dl>\n\t\t\t\t<dl className=\"flex-center-y mb-4\">\n\t\t\t\t\t<dt className=\"mr-2 \">Payment Type:</dt>\n\t\t\t\t\t<dd className=\"font-medium\">\n\t\t\t\t\t\t{details?.payment_type === 'PAYPAL' ? 'Paypal' : 'Stripe'}\n\t\t\t\t\t</dd>\n\t\t\t\t</dl>\n\t\t\t\t<dl className=\"flex-center-y mb-4\">\n\t\t\t\t\t<dt className=\"mr-2 \">Amount:</dt>\n\t\t\t\t\t<dd className=\"font-medium\">${details?.amount}</dd>\n\t\t\t\t</dl>\n\t\t\t\t<dl className=\"flex-center-y mb-4\">\n\t\t\t\t\t<dt className=\"mr-2 \">Payment frequency:</dt>\n\t\t\t\t\t<dd className=\"font-medium\">{details?.is_monthly ? 'Monthly' : 'Yearly'}</dd>\n\t\t\t\t</dl>\n\t\t\t</div>\n\n\t\t\t<p className=\"mb-6 text-sm italic text-kgrey\">{`You will be forwarded to ${\n\t\t\t\tdetails?.payment_type === 'PAYPAL' ? \"Paypal's\" : \"Stripe's\"\n\t\t\t} website to process payment`}</p>\n\n\t\t\t<div className=\"flex-center-end\">\n\t\t\t\t<NewButton className=\"mr-4\" onClick={onSuccess}>\n\t\t\t\t\tCancel\n\t\t\t\t</NewButton>\n\t\t\t\t<NewButton color=\"primary\" onClick={paymentHandler}>\n\t\t\t\t\tProceed Payment\n\t\t\t\t</NewButton>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport config from '../../config';\nimport { CheckoutHeader, CheckoutMethods, CheckoutPlans } from './components';\nimport { NewButton, WhiteModal } from 'shared/components/Elements';\nimport { CheckoutSidebar } from './components/CheckoutSidebar';\nimport { StandardPageLayout } from 'shared/layouts';\nimport { CardsCollection } from './components/CardsCollection';\nimport { useCheckout } from './hooks';\nimport { Loader } from '../../shared/components';\nimport { CheckoutPaymentPopup } from './components/CheckoutPaymentPopup';\nimport { PaymentDetailsType } from './types';\nconst imgPath = `${config.PUBLIC_ASSETS}img`;\n\nexport function Checkout() {\n\tconst {\n\t\tplan,\n\t\tmethod,\n\t\tplanClickHandler,\n\t\tmethodClickHandler,\n\t\tprice,\n\t\tmemberCount,\n\t\tdecrementMemberCount,\n\t\tincrementMemberCount,\n\t\tsetCounterHandler,\n\t\tstaffCountLoading,\n\t\tplansLoading,\n\t\tsetPaymentDetailHandler,\n\t\topenPaymentPopup,\n\t\tyearlyDiscount,\n\t\tinvoiceId,\n\t\tgoBack,\n\t\tisExtraInvoice,\n\t\tdaysLeft,\n\t\tallPaymentsCount,\n\t\tpaidStaffLoading,\n\t\thasUserFreePlan\n\t} = useCheckout();\n\n\tconst showPaymentPopup = () => setPaymentDetailHandler();\n\tconst closePaymentPopup = () => setPaymentDetailHandler(true);\n\n\treturn (\n\t\t<StandardPageLayout>\n\t\t\t<div className=\"checkout mx-auto font-poppins lg:w-[707px] lg:py-14\">\n\t\t\t\t<div className=\"checkout__business-logo mx-auto mb-6 table h-[67px] w-[166px]\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={`${imgPath}/img-kennekt-logo-checkout.svg`}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclassName=\"h-full w-full object-cover\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"checkout__main relative rounded-lg border-t-4 border-primary-dark bg-white dark:bg-kdark-dark333\">\n\t\t\t\t\t{(staffCountLoading || plansLoading || paidStaffLoading) && <Loader tiled withOverlay />}\n\t\t\t\t\t<div className=\"checkout__body flex\">\n\t\t\t\t\t\t<div className=\"checkout__left p:2 w-[428px] flex-shrink-0 lg:p-7\">\n\t\t\t\t\t\t\t<CheckoutHeader invoiceId={invoiceId} />\n\t\t\t\t\t\t\t<div className=\"checkout__content py-5\">\n\t\t\t\t\t\t\t\t<h3 className=\"mb-3 text-xs text-kgrey-menuText\">Billing Plan</h3>\n\t\t\t\t\t\t\t\t<CheckoutPlans\n\t\t\t\t\t\t\t\t\tplan={plan}\n\t\t\t\t\t\t\t\t\tplanClickHandler={planClickHandler}\n\t\t\t\t\t\t\t\t\tprice={price}\n\t\t\t\t\t\t\t\t\tyearlyDiscount={yearlyDiscount || 0}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CheckoutMethods method={method} methodClickHandler={methodClickHandler} />\n\t\t\t\t\t\t\t\t{Boolean(method) && (\n\t\t\t\t\t\t\t\t\t<div className=\"checkout__method-details pt-5\">\n\t\t\t\t\t\t\t\t\t\t{method === 'card' ? (\n\t\t\t\t\t\t\t\t\t\t\t<CardsCollection />\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-3 text-10px text-kgrey-menuText\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tYou will be taken to PayPal to authorize a billing agreement.\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-10px text-kgrey-menuText\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tPlease make sure pop-ups aren't blocked.\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"checkout__right w-full border-l border-kgrey-light-grey-6 p-4 px-3 py-7\">\n\t\t\t\t\t\t\t{!!price && (\n\t\t\t\t\t\t\t\t<CheckoutSidebar\n\t\t\t\t\t\t\t\t\thasUserFreePlan={hasUserFreePlan}\n\t\t\t\t\t\t\t\t\tprice={price[plan]}\n\t\t\t\t\t\t\t\t\tmemberCount={memberCount}\n\t\t\t\t\t\t\t\t\tdecrementMemberCount={decrementMemberCount}\n\t\t\t\t\t\t\t\t\tincrementMemberCount={incrementMemberCount}\n\t\t\t\t\t\t\t\t\tplan={plan}\n\t\t\t\t\t\t\t\t\tsetCounterHandler={setCounterHandler}\n\t\t\t\t\t\t\t\t\tisExtraInvoice={isExtraInvoice}\n\t\t\t\t\t\t\t\t\tdaysLeft={daysLeft}\n\t\t\t\t\t\t\t\t\tallPaymentsCount={allPaymentsCount}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"checkout__footer flex-center-end border-t border-kgrey-light-grey-6 py-5 px-5\">\n\t\t\t\t\t\t<NewButton className=\"mr-5\" shape=\"square\" type=\"button\" onClick={goBack}>\n\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t</NewButton>\n\t\t\t\t\t\t<NewButton color=\"primary\" shape=\"square\" type=\"submit\" onClick={showPaymentPopup}>\n\t\t\t\t\t\t\tContinue\n\t\t\t\t\t\t</NewButton>\n\t\t\t\t\t\t<WhiteModal handleModalOpen={closePaymentPopup} open={!!openPaymentPopup}>\n\t\t\t\t\t\t\t<CheckoutPaymentPopup\n\t\t\t\t\t\t\t\tdetails={openPaymentPopup as PaymentDetailsType}\n\t\t\t\t\t\t\t\tonSuccess={closePaymentPopup}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StandardPageLayout>\n\t);\n}\n","import React, { useEffect } from 'react';\nimport { useRouter, useUnreadCaseTab } from 'shared/hooks';\n\nexport function usePayments() {\n\tconst [primeTab, setPrimeTab] = React.useState(0);\n\tconst [pageName, setPageName] = React.useState('Billing');\n\n\tconst { location, match } = useRouter();\n\tconst { url, path } = match;\n\tconst { unreadCasesQuantity, isHidden } = useUnreadCaseTab('Billing');\n\n\tconst handleChangePrime = (\n\t\tevent: React.ChangeEvent<Record<string, unknown>>,\n\t\tnewValue: number\n\t) => {\n\t\tsetPrimeTab(newValue);\n\t};\n\n\t//Just to setup tab active tab indication\n\tuseEffect(() => {\n\t\tconst locationSplitterArray = location.pathname.split('/').filter(Boolean).filter(String);\n\t\tconst nestedPageType = locationSplitterArray[locationSplitterArray.length - 1] || '';\n\n\t\t(() => {\n\t\t\tswitch (nestedPageType) {\n\t\t\t\tcase 'billing': {\n\t\t\t\t\tsetPrimeTab(0);\n\t\t\t\t\tsetPageName('Billing');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'invoice': {\n\t\t\t\t\tsetPrimeTab(1);\n\t\t\t\t\tsetPageName('Invoice');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t})();\n\t}, [location]);\n\n\treturn {\n\t\tprimeTab,\n\t\tpageName,\n\t\turl,\n\t\tpath,\n\t\tunreadCasesQuantity,\n\t\tsetPrimeTab,\n\t\tisHidden,\n\t\thandleChangePrime\n\t};\n}\n","import { useAppState } from '../../../shared/state';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\nimport { useAxios, useNotistack, useRouter } from '../../../shared/hooks';\nimport { useCallback, useEffect, useState } from 'react';\nimport { CompSubscriptionType } from '../../../modules/user/reducers';\n\nexport function useSubscription() {\n\tconst { companyId } = useAppState();\n\tconst { companies } = useAuth();\n\tconst { history } = useRouter();\n\tconst [cancelLoading, setCancelLoading] = useState(false);\n\tconst [cancelSubscription, setCancelSubscription] = useState(false);\n\tconst { showNotification } = useNotistack();\n\tconst [hasUserAlreadyPaidInvoice, setUserAlreadyPaidInvoice] = useState(false);\n\n\tconst [subscription, setSubscription] = useState<CompSubscriptionType | null>(null);\n\n\tconst { fetchData: cancelSubscriptionRequest } = useAxios({\n\t\turl: `/${companyId}/payment/${companyId}/cancel-subscription/`,\n\t\tmethod: 'put',\n\t\tcb: {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tsuccess: () => {\n\t\t\t\tshowNotification({ message: 'Your subscription has been cancelled', variant: 'success' });\n\t\t\t\tsetCancelLoading(false);\n\t\t\t\tsetCancelSubscription(false);\n\t\t\t},\n\t\t\terror: (error, additionalArgs) => {\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: error?.response?.data?.message || 'Something went wrong',\n\t\t\t\t\tvariant: 'error'\n\t\t\t\t});\n\t\t\t\tsetCancelLoading(false);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst { fetchData: firstPayRequest } = useAxios({\n\t\turl: `/payment/${companyId}/invoices/?page_size=10`,\n\t\tcb: {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tsuccess: (data) => {\n\t\t\t\tif (data?.results?.length) {\n\t\t\t\t\tsetUserAlreadyPaidInvoice(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: (error, additionalArgs) => {}\n\t\t}\n\t});\n\n\t//set subscription object\n\tuseEffect(() => {\n\t\tfirstPayRequest();\n\t\tif (companyId && companies.length) {\n\t\t\tconst currentCompany = companies.find((com) => com.company.id === companyId);\n\t\t\tconst currentSubscription = currentCompany?.company.comp_subscription as CompSubscriptionType;\n\n\t\t\tif (currentSubscription) {\n\t\t\t\tsetSubscription(currentSubscription);\n\t\t\t}\n\t\t}\n\t}, [companies, companyId]);\n\n\tconst handleCancelRequest = useCallback(async () => {\n\t\tsetCancelLoading(true);\n\t\tawait cancelSubscriptionRequest();\n\t}, []);\n\n\tconst navigateToCheckout = useCallback(() => history.push('/checkout'), []);\n\n\treturn {\n\t\tnavigateToCheckout,\n\t\tsubscription,\n\t\thandleCancelRequest,\n\t\tsetCancelSubscription,\n\t\tcancelSubscription,\n\t\tcancelLoading,\n\t\thasUserAlreadyPaidInvoice\n\t};\n}\n","import { ParsedPlanType, PlanType } from '../types';\n\nexport function parsePlans(planItems: PlanType[]) {\n\tconst isCustomPlan = (amount: number) => amount > 50;\n\n\treturn planItems\n\t\t.sort((a, b) => a.staffs_count_from - b.staffs_count_from)\n\t\t.reduce((acc: ParsedPlanType[], curr: PlanType) => {\n\t\t\treturn [\n\t\t\t\t...acc,\n\t\t\t\t{\n\t\t\t\t\tid: curr.id,\n\t\t\t\t\tname: curr.title,\n\t\t\t\t\tmembers: `${curr.staffs_count_from}${isCustomPlan(curr.staffs_count_to) ? '' : '-'}${\n\t\t\t\t\t\tisCustomPlan(curr.staffs_count_to) ? '+' : curr.staffs_count_to\n\t\t\t\t\t}`,\n\t\t\t\t\tmemberFrom: curr.staffs_count_from,\n\t\t\t\t\tmemberTo: curr.staffs_count_to,\n\t\t\t\t\tprice: {\n\t\t\t\t\t\tmonth: parseFloat(curr.monthly_price),\n\t\t\t\t\t\tyear: parseFloat(curr.yearly_price)\n\t\t\t\t\t},\n\t\t\t\t\tyearlyDiscount: parseInt(curr.yearly_discount),\n\t\t\t\t\ttype: curr.type\n\t\t\t\t}\n\t\t\t];\n\t\t}, []);\n}\n"],"names":["CheckoutCard","children","isActive","isFixed","className","rest","clsx","CheckoutHeader","invoiceId","company","useAuth","size","letter","alt","src","icon","thumbnail_150","url","name","planJson","id","title","price","type","paymentMethodJson","text","CheckoutPlans","planClickHandler","plan","yearlyDiscount","map","planItem","isYearPlan","onClick","relative","CheckoutDiscount","CheckoutMethods","methodClickHandler","method","methodItem","calculatePrice","isExtraInvoice","daysInMonth","memberCount","daysLeft","allPaymentsCount","computedPrice","DAYS_IN_MONTH","computedDaysOrMonths","isYear","isFreeTrial","roundNumber","MAX_USERS_PLAN","useCheckout","useAppState","companyId","isAppAvailable","companies","useState","setPlan","setMethod","setMemberCount","setAllPaymentsCount","staffCount","setStaffCount","parsedPlansList","setParsedPlansList","selectedPlan","setSelectedPlan","openPaymentPopup","setOpenPaymentPopup","month","year","Math","floor","setPrice","subscription","setSubscription","setDaysLeft","useRouter","params","history","subscription_type","useEffect","remainingDayString","getSubscriptionRemainedTIme","end_date","length","currentCompany","find","com","currentSubscription","comp_subscription","parseInt","invoice","isMonthlyParam","isMonthly","staffsCountParam","staffsCount","setPaymentDetailHandler","useCallback","isClosing","company_id","staffs_count","payment_type","amount","subscription_plan_id","is_monthly","order_id","is_extra","useAxios","fetchStaffCount","fetchData","staffCountResponse","response","staffCountLoading","loading","fetchPlans","plansResponse","plansLoading","fetchPaidStaffs","paidStaffResponse","paidStaffLoading","results","parsedPlans","parsePlans","getPlanByMemberCount","paidStaffCount","paid_staffs_count","hasUserFreePlan","Boolean","plans","userPaidStaffCount","staffs_count_from","staffs_count_to","parseFloat","monthly_price","yearly_price","getFreePlan","planText","methodText","decrementMemberCount","prev","incrementMemberCount","setCounterHandler","value","target","staffCountInputValue","goBack","CheckoutSidebar","isWithinFreePlan","showUserBeingChargedAlertText","useSubscription","hasUserAlreadyPaidInvoice","min","max","onChange","Slider","disabled","imgPath","config","CardsCollection","SetSelectedUserCompany","Actions","CheckoutPaymentPopup","details","onSuccess","setLoading","showNotification","useNotistack","dispatch","useDispatch","useHistory","alert","processPaymentRequest","values","cb","success","data","args","location","href","payment_link","changedCompanies","comp","userActions","selectedBusiness","storage","JSON","stringify","push","message","variant","error","errorText","console","log","paymentHandler","tiled","withOverlay","color","Checkout","closePaymentPopup","shape","handleModalOpen","open","usePayments","React","primeTab","setPrimeTab","pageName","setPageName","match","path","useUnreadCaseTab","unreadCasesQuantity","isHidden","locationSplitterArray","pathname","split","filter","String","nestedPageType","handleChangePrime","event","newValue","cancelLoading","setCancelLoading","cancelSubscription","setCancelSubscription","setUserAlreadyPaidInvoice","cancelSubscriptionRequest","additionalArgs","firstPayRequest","handleCancelRequest","navigateToCheckout","planItems","isCustomPlan","sort","a","b","reduce","acc","curr","members","memberFrom","memberTo","yearly_discount"],"sourceRoot":""}