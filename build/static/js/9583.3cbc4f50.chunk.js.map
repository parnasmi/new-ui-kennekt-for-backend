{"version":3,"file":"static/js/9583.3cbc4f50.chunk.js","mappings":"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","sources":["pages/ClientsManagement/hooks/useLinkedClientRoles.ts","pages/ClientsManagement/components/LinkenClientRoles/EditLinkedClientRole.tsx","pages/ClientsManagement/NestedPages/LinkedClientsRoles/LinkedClientsRoles.tsx","pages/ClientsManagement/NestedPages/LinkedClientsRoles/index.ts"],"sourcesContent":["import { useAppState } from 'shared/state';\nimport { useDispatch } from 'react-redux';\nimport { useEntityActionPopup, useNotistack } from 'shared/hooks';\nimport { LinkedClientRoleEntity } from 'shared/typings/client.types';\nimport { formRequest } from 'modules/entity/actions';\n\nexport function useLinkedClientRoles() {\n\tconst { companyId } = useAppState();\n\tconst dispatch = useDispatch();\n\tconst { showNotification } = useNotistack();\n\tconst {\n\t\tvisible: deleteVisible,\n\t\tshowVisible: showDeleteVisible,\n\t\tloading: deleteLoading,\n\t\ttoggleLoading: toggleDeleteLoading,\n\t\tclosePopup: closeDeletePopup\n\t} = useEntityActionPopup<LinkedClientRoleEntity>();\n\n\tconst {\n\t\tvisible: editVisible,\n\t\tshowVisible: showEditVisible,\n\t\tclosePopup: closeEditPopup\n\t} = useEntityActionPopup<LinkedClientRoleEntity>();\n\n\tconst handleLinkedClientDelete = (linkedRole: LinkedClientRoleEntity) => {\n\t\t//show loader\n\t\ttoggleDeleteLoading();\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'linkedClientsRole',\n\t\t\t\tname: `AllLinkedClientsRole`,\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: `/${companyId}/my/company/client/roles/${linkedRole.id}/`,\n\t\t\t\tdeleteData: true,\n\t\t\t\tid: linkedRole.id,\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tshowNotification({ message: 'Successfully deleted', variant: 'success' });\n\t\t\t\t\t},\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {\n\t\t\t\t\t\ttoggleDeleteLoading();\n\t\t\t\t\t\tcloseDeletePopup();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id',\n\t\t\t\tvalues: {}\n\t\t\t})\n\t\t);\n\t};\n\n\tconst deleteLinkedClientHandler = () => () => handleLinkedClientDelete(deleteVisible!);\n\n\treturn {\n\t\tdeleteLinkedClientHandler,\n\t\tdeleteVisible,\n\t\tshowDeleteVisible,\n\t\tdeleteLoading,\n\t\tcloseDeletePopup,\n\t\tshowEditVisible,\n\t\tcloseEditPopup,\n\t\teditVisible\n\t};\n}\n","import React from 'react';\nimport { useAppState } from 'shared/state';\nimport { useNotistack } from 'shared/hooks';\nimport EntityForm from 'modules/entity/forms';\nimport { FormHeader, Loader } from 'shared/components';\nimport LinkedRoleFormElements from './LinkedRoleFormElements';\nimport { LinkedClientRoleEntity } from 'shared/typings/client.types';\n\ntype Props = {\n\tonSuccess: () => void;\n\tentity: LinkedClientRoleEntity;\n};\n\nexport function EditLinkedClientRole({ onSuccess, entity }: Props) {\n\tconst { companyId } = useAppState();\n\tconst { showNotification } = useNotistack();\n\n\tif (!entity) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"max-w-[446px]\">\n\t\t\t<>\n\t\t\t\t<EntityForm.Main\n\t\t\t\t\tentity=\"linkedClientsRole\"\n\t\t\t\t\tname=\"AllLinkedClientsRole\"\n\t\t\t\t\turl={`/${companyId}/my/company/client/roles/${entity.id}/`}\n\t\t\t\t\tmethod=\"put\"\n\t\t\t\t\tprimaryKey=\"id\"\n\t\t\t\t\tsendAsFormData={false}\n\t\t\t\t\tnormalizeData={(data: any) => data}\n\t\t\t\t\tupdateData\n\t\t\t\t\tfields={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tvalue: entity.name\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tvalue: entity.description\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\t\t\tshowNotification({ message: 'Successfully updated..' });\n\t\t\t\t\t\tonSuccess();\n\t\t\t\t\t\tresetForm();\n\t\t\t\t\t}}\n\t\t\t\t\tonError={(error, resetForm): any => {\n\t\t\t\t\t\tconst errorText = error?.response?.data?.message || 'Something went wrong';\n\t\t\t\t\t\tshowNotification({ message: errorText, variant: 'error' });\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ isSubmitting, values, resetForm }) => {\n\t\t\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\t\t\tconsole.log('edit client role  values', values);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<FormHeader resetForm={resetForm} title=\"Edit Client Group\" isEditing />\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className={'flex items-center'}>\n\t\t\t\t\t\t\t\t\t\t<LinkedRoleFormElements\n\t\t\t\t\t\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\tonSuccess={onSuccess}\n\t\t\t\t\t\t\t\t\t\t\tisEditing\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{isSubmitting && <Loader tiled withOverlay />}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityForm.Main>\n\t\t\t</>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport {\n\tActionsButtons,\n\tConfirmModal,\n\tErrorBoundary,\n\tLoader,\n\tStyledTable,\n\tStyledTableCell,\n\tStyledTableHeadCell,\n\tStyledTableRow\n} from 'shared/components';\nimport { useAppState } from 'shared/state';\nimport EntityContainer from 'modules/entity/containers';\nimport {\n\tPagination,\n\tTableBody,\n\tTableContainer,\n\tTableHead,\n\tWhiteModal\n} from 'shared/components/Elements';\nimport { usePagination } from 'shared/hooks';\nimport { useClientsManagementContext } from '../../context/ClientsManagementContext';\nimport { LinkedClientRoleEntity } from 'shared/typings/client.types';\nimport { useDebounce } from 'use-debounce';\nimport { useLinkedClientRoles } from '../../hooks/useLinkedClientRoles';\nimport { EditLinkedClientRole } from '../../components/LinkenClientRoles/EditLinkedClientRole';\n\nfunction LinkedClientsRolesInner() {\n\tconst { companyId, isPermitted } = useAppState();\n\tconst { page, handlePage } = usePagination();\n\tconst { searchQuery: query } = useClientsManagementContext();\n\tconst [searchQuery] = useDebounce<string>(query, 500);\n\n\tconst {\n\t\tdeleteLinkedClientHandler,\n\t\tdeleteVisible,\n\t\tshowDeleteVisible,\n\t\tdeleteLoading,\n\t\tcloseDeletePopup,\n\t\tshowEditVisible,\n\t\tcloseEditPopup,\n\t\teditVisible\n\t} = useLinkedClientRoles();\n\n\treturn (\n\t\t<div>\n\t\t\t{companyId ? (\n\t\t\t\t<EntityContainer.All\n\t\t\t\t\tentity=\"linkedClientsRole\"\n\t\t\t\t\tname=\"AllLinkedClientsRole\"\n\t\t\t\t\turl={`/${companyId}/my/company/client/roles/`}\n\t\t\t\t\tparams={{\n\t\t\t\t\t\tlimit: 10,\n\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\tsearch: searchQuery\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpage\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\t\t\tconst linkedClientRoles = items as LinkedClientRoleEntity[];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<TableContainer classes={{ root: 'relative ' }}>\n\t\t\t\t\t\t\t\t\t<StyledTable\n\t\t\t\t\t\t\t\t\t\taria-label=\"simple table\"\n\t\t\t\t\t\t\t\t\t\tclasses={{ root: 'table-fixed dark-mode-styled-table' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t\t\t\t<StyledTableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '60%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tRole name\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '20%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '20%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-end \">Actions</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t\t\t{linkedClientRoles.map((item) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst { description, name, id } = item;\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableRow key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>{name}</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>{description}</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-end \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ActionsButtons.DeleteButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={!isPermitted}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickHandler={() => showDeleteVisible(item)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ActionsButtons.EditButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={!isPermitted}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickHandler={() => showEditVisible(item)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t\t\t</StyledTable>\n\t\t\t\t\t\t\t\t\t{!isFetched && <Loader tiled withOverlay />}\n\t\t\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\t\tfeatureHandler={deleteLinkedClientHandler()}\n\t\t\t\t\t\t\t\t\tisOpen={Boolean(deleteVisible)}\n\t\t\t\t\t\t\t\t\ttoggleHandler={closeDeletePopup}\n\t\t\t\t\t\t\t\t\ttitle={`Are you sure to delete  ${deleteVisible?.name}?`}\n\t\t\t\t\t\t\t\t\thasLoader\n\t\t\t\t\t\t\t\t\tisLoading={deleteLoading}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<WhiteModal handleModalOpen={closeEditPopup} open={Boolean(editVisible)}>\n\t\t\t\t\t\t\t\t\t<EditLinkedClientRole onSuccess={closeEditPopup} entity={editVisible!} />\n\t\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t\t<div className=\"news__pagination my-4\">\n\t\t\t\t\t\t\t\t\t{items.length ? (\n\t\t\t\t\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\t\t\t\t\tcount={meta?.last_page}\n\t\t\t\t\t\t\t\t\t\t\tpage={page ? +page : 1}\n\t\t\t\t\t\t\t\t\t\t\tdefaultPage={6}\n\t\t\t\t\t\t\t\t\t\t\tsiblingCount={1}\n\t\t\t\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handlePage}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityContainer.All>\n\t\t\t) : (\n\t\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t\t<Loader />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default function LinkedClientsRoles() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<LinkedClientsRolesInner />\n\t\t</ErrorBoundary>\n\t);\n}\n","import LinkedClientsRoles from './LinkedClientsRoles';\n\nexport default LinkedClientsRoles;\n"],"names":["useLinkedClientRoles","companyId","useAppState","dispatch","useDispatch","showNotification","useNotistack","useEntityActionPopup","deleteVisible","visible","showDeleteVisible","showVisible","deleteLoading","loading","toggleDeleteLoading","toggleLoading","closeDeletePopup","closePopup","editVisible","showEditVisible","closeEditPopup","deleteLinkedClientHandler","linkedRole","formRequest","entity","name","method","url","id","deleteData","cb","success","message","variant","error","err","finally","params","primaryKey","values","EditLinkedClientRole","onSuccess","className","sendAsFormData","normalizeData","data","updateData","fields","onSubmitKey","required","value","description","response","resetForm","onError","errorText","isSubmitting","title","isEditing","LinkedRoleFormElements","tiled","withOverlay","LinkedClientsRolesInner","isPermitted","usePagination","page","handlePage","query","useClientsManagementContext","searchQuery","useDebounce","limit","extra","search","items","isFetched","meta","linkedClientRoles","classes","root","style","width","map","item","isDisabled","clickHandler","featureHandler","isOpen","Boolean","toggleHandler","hasLoader","isLoading","handleModalOpen","open","length","count","last_page","defaultPage","siblingCount","color","onChange"],"sourceRoot":""}