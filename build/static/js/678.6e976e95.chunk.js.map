{"version":3,"file":"static/js/678.6e976e95.chunk.js","mappings":"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","sources":["pages/Cases/components/CaseItem.tsx","pages/Payments/hooks/usePayments.ts","pages/Payments/hooks/useSubscription.ts","pages/StaffManagement/context/StaffManagementContext.tsx","pages/StaffManagement/components/StaffManagementSearchQuery.tsx","pages/StaffManagement/components/StaffReAssignItemWrapper.tsx","pages/StaffManagement/components/StaffReAssignItem.tsx","pages/StaffManagement/components/StaffReAssignStatuses.tsx","pages/StaffManagement/components/StaffReAssignCases.tsx","pages/StaffManagement/components/StaffReAssignUsers.tsx","pages/StaffManagement/components/StaffReAssignment.tsx","pages/StaffManagement/hooks/useStaffReAssignment.tsx","pages/StaffManagement/components/RequireReAssignWarning.tsx","pages/StaffManagement/components/StaffManagementTable.tsx","pages/StaffManagement/components/CreateStaffForm.tsx","pages/StaffManagement/StaffManagement.tsx","pages/StaffManagement/index.tsx","shared/components/DataDisplay/StatusTag.tsx","shared/components/Elements/Fields/InputText.tsx","shared/services/utils/getBusinessIcon.tsx"],"sourcesContent":["import React, { useMemo, useRef } from 'react';\nimport { useAppState } from 'shared/state';\nimport { CaseItemMarkup } from './CaseItemMarkup';\nimport { Priority } from 'shared/interfaces';\nimport { EntityDraft } from '../../GroupChat/types';\nimport { ErrorBoundary } from 'shared/components';\nimport { ToggleCaseDetailsOpen } from './case-details/CaseDetails.types';\n// import { useQueryParams } from '../../../shared/hooks';\n\ntype CompanyType = {\n\tid: number;\n\tname: string;\n};\n\nexport type CaseType = {\n\tid: number;\n\ttitle: any;\n\tcase_number: string;\n\tbusiness_company: CompanyType;\n\tclient_company: CompanyType;\n\tdepartment: {\n\t\tid: number;\n\t\tname: string;\n\t\ticon: {\n\t\t\tthumbnail: string | null;\n\t\t\tthumbnail_150: string | null;\n\t\t};\n\t};\n\ttext?: string;\n\tsub_department: {\n\t\tid: number;\n\t\tname: string;\n\t\ticon: {\n\t\t\tthumbnail: string | null;\n\t\t\tthumbnail_150: string | null;\n\t\t};\n\t};\n\tstatus: {\n\t\tid: number;\n\t\ttitle: string;\n\t};\n\tlast_message_type: string | null;\n\tlast_message_text: string;\n\tlast_message_author: {\n\t\tfirst_name: string;\n\t\tlast_name: string;\n\t};\n\tlast_message_time: any;\n\tpriority: Priority;\n\tpin_time: null | string;\n\tdraft_message: EntityDraft;\n\tassignee_ids: null | number[];\n\thas_linked_case: boolean;\n\trelated_to_id: boolean;\n\trecurring_id: number;\n\tlast_read_message: number | null;\n};\n\ntype Props = {\n\tcaseData: CaseType;\n\tisFetched: boolean;\n\tisDragging?: boolean;\n\ttoggleCaseDetailsOpen: ToggleCaseDetailsOpen;\n};\n\nconst CaseItemInner = (props: Props) => {\n\tconst { caseData, isDragging, toggleCaseDetailsOpen /*, isFetched */ } = props;\n\tconst caseRef = useRef<HTMLDivElement>(null);\n\n\tconst { unreadMessagesCount /*, searchQuery, caseType*/ } = useAppState();\n\t// const { query } = useQueryParams<{ case: string; status: string; searchedMessageId?: string }>();\n\n\tconst department = caseData.department,\n\t\tsub_department = caseData.sub_department,\n\t\tcaseTitle = caseData.title,\n\t\tlast_message_type = caseData.last_message_type,\n\t\tlast_message_text = caseData.last_message_text,\n\t\tlast_message_author = caseData.last_message_author,\n\t\tcase_number = caseData.case_number,\n\t\tlast_message_time = caseData.last_message_time,\n\t\tcaseId = caseData.id,\n\t\tstatusId = caseData?.status?.id,\n\t\tpriority = caseData.priority,\n\t\tdraftMessage = caseData.draft_message,\n\t\thasLinkedCase = caseData.has_linked_case,\n\t\trelatedTo = caseData.related_to_id,\n\t\trecurringId = caseData.recurring_id,\n\t\tlastReadMessage = caseData.last_read_message,\n\t\tassigneeIds = caseData.assignee_ids;\n\n\tconst hasUnread = useMemo(() => unreadMessagesCount?.[caseId], [caseId, unreadMessagesCount]);\n\n\t// const isActive = Number(query.case) === caseId;\n\n\t// useEffect(() => {\n\t// \tif (isActive && isFetched) {\n\t// \t\tcaseRef?.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n\t// \t}\n\t// }, [query, statusId]);\n\n\treturn (\n\t\t<div ref={caseRef} className={`case-${caseId} h-full`}>\n\t\t\t<CaseItemMarkup\n\t\t\t\tcase_number={case_number}\n\t\t\t\tcaseTitle={caseTitle}\n\t\t\t\tdepartment={department}\n\t\t\t\tsub_department={sub_department}\n\t\t\t\tlast_message_author={last_message_author}\n\t\t\t\tlast_message_time={last_message_time}\n\t\t\t\tlast_message_type={last_message_type}\n\t\t\t\tlast_message_text={last_message_text}\n\t\t\t\thasUnread={hasUnread}\n\t\t\t\tcaseId={caseId}\n\t\t\t\tstatusId={statusId}\n\t\t\t\tpin_time={caseData.pin_time}\n\t\t\t\tpriority={priority}\n\t\t\t\tdraftMessage={draftMessage}\n\t\t\t\tassigneeIds={assigneeIds}\n\t\t\t\tisDragging={isDragging}\n\t\t\t\ttoggleCaseDetailsOpen={toggleCaseDetailsOpen}\n\t\t\t\thasLinkedCase={hasLinkedCase}\n\t\t\t\trelatedTo={relatedTo}\n\t\t\t\trecurringId={recurringId}\n\t\t\t\tlastReadMessage={lastReadMessage}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport function CaseItem(props: Props) {\n\treturn (\n\t\t<ErrorBoundary isCompact>\n\t\t\t<CaseItemInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React, { useEffect } from 'react';\nimport { useRouter, useUnreadCaseTab } from 'shared/hooks';\n\nexport function usePayments() {\n\tconst [primeTab, setPrimeTab] = React.useState(0);\n\tconst [pageName, setPageName] = React.useState('Billing');\n\n\tconst { location, match } = useRouter();\n\tconst { url, path } = match;\n\tconst { unreadCasesQuantity, isHidden } = useUnreadCaseTab('Billing');\n\n\tconst handleChangePrime = (\n\t\tevent: React.ChangeEvent<Record<string, unknown>>,\n\t\tnewValue: number\n\t) => {\n\t\tsetPrimeTab(newValue);\n\t};\n\n\t//Just to setup tab active tab indication\n\tuseEffect(() => {\n\t\tconst locationSplitterArray = location.pathname.split('/').filter(Boolean).filter(String);\n\t\tconst nestedPageType = locationSplitterArray[locationSplitterArray.length - 1] || '';\n\n\t\t(() => {\n\t\t\tswitch (nestedPageType) {\n\t\t\t\tcase 'billing': {\n\t\t\t\t\tsetPrimeTab(0);\n\t\t\t\t\tsetPageName('Billing');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'invoice': {\n\t\t\t\t\tsetPrimeTab(1);\n\t\t\t\t\tsetPageName('Invoice');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t})();\n\t}, [location]);\n\n\treturn {\n\t\tprimeTab,\n\t\tpageName,\n\t\turl,\n\t\tpath,\n\t\tunreadCasesQuantity,\n\t\tsetPrimeTab,\n\t\tisHidden,\n\t\thandleChangePrime\n\t};\n}\n","import { useAppState } from '../../../shared/state';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\nimport { useAxios, useNotistack, useRouter } from '../../../shared/hooks';\nimport { useCallback, useEffect, useState } from 'react';\nimport { CompSubscriptionType } from '../../../modules/user/reducers';\n\nexport function useSubscription() {\n\tconst { companyId } = useAppState();\n\tconst { companies } = useAuth();\n\tconst { history } = useRouter();\n\tconst [cancelLoading, setCancelLoading] = useState(false);\n\tconst [cancelSubscription, setCancelSubscription] = useState(false);\n\tconst { showNotification } = useNotistack();\n\tconst [hasUserAlreadyPaidInvoice, setUserAlreadyPaidInvoice] = useState(false);\n\n\tconst [subscription, setSubscription] = useState<CompSubscriptionType | null>(null);\n\n\tconst { fetchData: cancelSubscriptionRequest } = useAxios({\n\t\turl: `/${companyId}/payment/${companyId}/cancel-subscription/`,\n\t\tmethod: 'put',\n\t\tcb: {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tsuccess: () => {\n\t\t\t\tshowNotification({ message: 'Your subscription has been cancelled', variant: 'success' });\n\t\t\t\tsetCancelLoading(false);\n\t\t\t\tsetCancelSubscription(false);\n\t\t\t},\n\t\t\terror: (error, additionalArgs) => {\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: error?.response?.data?.message || 'Something went wrong',\n\t\t\t\t\tvariant: 'error'\n\t\t\t\t});\n\t\t\t\tsetCancelLoading(false);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst { fetchData: firstPayRequest } = useAxios({\n\t\turl: `/payment/${companyId}/invoices/?page_size=10`,\n\t\tcb: {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tsuccess: (data) => {\n\t\t\t\tif (data?.results?.length) {\n\t\t\t\t\tsetUserAlreadyPaidInvoice(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: (error, additionalArgs) => {}\n\t\t}\n\t});\n\n\t//set subscription object\n\tuseEffect(() => {\n\t\tfirstPayRequest();\n\t\tif (companyId && companies.length) {\n\t\t\tconst currentCompany = companies.find((com) => com.company.id === companyId);\n\t\t\tconst currentSubscription = currentCompany?.company.comp_subscription as CompSubscriptionType;\n\n\t\t\tif (currentSubscription) {\n\t\t\t\tsetSubscription(currentSubscription);\n\t\t\t}\n\t\t}\n\t}, [companies, companyId]);\n\n\tconst handleCancelRequest = useCallback(async () => {\n\t\tsetCancelLoading(true);\n\t\tawait cancelSubscriptionRequest();\n\t}, []);\n\n\tconst navigateToCheckout = useCallback(() => history.push('/checkout'), []);\n\n\treturn {\n\t\tnavigateToCheckout,\n\t\tsubscription,\n\t\thandleCancelRequest,\n\t\tsetCancelSubscription,\n\t\tcancelSubscription,\n\t\tcancelLoading,\n\t\thasUserAlreadyPaidInvoice\n\t};\n}\n","import React, { createContext, useReducer, useContext, useCallback } from 'react';\n\ntype ContextType = {\n\tsearchQuery: string;\n\tsetSearchQuery: (query: string) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const StaffManagementContext = createContext<ContextType>(null!);\ntype SetSearchQuery = {\n\ttype: 'SET_SEARCH_QUERY';\n\tpayload: string;\n};\n\ntype StateType = {\n\tsearchQuery: string;\n};\n\ntype Actions = SetSearchQuery;\n\nconst reducer = (state: StateType, action: Actions): StateType => {\n\tswitch (action.type) {\n\t\tcase 'SET_SEARCH_QUERY': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchQuery: action.payload\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport function StaffManagementContextProvider({\n\tchildren\n}: React.PropsWithChildren<Record<string, unknown>>) {\n\tconst [state, dispatch] = useReducer(reducer, { searchQuery: '' });\n\n\tconst setSearchQuery = useCallback((query: string) => {\n\t\tdispatch({ type: 'SET_SEARCH_QUERY', payload: query });\n\t}, []);\n\n\t// eslint-disable-next-line react/jsx-no-constructed-context-values\n\tconst contextValues = {\n\t\tsearchQuery: state.searchQuery,\n\t\tsetSearchQuery\n\t} as ContextType;\n\n\treturn (\n\t\t<StaffManagementContext.Provider value={contextValues}>\n\t\t\t{children}\n\t\t</StaffManagementContext.Provider>\n\t);\n}\n\nexport const useStaffManagement = () => {\n\tconst staffContext = useContext(StaffManagementContext);\n\n\tif (!staffContext)\n\t\tthrow new Error('useBusinessContext must be used within the BusinessContextProvider');\n\treturn staffContext;\n};\n","import React from 'react';\nimport { CgSearch } from 'react-icons/cg';\nimport { useStaffManagement } from '../context/StaffManagementContext';\n\nexport function StaffManagementSearchQuery() {\n\tconst { searchQuery, setSearchQuery } = useStaffManagement();\n\n\treturn (\n\t\t<div className=\"group-sidebar__search relative\">\n\t\t\t<input\n\t\t\t\ttype=\"search\"\n\t\t\t\tvalue={searchQuery}\n\t\t\t\tclassName={\n\t\t\t\t\t'group-sidebar__search-input w-full border-b outline-none md:w-36 ' +\n\t\t\t\t\t'border-kgrey-border-solid dark:border-white dark:text-white' +\n\t\t\t\t\t' pl-7 transition focus:border-primary dark:focus:border-primary' +\n\t\t\t\t\t' placeholder-[rgba(45, 45, 45, 0.3)] pt-2 pb-2 dark:bg-kdark'\n\t\t\t\t}\n\t\t\t\tplaceholder={'Search for staff'}\n\t\t\t\tonChange={(e) => setSearchQuery(e.target.value)}\n\t\t\t/>\n\t\t\t<div className=\"absolute top-1/2 left-0 -translate-y-1/2\">\n\t\t\t\t<div className=\"text-kgrey\">\n\t\t\t\t\t<CgSearch />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { Checkbox, FormControlLabel } from 'shared/components/Elements';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { ChangeEvent } from 'react';\n\ntype Props = {\n\ttitle: string;\n\textra?: React.ReactNode;\n\tchildren: React.ReactNode;\n\tscrollWrapperHeight?: number | string;\n\tonToggleSelectAll?: (e: ChangeEvent<HTMLInputElement>) => void;\n\tselectAllChecked?: boolean;\n};\nexport function StaffReAssignItemWrapper({\n\ttitle,\n\textra,\n\tchildren,\n\tscrollWrapperHeight,\n\tonToggleSelectAll,\n\tselectAllChecked\n}: Props) {\n\treturn (\n\t\t<div className=\"staff-assign__column w-96 rounded-lg border-1px border-kgrey-light-grey-3 p-1 dark:border-kgrey-chatGrey\">\n\t\t\t<div className=\"column__header flex items-center justify-between rounded-t-2xl bg-kgrey-bg py-2 pl-3 dark:bg-kdark-lighter\">\n\t\t\t\t<h3 className=\"column__title text-lg font-semibold\">{title}</h3>\n\t\t\t\t<div className=\"column__checkbox flex-center-y\">\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t<Checkbox onChange={onToggleSelectAll} checked={selectAllChecked} color=\"primary\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel={`${selectAllChecked ? 'Unselect' : 'Select'} all`}\n\t\t\t\t\t\tname=\"select_all\"\n\t\t\t\t\t\tclasses={{ label: '!text-kgrey' }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{extra}\n\t\t\t<Scrollbars\n\t\t\t\tautoHide\n\t\t\t\tclassName=\"rct-scroll\"\n\t\t\t\tstyle={{ height: scrollWrapperHeight ? scrollWrapperHeight : '20rem' }}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Scrollbars>\n\t\t</div>\n\t);\n}\n","import { AvatarSized, Checkbox, FormControlLabel } from 'shared/components/Elements';\nimport { ChangeEvent } from 'react';\n\ntype Props = {\n\tavatarUrl?: string;\n\ttitle?: string;\n\tonToggleChecked: (e: ChangeEvent<HTMLInputElement>) => void;\n\tchecked: boolean;\n\tchildren?: React.ReactNode;\n};\nexport function StaffReAssignItem({ avatarUrl, title, onToggleChecked, checked, children }: Props) {\n\treturn (\n\t\t<div className=\"staff-assign__item relative my-1.5 rounded-lg bg-kgrey-bg py-2.5 px-2 dark:bg-kdark-lighter\">\n\t\t\t{!children ? (\n\t\t\t\t<div className=\"flex-center-y gap-x-2\">\n\t\t\t\t\t{avatarUrl ? <AvatarSized src={avatarUrl} size={36} /> : null}\n\n\t\t\t\t\t<h3 className=\"w-11/12 break-all dark:text-kgrey-d8d8d8\">{title}</h3>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\tchildren\n\t\t\t)}\n\n\t\t\t<FormControlLabel\n\t\t\t\tclasses={{ root: '!mr-0' }}\n\t\t\t\tclassName={'absolute right-0 top-0'}\n\t\t\t\tcontrol={<Checkbox onChange={onToggleChecked} checked={checked} color=\"primary\" />}\n\t\t\t\tlabel={null}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import { useAppState } from 'shared/state';\nimport EntityContainer from 'modules/entity/containers';\nimport { StaffReAssignItem } from './StaffReAssignItem';\nimport React, { ChangeEvent, useState } from 'react';\nimport { ReAssignmentItemName, ReAssignmentItemNameUnionType } from './StaffReAssignment';\nimport { Loader } from 'shared/components';\n\ntype Props = {\n\tstaffId: number;\n\thandleToggleItemChecked: (\n\t\tid: number,\n\t\tname: ReAssignmentItemNameUnionType\n\t) => (e: ChangeEvent<HTMLInputElement>) => void;\n\tisItemChecked: (id: number, name: ReAssignmentItemNameUnionType) => boolean;\n};\nexport function StaffReAssignStatuses({ staffId, handleToggleItemChecked, isItemChecked }: Props) {\n\tconst { companyId } = useAppState();\n\tconst [page, setPage] = useState(1);\n\treturn staffId ? (\n\t\t<EntityContainer.All\n\t\t\tentity=\"reAssign-statuses\"\n\t\t\tname={`statuses`}\n\t\t\turl={`/v2/${companyId}/cases/staff-cases/`}\n\t\t\tparams={{\n\t\t\t\textra: {\n\t\t\t\t\tassignee: staffId\n\t\t\t\t},\n\t\t\t\tpage,\n\t\t\t\tlimit: 10\n\t\t\t}}\n\t\t\tdataKey={(data: any) => data}\n\t\t\tappendData\n\t\t>\n\t\t\t{({ items, meta, isFetched }) => {\n\t\t\t\tconst statuses = items as { id: number; name: string }[];\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{statuses.map((status) => (\n\t\t\t\t\t\t\t<StaffReAssignItem\n\t\t\t\t\t\t\t\tonToggleChecked={handleToggleItemChecked(status?.id, ReAssignmentItemName.STATUSES)}\n\t\t\t\t\t\t\t\tchecked={isItemChecked(status?.id, ReAssignmentItemName.STATUSES)}\n\t\t\t\t\t\t\t\tkey={status?.id}\n\t\t\t\t\t\t\t\ttitle={status?.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{/*{isFetched &&\n\t\t\t\t\t\t\tmeta?.current_page &&\n\t\t\t\t\t\t\tmeta?.last_page &&\n\t\t\t\t\t\t\tmeta?.current_page < meta?.last_page && (\n\t\t\t\t\t\t\t\t<LoadMoreVisible setPage={() => setPage((prev) => prev + 1)} />\n\t\t\t\t\t\t\t)}*/}\n\t\t\t\t\t\t{!isFetched ? (\n\t\t\t\t\t\t\t<div className=\"case-chat-loader flex items-center justify-center\">\n\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityContainer.All>\n\t) : null;\n}\n","import EntityContainer from 'modules/entity/containers';\nimport { CaseItem, CaseType } from '../../Cases/components/CaseItem';\nimport { StaffReAssignItem } from './StaffReAssignItem';\nimport { ReAssignmentItemName, ReAssignmentItemNameUnionType } from './StaffReAssignment';\nimport { useAppState } from 'shared/state';\nimport React, { ChangeEvent, Dispatch, SetStateAction } from 'react';\nimport { Loader, LoadMoreVisible } from 'shared/components';\n\ntype Props = {\n\tstaffId: number;\n\thandleToggleItemChecked: (\n\t\tid: number,\n\t\tname: ReAssignmentItemNameUnionType\n\t) => (e: ChangeEvent<HTMLInputElement>) => void;\n\tisItemChecked: (id: number, name: ReAssignmentItemNameUnionType) => boolean;\n\tselectedStatusIds: number[];\n\tstaffCasesPage: number;\n\tsetStaffCasesPage: Dispatch<SetStateAction<number>>;\n};\n\nexport function StaffReAssignCases({\n\tstaffId,\n\thandleToggleItemChecked,\n\tisItemChecked,\n\tselectedStatusIds,\n\tstaffCasesPage,\n\tsetStaffCasesPage\n}: Props) {\n\tconst { companyId } = useAppState();\n\n\treturn staffId ? (\n\t\t<EntityContainer.All\n\t\t\tentity=\"reAssign-cases\"\n\t\t\tname=\"cases\"\n\t\t\turl={`/${companyId}/cases/filter/`}\n\t\t\tparams={{\n\t\t\t\textra: {\n\t\t\t\t\tassignees: staffId,\n\t\t\t\t\tall_cases: 'true',\n\t\t\t\t\t...(selectedStatusIds.length && { status: selectedStatusIds })\n\t\t\t\t}\n\t\t\t}}\n\t\t\tappendData\n\t\t\treplaceIds={staffCasesPage === 1}\n\t\t>\n\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\tconst staffAssignedCasesList = items as CaseType[];\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{staffAssignedCasesList.map((caseItem) => (\n\t\t\t\t\t\t\t<StaffReAssignItem\n\t\t\t\t\t\t\t\tkey={caseItem?.id}\n\t\t\t\t\t\t\t\tonToggleChecked={handleToggleItemChecked(caseItem?.id, ReAssignmentItemName.CASES)}\n\t\t\t\t\t\t\t\tchecked={isItemChecked(caseItem?.id, ReAssignmentItemName.CASES)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"h-40\">\n\t\t\t\t\t\t\t\t\t<CaseItem\n\t\t\t\t\t\t\t\t\t\tcaseData={caseItem}\n\t\t\t\t\t\t\t\t\t\tisFetched={isFetched}\n\t\t\t\t\t\t\t\t\t\ttoggleCaseDetailsOpen={() => {}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</StaffReAssignItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{!isFetched ? (\n\t\t\t\t\t\t\t<div className=\"case-chat-loader flex items-center justify-center\">\n\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityContainer.All>\n\t) : null;\n}\n","import { StaffReAssignItem } from './StaffReAssignItem';\nimport EntityContainer from 'modules/entity/containers';\nimport { ReAssignmentItemName, ReAssignmentItemNameUnionType } from './StaffReAssignment';\nimport { useAppState } from 'shared/state';\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport { Loader, LoadMoreVisible } from 'shared/components';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\n\ntype Props = {\n\tstaffSearchValue: string;\n\tstaffId: number;\n\thandleToggleItemChecked: (\n\t\tid: number,\n\t\tname: ReAssignmentItemNameUnionType\n\t) => (e: ChangeEvent<HTMLInputElement>) => void;\n\tisItemChecked: (id: number, name: ReAssignmentItemNameUnionType) => boolean;\n};\n\nexport function StaffReAssignUsers({\n\tstaffSearchValue,\n\thandleToggleItemChecked,\n\tisItemChecked,\n\tstaffId\n}: Props) {\n\tconst { companyId } = useAppState();\n\tconst [page, setPage] = useState(1);\n\n\tuseEffect(() => {\n\t\tif (staffSearchValue.length) {\n\t\t\tsetPage(1);\n\t\t}\n\t}, [staffSearchValue]);\n\n\treturn (\n\t\t<EntityContainer.All\n\t\t\tentity=\"reAssign-staff\"\n\t\t\tname=\"staff\"\n\t\t\turl={`/${companyId}/employee/`}\n\t\t\tparams={{\n\t\t\t\textra: {\n\t\t\t\t\tsearch: staffSearchValue,\n\t\t\t\t\texclude_ids: staffId\n\t\t\t\t},\n\t\t\t\tpage: 1,\n\t\t\t\tlimit: 10\n\t\t\t}}\n\t\t\tappendData\n\t\t>\n\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\tconst companyStaffList = items as {\n\t\t\t\t\tid: number;\n\t\t\t\t\tfirst_name: string;\n\t\t\t\t\tlast_name: string;\n\t\t\t\t\tavatar: any;\n\t\t\t\t}[];\n\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{companyStaffList.map((staff) => (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<StaffReAssignItem\n\t\t\t\t\t\t\t\t\tonToggleChecked={handleToggleItemChecked(staff?.id, ReAssignmentItemName.STAFF)}\n\t\t\t\t\t\t\t\t\tchecked={isItemChecked(staff?.id, ReAssignmentItemName.STAFF)}\n\t\t\t\t\t\t\t\t\tkey={staff?.id}\n\t\t\t\t\t\t\t\t\ttitle={`${staff?.first_name} ${staff?.last_name}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{isFetched &&\n\t\t\t\t\t\tmeta?.current_page &&\n\t\t\t\t\t\tmeta?.last_page &&\n\t\t\t\t\t\tmeta?.current_page < meta?.last_page ? (\n\t\t\t\t\t\t\t<LoadMoreVisible setPage={() => setPage((prev) => prev + 1)} />\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{!isFetched ? (\n\t\t\t\t\t\t\t<div className=\"case-chat-loader flex items-center justify-center\">\n\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityContainer.All>\n\t);\n}\n","import { Button } from 'shared/components/Elements';\nimport InputText from 'shared/components/Elements/Fields/InputText';\nimport { StaffReAssignItemWrapper } from './StaffReAssignItemWrapper';\nimport { useAppState } from 'shared/state';\nimport { useAxios, useLoadAll, useNotistack } from 'shared/hooks';\nimport Loader from 'shared/components/Loader';\nimport { StaffReAssignStatuses } from './StaffReAssignStatuses';\nimport { StaffReAssignCases } from './StaffReAssignCases';\nimport { StaffReAssignUsers } from './StaffReAssignUsers';\nimport { StaffReAssignmentActionType } from './StaffManagementTable';\nimport { useStaffReAssignment } from '../hooks/useStaffReAssignment';\n\ntype Props = {\n\tstaff: { id: number; first_name: string; last_name: string };\n\tonCloseReAssignmentModal: () => void;\n\tactionType: StaffReAssignmentActionType;\n\tonOpenDeleteStaffConfirmModal: (entity: any) => void;\n};\n\nexport enum ReAssignmentItemName {\n\tSTATUSES = 'STATUSES',\n\tCASES = 'CASES',\n\tSTAFF = 'STAFF'\n}\n\nexport type ReAssignmentItemNameUnionType = keyof typeof ReAssignmentItemName;\n\nexport function StaffReAssignment({\n\tstaff,\n\tonCloseReAssignmentModal,\n\tactionType,\n\tonOpenDeleteStaffConfirmModal\n}: Props) {\n\tconst { companyId } = useAppState();\n\tconst { showNotification } = useNotistack();\n\tconst { reloadEntityAll } = useLoadAll();\n\tconst {\n\t\treAssignmentState,\n\t\tstaffSearchValue,\n\t\thandleStaffSearchValueChanged,\n\t\thandleToggleSelectAll,\n\t\thandleToggleItemChecked,\n\t\tisItemChecked,\n\t\tselectAll,\n\t\tstaffCasesPage,\n\t\tsetStaffCasesPage,\n\t\tsetReAssignmentState\n\t} = useStaffReAssignment();\n\n\tconst { fetchData: reAssignStaffCases, loading: reAssignStaffCaseLoading } = useAxios({\n\t\turl: `/v2/${companyId}/cases/staff-cases/reassign/`,\n\t\tmethod: 'post',\n\t\tvalues: {\n\t\t\tprevious_assignee: staff?.id,\n\t\t\tassignee_ids: reAssignmentState[ReAssignmentItemName.STAFF],\n\t\t\tcase_ids: reAssignmentState[ReAssignmentItemName.CASES]\n\t\t},\n\t\tcb: {\n\t\t\tsuccess: (data) => {\n\t\t\t\tsetReAssignmentState((prev) => ({\n\t\t\t\t\t...prev,\n\t\t\t\t\t[ReAssignmentItemName.CASES]: []\n\t\t\t\t}));\n\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: 'Cases has been re-assigned successfully!'\n\t\t\t\t});\n\n\t\t\t\t//re fetching previous staff cases\n\t\t\t\treloadEntityAll({\n\t\t\t\t\tentity: 'reAssign-cases',\n\t\t\t\t\tname: 'cases',\n\t\t\t\t\turl: `/${companyId}/cases/filter/`,\n\t\t\t\t\tparams: {\n\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\tassignees: staff?.id,\n\t\t\t\t\t\t\tall_cases: 'true',\n\t\t\t\t\t\t\tstatus: reAssignmentState[ReAssignmentItemName.STATUSES]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treplaceIds: true,\n\t\t\t\t\tcb: {\n\t\t\t\t\t\tsuccess: (data) => {\n\t\t\t\t\t\t\tsetStaffCasesPage(1);\n\n\t\t\t\t\t\t\tif (actionType === 'delete' && !data?.results?.length) {\n\t\t\t\t\t\t\t\tonCloseReAssignmentModal();\n\n\t\t\t\t\t\t\t\tonOpenDeleteStaffConfirmModal(staff);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\terror: (error) => {\n\t\t\t\tconsole.log(error, 'reAssignStaffCases error');\n\t\t\t}\n\t\t}\n\t});\n\n\tconst isReAssignButtonDisabled =\n\t\treAssignStaffCaseLoading || !reAssignmentState.CASES.length || !reAssignmentState.STAFF.length;\n\n\tasync function handleReAssignment() {\n\t\tawait reAssignStaffCases();\n\t}\n\n\treturn (\n\t\t<div className=\"staff-assign__wrapper py-2\">\n\t\t\t<div className=\"staff-assign__header flex items-center justify-between\">\n\t\t\t\t<h3 className=\"header__title text-lg font-medium\">Assign Tasks</h3>\n\t\t\t\t<div className=\"header__buttons flex gap-x-2\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={onCloseReAssignmentModal}\n\t\t\t\t\t\tdisabled={reAssignStaffCaseLoading}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tclasses={{ root: '!bg-white !text-kgrey' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={handleReAssignment}\n\t\t\t\t\t\tdisabled={isReAssignButtonDisabled}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclasses={{ root: '!bg-primary-dark !text-white' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{reAssignStaffCaseLoading && <Loader tiled />} Re-assign\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<section className=\"staff-assign__row mt-4 flex gap-x-2\">\n\t\t\t\t<StaffReAssignItemWrapper\n\t\t\t\t\tselectAllChecked={selectAll[ReAssignmentItemName.STATUSES]}\n\t\t\t\t\tonToggleSelectAll={handleToggleSelectAll(ReAssignmentItemName.STATUSES)}\n\t\t\t\t\ttitle=\"Statuses\"\n\t\t\t\t>\n\t\t\t\t\t<StaffReAssignStatuses\n\t\t\t\t\t\tstaffId={staff?.id}\n\t\t\t\t\t\thandleToggleItemChecked={handleToggleItemChecked}\n\t\t\t\t\t\tisItemChecked={isItemChecked}\n\t\t\t\t\t/>\n\t\t\t\t</StaffReAssignItemWrapper>\n\t\t\t\t<StaffReAssignItemWrapper\n\t\t\t\t\tselectAllChecked={selectAll[ReAssignmentItemName.CASES]}\n\t\t\t\t\tonToggleSelectAll={handleToggleSelectAll(ReAssignmentItemName.CASES)}\n\t\t\t\t\ttitle=\"Cases\"\n\t\t\t\t\tscrollWrapperHeight=\"23rem\"\n\t\t\t\t>\n\t\t\t\t\t<StaffReAssignCases\n\t\t\t\t\t\tstaffCasesPage={staffCasesPage}\n\t\t\t\t\t\tsetStaffCasesPage={setStaffCasesPage}\n\t\t\t\t\t\tstaffId={staff?.id}\n\t\t\t\t\t\thandleToggleItemChecked={handleToggleItemChecked}\n\t\t\t\t\t\tisItemChecked={isItemChecked}\n\t\t\t\t\t\tselectedStatusIds={reAssignmentState[ReAssignmentItemName.STATUSES]}\n\t\t\t\t\t/>\n\t\t\t\t</StaffReAssignItemWrapper>\n\t\t\t\t<StaffReAssignItemWrapper\n\t\t\t\t\tselectAllChecked={selectAll[ReAssignmentItemName.STAFF]}\n\t\t\t\t\tonToggleSelectAll={handleToggleSelectAll(ReAssignmentItemName.STAFF)}\n\t\t\t\t\ttitle=\"Staff\"\n\t\t\t\t\textra={\n\t\t\t\t\t\t<div className=\"column__extra my-1 rounded-lg bg-kgrey-bg py-1 px-3 dark:bg-kdark-lighter\">\n\t\t\t\t\t\t\t<InputText\n\t\t\t\t\t\t\t\tonChange={handleStaffSearchValueChanged}\n\t\t\t\t\t\t\t\tclasses={{ root: 'border-none' }}\n\t\t\t\t\t\t\t\tplaceholder=\"Search user\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<StaffReAssignUsers\n\t\t\t\t\t\tstaffId={staff?.id}\n\t\t\t\t\t\tstaffSearchValue={staffSearchValue}\n\t\t\t\t\t\thandleToggleItemChecked={handleToggleItemChecked}\n\t\t\t\t\t\tisItemChecked={isItemChecked}\n\t\t\t\t\t/>\n\t\t\t\t</StaffReAssignItemWrapper>\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n","import { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport {\n\tReAssignmentItemName,\n\tReAssignmentItemNameUnionType\n} from '../components/StaffReAssignment';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'store/root.state';\nimport { useGetEntity } from '../../../shared/hooks';\n\ntype ReAssignmentStateType = {\n\t[name in ReAssignmentItemName]: number[];\n};\n\ntype SelectAllType = {\n\t[name in ReAssignmentItemName]: boolean;\n};\n\nexport function useStaffReAssignment() {\n\tconst entityInState = useSelector((state: RootState) => state?.entity);\n\n\tconst [staffCasesPage, setStaffCasesPage] = useState(1);\n\tconst [staffSearchValue, setStaffSearchValue] = useState('');\n\tconst [reAssignmentState, setReAssignmentState] = useState<ReAssignmentStateType>({\n\t\t[ReAssignmentItemName.CASES]: [],\n\t\t[ReAssignmentItemName.STATUSES]: [],\n\t\t[ReAssignmentItemName.STAFF]: []\n\t});\n\tconst [selectAll, setSelectAll] = useState<SelectAllType>({\n\t\t[ReAssignmentItemName.CASES]: false,\n\t\t[ReAssignmentItemName.STATUSES]: false,\n\t\t[ReAssignmentItemName.STAFF]: false\n\t});\n\tconst { all: reAssigningCases } = useGetEntity({\n\t\tentity: 'reAssign-cases',\n\t\tentityName: 'cases'\n\t});\n\n\tfunction getEntityIds(name: ReAssignmentItemNameUnionType) {\n\t\tconst entityName = name.toLowerCase();\n\t\treturn entityInState?.[`reAssign-${entityName}`]?.[entityName].ids ?? [];\n\t}\n\n\tconst isItemChecked = useCallback(\n\t\t(id: number, name: ReAssignmentItemNameUnionType) => {\n\t\t\treturn reAssignmentState[name].includes(id);\n\t\t},\n\t\t[reAssignmentState]\n\t);\n\n\t//toggle column item checked/unchecked function\n\tconst handleToggleItemChecked = useCallback(\n\t\t(id: number, name: ReAssignmentItemNameUnionType) => (event: ChangeEvent<HTMLInputElement>) => {\n\t\t\tconst isItemChecked = event.target?.checked;\n\n\t\t\tif (isItemChecked) {\n\t\t\t\tsetReAssignmentState((prevState) => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\t[name]: [...prevState[name], id]\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tsetReAssignmentState((prevState) => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\t[name]: [...prevState[name]].filter((prevId) => prevId !== id)\n\t\t\t\t}));\n\t\t\t}\n\t\t},\n\t\t[reAssignmentState, getEntityIds]\n\t);\n\n\t//toggle select all/unselect all function\n\tconst handleToggleSelectAll = useCallback(\n\t\t(name: ReAssignmentItemNameUnionType) => (e: ChangeEvent<HTMLInputElement>) => {\n\t\t\tconst allEntityIds = getEntityIds(name);\n\t\t\tsetReAssignmentState((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\t[name]: e.target.checked ? allEntityIds : []\n\t\t\t}));\n\t\t\tsetSelectAll((prev) => ({ ...prev, [name]: e.target.checked }));\n\t\t},\n\t\t[getEntityIds]\n\t);\n\n\t//staff search value onchange\n\tconst handleStaffSearchValueChanged = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetStaffSearchValue(e?.target?.value);\n\t}, []);\n\n\t//select all/unselect all\n\t//use-case 1: even if only item is being checked and that was last unchecked one in the list, select all  should be checked\n\t//use-case 2: if item is being unchecked and that was first unchecked one in the all checked list, unselect all should be unchecked\n\tuseEffect(() => {\n\t\t// Function to check if all items in a category are selected\n\t\tconst checkIfAllSelected = (name: ReAssignmentItemNameUnionType) => {\n\t\t\tconst totalItems = getEntityIds(name).length;\n\t\t\tif (totalItems === 0) return false;\n\n\t\t\treturn reAssignmentState[name].length === totalItems;\n\t\t};\n\n\t\t// Update the selectAll state based on individual selections\n\t\tconst newSelectAll = { ...selectAll };\n\t\tObject.keys(ReAssignmentItemName).forEach((name) => {\n\t\t\tnewSelectAll[name as ReAssignmentItemNameUnionType] = checkIfAllSelected(\n\t\t\t\tname as ReAssignmentItemNameUnionType\n\t\t\t);\n\t\t});\n\n\t\tsetSelectAll(newSelectAll);\n\t}, [reAssignmentState]);\n\n\tuseEffect(() => {\n\t\tif (selectAll.CASES) {\n\t\t\tsetReAssignmentState((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\t[ReAssignmentItemName.CASES]: reAssigningCases?.items?.map((item: any) => item?.id)\n\t\t\t}));\n\t\t}\n\t}, [reAssigningCases, selectAll.CASES]);\n\n\tuseEffect(() => {\n\t\tsetStaffCasesPage(1);\n\t}, [reAssignmentState[ReAssignmentItemName.STATUSES]]);\n\n\treturn {\n\t\thandleStaffSearchValueChanged,\n\t\thandleToggleSelectAll,\n\t\thandleToggleItemChecked,\n\t\tisItemChecked,\n\t\treAssignmentState,\n\t\tstaffSearchValue,\n\t\tselectAll,\n\t\tstaffCasesPage,\n\t\tsetStaffCasesPage,\n\t\tsetReAssignmentState\n\t};\n}\n","import { PiWarningBold } from 'react-icons/pi';\nimport { Button } from 'shared/components/Elements';\nimport React from 'react';\n\ntype Props = {\n\tonConfirmReAssignRequireModal: () => void;\n};\n\nexport function RequireReAssignWarning({ onConfirmReAssignRequireModal }: Props) {\n\treturn (\n\t\t<div className=\"re-assign-required__wrapper flex-center-center flex-col\">\n\t\t\t<div className=\"flex-center-y mb-2.5 flex-col\">\n\t\t\t\t<PiWarningBold className=\"text-amber-400\" size={60} />\n\t\t\t\t<h3 className=\"mb-1 text-center text-lg font-medium\">Warning</h3>\n\t\t\t\t<p className=\"text-base text-kgrey-menuText dark:text-kgrey-d8d8d8\">\n\t\t\t\t\tTo delete this user, the assigned tasks must be transferred to another staff member\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={onConfirmReAssignRequireModal}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclasses={{ root: '!bg-primary !text-white' }}\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t>\n\t\t\t\t\tRe-assign\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useCallback } from 'react';\nimport {\n\tActionsButtons,\n\tConfirmModal,\n\tErrorBoundary,\n\tKntButton,\n\tLoader,\n\tStyledTable,\n\tStyledTableCell,\n\tStyledTableHeadCell,\n\tStyledTableRow\n} from 'shared/components';\nimport { useAppState } from 'shared/state';\nimport EntityContainer from 'modules/entity/containers';\nimport {\n\tButton,\n\tTableBody,\n\tTableContainer,\n\tTableHead,\n\tWhiteModal\n} from 'shared/components/Elements';\nimport { useAxios, usePagination, useQueryParams, useRouter } from '../../../shared/hooks';\nimport { useStaffManagement } from '../context/StaffManagementContext';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { useDebounce } from 'use-debounce';\nimport EditStaffForm from './EditStaffForm';\nimport { useStaffManagementList } from '../hooks/useStaffManagement';\nimport { getBusinessIcon } from '../../../shared/services/utils/getBusinessIcon';\nimport { StaffManagementItemRequest } from '../../../shared/typings/staffManagement.types';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { formRequest } from '../../../modules/entity/actions';\nimport { useEntityActionPopup, useLoadAll, useNotistack } from 'shared/hooks';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\nimport { StatusTag } from 'shared/components/DataDisplay';\nimport { StaffReAssignment } from './StaffReAssignment';\nimport { PiWarningBold } from 'react-icons/pi';\nimport { RequireReAssignWarning } from './RequireReAssignWarning';\n\nconst NO_MOBILE_NUMBER = 'No mobile number';\n\nexport type StaffReAssignmentActionType = 're_assign' | 'delete';\n\ntype Props = {\n\tfetchStaffCount?: () => void;\n};\n\nfunction StaffManagementTableRequest({ fetchStaffCount = () => {} }: Props) {\n\tconst { companyId, isAdmin } = useAppState();\n\tconst { searchQuery } = useStaffManagement();\n\tconst { company, userData } = useAuth();\n\tconst { page, handlePage } = usePagination();\n\tconst { match, history } = useRouter();\n\tconst { showNotification } = useNotistack();\n\tconst dispatch = useDispatch();\n\tconst { reloadEntityAll } = useLoadAll();\n\n\tconst isBusinessOwner = userData?.id === company?.company?.owner?.id;\n\n\tconst {\n\t\tdeleteLoading,\n\t\thandleClientDelete,\n\t\tshowDeleteVisible,\n\t\tcloseDeletePopup,\n\t\tdeleteVisible,\n\t\teditVisible,\n\t\tshowEditVisible,\n\t\tcloseEditPopup,\n\t\tstaffCountLoading,\n\t\treAssignModalVisible,\n\t\tclickReAssignButtonHandler,\n\t\tcloseReAssignModalHandler,\n\t\treAssignmentActionType,\n\t\tsetReAssignmentActionType,\n\t\treAssignRequiredWarningVisible,\n\t\tshowReAssignRequiredWarningVisible,\n\t\tcloseReAssignRequiredWarningVisible\n\t} = useStaffManagementList(fetchStaffCount);\n\n\tconst handleConfirmReAssignRequiredModal = useCallback(() => {\n\t\tsetReAssignmentActionType('delete');\n\t\tclickReAssignButtonHandler(reAssignRequiredWarningVisible);\n\t\tcloseReAssignRequiredWarningVisible();\n\t}, [reAssignRequiredWarningVisible, closeReAssignRequiredWarningVisible]);\n\n\tconst [querySearch] = useDebounce<string>(searchQuery, 500);\n\n\tconst {\n\t\tvisible: resendVisible,\n\t\tshowVisible: showResendVisible,\n\t\tloading: resendLoading,\n\t\ttoggleLoading: toggleResendLoading,\n\t\tclosePopup: closeResendPopup\n\t} = useEntityActionPopup<any>();\n\n\tconst deleteClientHandler = () => () => {\n\t\thandleClientDelete(deleteVisible!);\n\t};\n\n\tconst { fetchData: requestUserAssignedCasesCount, loading: userAssignedCasesCountLoading } =\n\t\tuseAxios({\n\t\t\turl: '',\n\t\t\tdynamicUrl: true,\n\t\t\tcb: {\n\t\t\t\tsuccess: (data, args) => {\n\t\t\t\t\tconst { onAfterCasesCountSuccess } = args?.[0];\n\t\t\t\t\tonAfterCasesCountSuccess?.(data);\n\t\t\t\t},\n\t\t\t\terror: (error) => {\n\t\t\t\t\tconsole.log(error, 'requestUserAssignedCasesCount');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\tconst clickDeleteButtonHandler = useCallback(\n\t\t(item: any) => async () => {\n\t\t\tawait requestUserAssignedCasesCount({\n\t\t\t\turl: `/${companyId}/employee/${item?.id}/check-assigned-cases/`,\n\t\t\t\tonAfterCasesCountSuccess: (data: { has_assigned_cases: boolean }) => {\n\t\t\t\t\tif (data.has_assigned_cases) {\n\t\t\t\t\t\tshowReAssignRequiredWarningVisible(item);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshowDeleteVisible(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[]\n\t);\n\n\tconst handleResendRequest = (id: number) => {\n\t\ttoggleResendLoading();\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'staffEmployee',\n\t\t\t\tname: `staffEmployee-${companyId}`,\n\t\t\t\tmethod: 'post',\n\t\t\t\turl: `/${companyId}/employee/${id}/resend_invitation/`,\n\t\t\t\tvalues: {},\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\treloadEntityAll({\n\t\t\t\t\t\t\tentity: 'staffEmployee',\n\t\t\t\t\t\t\tname: `staffEmployee-${companyId}`,\n\t\t\t\t\t\t\turl: `/${companyId}/employee/`,\n\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\tpage: 1,\n\t\t\t\t\t\t\t\tlimit: 10\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcloseResendPopup();\n\t\t\t\t\t\tshowNotification({ message: 'Successfully resended', variant: 'success' });\n\t\t\t\t\t},\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {\n\t\t\t\t\t\ttoggleResendLoading();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id'\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleResend = () => () => handleResendRequest(resendVisible!);\n\n\treturn (\n\t\t<div>\n\t\t\t{companyId ? (\n\t\t\t\t<EntityContainer.All\n\t\t\t\t\tentity={'staffEmployee'}\n\t\t\t\t\tname={`staffEmployee-${companyId}`}\n\t\t\t\t\turl={`/${companyId}/employee/`}\n\t\t\t\t\treplaceIds\n\t\t\t\t\tparams={{\n\t\t\t\t\t\tlimit: 10,\n\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\tsearch: querySearch\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpage\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\t\t\tconst requests = items.map((item: unknown) => item) as StaffManagementItemRequest[];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<TableContainer classes={{ root: 'relative ' }}>\n\t\t\t\t\t\t\t\t\t<StyledTable\n\t\t\t\t\t\t\t\t\t\taria-label=\"simple table\"\n\t\t\t\t\t\t\t\t\t\tclasses={{ root: 'table-fixed dark-mode-styled-table' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t\t\t\t<StyledTableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '22%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tFull name\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '24%' }}>Email</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '18%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tPhone number\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '12%' }}>Role</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '10%' }}>Status</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '14%', textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tActions\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t\t\t{requests.map((item: StaffManagementItemRequest) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfirst_name,\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast_name,\n\t\t\t\t\t\t\t\t\t\t\t\t\tusername,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmobile,\n\t\t\t\t\t\t\t\t\t\t\t\t\troles,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\t\t\t\t\tavatar,\n\t\t\t\t\t\t\t\t\t\t\t\t\tis_business_owner\n\t\t\t\t\t\t\t\t\t\t\t\t} = item;\n\t\t\t\t\t\t\t\t\t\t\t\tconst phone = mobile\n\t\t\t\t\t\t\t\t\t\t\t\t\t? mobile[0] === '+'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? mobile\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: `+${mobile}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t: NO_MOBILE_NUMBER;\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableRow key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"h-9 w-9 flex-shrink-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{getBusinessIcon(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavatar?.thumbnail || avatar?.thumbnail_150,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfirst_name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{state === 'Pending' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"truncate\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"ml-2 text-sm font-medium\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{first_name} {last_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"truncate\" to={`${match.path}/view/${item.id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"ml-2 text-sm font-medium text-primary transition hover:text-primary-dark\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{first_name} {last_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextOverflow: 'ellipsis',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhiteSpace: 'nowrap'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"test-kdark-text text-sm\">{username}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{phone ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<BsFillTelephoneFill color=\"#979797\" size=\"15px\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={`tel:${phone}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx('test-kdark-text ml-2 align-middle text-sm ', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'text-primary hover:text-primary-dark':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tphone !== NO_MOBILE_NUMBER,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'pointer-events-none': phone === NO_MOBILE_NUMBER\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{phone}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{roles.map((role: string, index: number) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sx text-kgrey\" key={`${index}_${role}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{' ' + role + ' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{roles.length > 1 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-kgrey\">|</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{is_business_owner ? <span>| owner</span> : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{state === 'Pending' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<KntButton color=\"primary\" onClick={() => showResendVisible(id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tResend\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</KntButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StatusTag status={state}>{state}</StatusTag>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!is_business_owner && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ActionsButtons.DeleteButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisBusinessOwner ? false : is_business_owner || !isAdmin\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickHandler={clickDeleteButtonHandler(item)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ActionsButtons.ViewButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={!isAdmin || state === 'Pending'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickHandler={() => history.push(`${match.path}/view/${id}`)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ActionsButtons.ReAssignButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickHandler={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickReAssignButtonHandler(item);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={!isAdmin || state === 'Pending'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ActionsButtons.EditButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisBusinessOwner\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? state === 'Pending'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: is_business_owner || !isAdmin || state === 'Pending'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickHandler={() => showEditVisible(item)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t\t\t</StyledTable>\n\t\t\t\t\t\t\t\t\t{isFetched && staffCountLoading && <Loader tiled withOverlay />}\n\t\t\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\t\tfeatureHandler={deleteClientHandler()}\n\t\t\t\t\t\t\t\t\tisOpen={Boolean(deleteVisible)}\n\t\t\t\t\t\t\t\t\ttoggleHandler={closeDeletePopup}\n\t\t\t\t\t\t\t\t\ttitle={`Are you sure you want to delete the following staff member: \"${deleteVisible?.first_name} ${deleteVisible?.last_name}\"`}\n\t\t\t\t\t\t\t\t\thasLoader\n\t\t\t\t\t\t\t\t\tisLoading={deleteLoading}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\t\tfeatureHandler={handleResend()}\n\t\t\t\t\t\t\t\t\tisOpen={Boolean(resendVisible)}\n\t\t\t\t\t\t\t\t\ttoggleHandler={closeResendPopup}\n\t\t\t\t\t\t\t\t\ttitle=\"Are you sure to resend the Request\"\n\t\t\t\t\t\t\t\t\thasLoader\n\t\t\t\t\t\t\t\t\tisLoading={resendLoading}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\thandleModalOpen={closeEditPopup}\n\t\t\t\t\t\t\t\t\topen={Boolean(editVisible)}\n\t\t\t\t\t\t\t\t\tmaxWidth={490}\n\t\t\t\t\t\t\t\t\tminWidth={490}\n\t\t\t\t\t\t\t\t\tscrollable\n\t\t\t\t\t\t\t\t\tnoPadding\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<EditStaffForm entity={editVisible!} onSuccess={closeEditPopup} />\n\t\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\thandleModalOpen={closeReAssignModalHandler}\n\t\t\t\t\t\t\t\t\topen={Boolean(reAssignModalVisible)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<StaffReAssignment\n\t\t\t\t\t\t\t\t\t\tonCloseReAssignmentModal={closeReAssignModalHandler}\n\t\t\t\t\t\t\t\t\t\tstaff={reAssignModalVisible}\n\t\t\t\t\t\t\t\t\t\tactionType={reAssignmentActionType}\n\t\t\t\t\t\t\t\t\t\tonOpenDeleteStaffConfirmModal={showDeleteVisible}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\thandleModalOpen={closeReAssignRequiredWarningVisible}\n\t\t\t\t\t\t\t\t\topen={Boolean(reAssignRequiredWarningVisible)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<RequireReAssignWarning\n\t\t\t\t\t\t\t\t\t\tonConfirmReAssignRequireModal={handleConfirmReAssignRequiredModal}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t\t<div className=\"news__pagination my-4 flex items-center justify-between\">\n\t\t\t\t\t\t\t\t\t{items.length ? (\n\t\t\t\t\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\t\t\t\t\tcount={meta?.last_page}\n\t\t\t\t\t\t\t\t\t\t\tpage={page ? +page : 1}\n\t\t\t\t\t\t\t\t\t\t\tdefaultPage={6}\n\t\t\t\t\t\t\t\t\t\t\tsiblingCount={1}\n\t\t\t\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handlePage}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t<div className=\"ml-4\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-base font-medium dark:text-white\">\n\t\t\t\t\t\t\t\t\t\t\tStaff Count:{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"ml-2 text-base font-semibold text-primary \">\n\t\t\t\t\t\t\t\t\t\t\t\t{meta?.count}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityContainer.All>\n\t\t\t) : (\n\t\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t\t<Loader />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport function StaffManagementTable(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<StaffManagementTableRequest {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React, { useCallback } from 'react';\nimport EntityForm from 'modules/entity/forms';\nimport { useAppState } from 'shared/state';\nimport { useNotistack } from 'shared/hooks';\nimport StaffFormElement from './StaffFormElement';\n\ntype Props = {\n\tmodalHandler: any;\n\thasToShowGuard: () => void;\n\tformValuesSetter: (fieldValues: string[]) => void;\n\tfetchStaffCount: () => void;\n};\n\nexport default function CreateStaffForm({\n\tmodalHandler,\n\thasToShowGuard,\n\tformValuesSetter,\n\tfetchStaffCount\n}: Props) {\n\tconst { companyId } = useAppState();\n\tconst closeModal = useCallback(() => modalHandler(null), []);\n\tconst { showNotification } = useNotistack();\n\treturn (\n\t\t<div>\n\t\t\t{companyId ? (\n\t\t\t\t<EntityForm.Main\n\t\t\t\t\tentity=\"staffEmployee\"\n\t\t\t\t\tname={`staffEmployee-${companyId}`}\n\t\t\t\t\turl={`${companyId}/employee/`}\n\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\tprimaryKey=\"id\"\n\t\t\t\t\tsendAsFormData={false}\n\t\t\t\t\tnormalizeData={(data: any) => data}\n\t\t\t\t\tprependData\n\t\t\t\t\tfields={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'avatar',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\tonSubmitValue: (value) => (value ? value : null)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'first_name',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'username',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'last_name',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'mobile',\n\t\t\t\t\t\t\t//required: true,\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'roles',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tvalue: { label: 'Member', value: 'member' },\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\tonSubmitValue: (value) => [value.value]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'departments',\n\t\t\t\t\t\t\tonSubmitValue: (value) =>\n\t\t\t\t\t\t\t\tvalue.reduce((acc: any, curr: any) => [...acc, { id: curr.value }], []),\n\t\t\t\t\t\t\tvalue: [],\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'can_send_news',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\t\t\tshowNotification({ message: 'Success! ' });\n\t\t\t\t\t\tfetchStaffCount();\n\t\t\t\t\t\tresetForm();\n\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t}}\n\t\t\t\t\tonError={(error, resetForm): any => {\n\t\t\t\t\t\tshowNotification({\n\t\t\t\t\t\t\tmessage: error?.response?.data?.message ?? 'Something went wrong',\n\t\t\t\t\t\t\tvariant: 'error'\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tresetForm();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ isSubmitting, values, setFieldValue, errors, setFieldError, resetForm }) => {\n\t\t\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\t\t\tconsole.log('values create staff', { values, errors });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<StaffFormElement\n\t\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\tsetFieldError={setFieldError}\n\t\t\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\tformValuesSetter={formValuesSetter}\n\t\t\t\t\t\t\t\tcloseModal={hasToShowGuard}\n\t\t\t\t\t\t\t\tresetForm={resetForm}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityForm.Main>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n\nCreateStaffForm.defaultProps = {\n\tonSuccess: () => {}\n};\n","import React, { useCallback, useRef, useState } from 'react';\nimport { ConfirmModal, ErrorBoundary } from 'shared/components';\nimport { StaffManagementContextProvider } from './context/StaffManagementContext';\nimport { Helmet } from 'react-helmet';\nimport { useFormGuard, useUnreadCaseTab, useRouter } from '../../shared/hooks';\nimport { StaffManagementSearchQuery } from './components/StaffManagementSearchQuery';\nimport { StaffManagementTable } from './components/StaffManagementTable';\nimport { SimpleBtn, WhiteModal } from 'shared/components/Elements';\nimport CreateStaffForm from './components/CreateStaffForm';\nimport { useAppState } from '../../shared/state';\nimport { useStaffManagementList } from './hooks/useStaffManagement';\nimport clsx from 'clsx';\nimport { useSubscription } from '../Payments/hooks';\nimport { useAuth } from '../../modules/auth/hooks/useAuth';\n\nfunction StaffManagementRequest() {\n\tconst { isAdmin, isPermitted } = useAppState();\n\tconst { unreadCasesQuantity, isHidden } = useUnreadCaseTab('Staff Management');\n\n\tconst [formOpen, setFormOpen] = useState<boolean>(false);\n\tconst { formValues, guardOpen, setGuardOpen, formValuesSetter } = useFormGuard();\n\tconst [extraPaymentOpen, setExtraPaymentOpen] = useState(false);\n\tconst { staffCountLoading, staffCountResponse, paidMemberCount, fetchStaffCount } =\n\t\tuseStaffManagementList();\n\tconst { history } = useRouter();\n\tconst { subscription } = useSubscription();\n\n\tconst { company, userData } = useAuth();\n\tconst isOwner = company?.company?.owner?.id === userData.id;\n\n\tconst updatedVariables = useRef<any>({});\n\n\tupdatedVariables.current.subscription = subscription;\n\tupdatedVariables.current.staffCountResponse = staffCountResponse;\n\tupdatedVariables.current.paidMemberCount = paidMemberCount;\n\n\t//TODO: move to custom hook all payment related logics\n\tconst modalHandlerOpen = useCallback(() => {\n\t\tconst { staffCountResponse, subscription, paidMemberCount } = updatedVariables.current || {};\n\t\tif (\n\t\t\t(staffCountResponse as any)?.staffs_count < paidMemberCount ||\n\t\t\t(subscription?.subscription_type === 'TRIAL' && subscription?.is_available)\n\t\t) {\n\t\t\tsetFormOpen((prev) => !prev);\n\t\t} else {\n\t\t\tsetExtraPaymentOpen(true);\n\t\t}\n\t}, [staffCountResponse, subscription, paidMemberCount]);\n\n\tconst closeExtraPaymentPopup = () => {\n\t\tsetExtraPaymentOpen(false);\n\t};\n\n\tconst navigateToCheckout = () => history.push('/checkout');\n\n\tconst confirmToggleHandler = useCallback(() => {\n\t\tsetGuardOpen((prev: boolean) => !prev);\n\t}, []);\n\tconst confirmModalHandler = useCallback(() => {\n\t\tsetGuardOpen(false);\n\t\tformValuesSetter([]);\n\t\tmodalHandlerOpen();\n\t}, [formOpen]);\n\n\tconst hasToShowGuard = useCallback(() => {\n\t\tif (formValues.length) {\n\t\t\tsetGuardOpen(true);\n\t\t\treturn;\n\t\t}\n\n\t\tmodalHandlerOpen();\n\t}, [formValues]);\n\n\tconst onPopupClose = () => {\n\t\tif (formValues.length) {\n\t\t\tsetGuardOpen(true);\n\t\t\treturn;\n\t\t}\n\t\tmodalHandlerOpen();\n\t};\n\n\treturn (\n\t\t<div className=\"relative flex min-h-full max-w-full flex-grow flex-col p-4\">\n\t\t\t{(!isHidden || !isOwner || unreadCasesQuantity === 0) && (\n\t\t\t\t<Helmet>\n\t\t\t\t\t<title>KENNEKT | Staff Management</title>\n\t\t\t\t</Helmet>\n\t\t\t)}\n\t\t\t<div className=\"mb-5\">\n\t\t\t\t<div className=\" absolute top-0 left-0 w-full bg-kred-pink-200\">\n\t\t\t\t\t{!isAdmin ? (\n\t\t\t\t\t\t<p className=\"my-1 text-center text-xs text-kred-pink\">\n\t\t\t\t\t\t\tYou do not have permission to perform some actions, please check with admin\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mt-6 flex w-full flex-wrap items-center justify-between\">\n\t\t\t\t\t<div className=\"mb-4 flex flex-1 items-center font-bold\">\n\t\t\t\t\t\t<h2 className=\"text-xl dark:text-white md:text-3xl \">Staff Management</h2>\n\t\t\t\t\t\t{subscription && subscription.order && subscription.paid_staffs_count ? (\n\t\t\t\t\t\t\t<span className=\"ml-4\">\n\t\t\t\t\t\t\t\t<span className=\"mr-1 text-sm font-light text-kgrey-dark-3 dark:text-white\">\n\t\t\t\t\t\t\t\t\tUsers count:\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"text-base font-semibold text-primary\">\n\t\t\t\t\t\t\t\t\t{(staffCountResponse as any)?.staffs_count ?? 0}/{subscription.paid_staffs_count}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"ml-auto mb-4  flex max-w-full items-center\">\n\t\t\t\t\t\t<StaffManagementSearchQuery />\n\t\t\t\t\t\t<SimpleBtn\n\t\t\t\t\t\t\tdisabled={!isPermitted}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={modalHandlerOpen}\n\t\t\t\t\t\t\tclassName={clsx({\n\t\t\t\t\t\t\t\t'pointer-events-none opacity-20': staffCountLoading\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd staff\n\t\t\t\t\t\t</SimpleBtn>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<StaffManagementTable fetchStaffCount={fetchStaffCount} />\n\t\t\t<ConfirmModal\n\t\t\t\tfeatureHandler={navigateToCheckout}\n\t\t\t\tisOpen={extraPaymentOpen}\n\t\t\t\ttoggleHandler={closeExtraPaymentPopup}\n\t\t\t\ttitle={`You have reached limit to add staffs. Open checkout page?`}\n\t\t\t/>\n\t\t\t<WhiteModal\n\t\t\t\thandleModalOpen={onPopupClose}\n\t\t\t\topen={formOpen}\n\t\t\t\tmaxWidth={446}\n\t\t\t\tnoPadding\n\t\t\t\tscrollable\n\t\t\t>\n\t\t\t\t<CreateStaffForm\n\t\t\t\t\tmodalHandler={modalHandlerOpen}\n\t\t\t\t\thasToShowGuard={hasToShowGuard}\n\t\t\t\t\tformValuesSetter={formValuesSetter}\n\t\t\t\t\tfetchStaffCount={fetchStaffCount}\n\t\t\t\t/>\n\t\t\t</WhiteModal>\n\t\t\t<ConfirmModal\n\t\t\t\tfeatureHandler={confirmModalHandler}\n\t\t\t\tisOpen={guardOpen}\n\t\t\t\ttoggleHandler={confirmToggleHandler}\n\t\t\t\ttitle=\"You have unsaved changes, Are you sure to cancel?\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\nexport function StaffManagement() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<StaffManagementContextProvider>\n\t\t\t\t<StaffManagementRequest />\n\t\t\t</StaffManagementContextProvider>\n\t\t</ErrorBoundary>\n\t);\n}\n","import { StaffManagement } from './StaffManagement';\n\nexport default StaffManagement;\n","import clsx from 'clsx';\nimport React from 'react';\n\ntype StatusTagProps = {\n\tstatus: string | 'Pending' | 'Logged';\n\tchildren: React.ReactNode;\n};\n\nexport function StatusTag({ status, children }: StatusTagProps) {\n\treturn (\n\t\t<span\n\t\t\tclassName={clsx(\n\t\t\t\t'inline-block rounded-4xl bg-primary py-0.5 px-5 text-10px uppercase leading-4 text-white',\n\t\t\t\t{\n\t\t\t\t\t'bg-kgrey-inputBg text-kdark': status === 'Pending',\n\t\t\t\t\t'bg-primary-dark': status === 'Logged'\n\t\t\t\t}\n\t\t\t)}\n\t\t>\n\t\t\t{children ?? 'Accepted'}\n\t\t</span>\n\t);\n}\n","import React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { InputProps, makeStyles } from '@material-ui/core';\nimport { createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tborder: '1px solid #B8BCCF',\n\t\t\tfontSize: '15px',\n\t\t\tlineHeight: 1,\n\t\t\tborderRadius: '12px',\n\t\t\tpadding: '10px 30px',\n\t\t\tfontWeight: 300,\n\t\t\twidth: '100%'\n\t\t},\n\t\tinput: {\n\t\t\tpadding: 0\n\t\t}\n\t})\n);\n\nexport function InputText(props: InputProps) {\n\tconst classes = useStyles();\n\n\treturn <InputBase classes={{ root: classes.root, input: classes.input }} {...props} />;\n}\n\nexport default InputText;\n","import { Avatar } from '@material-ui/core';\n\nexport const getBusinessIcon = (url: string | undefined, name: string | undefined) => {\n\tif (url) {\n\t\treturn (\n\t\t\t<Avatar\n\t\t\t\tclassName=\"inline-block\"\n\t\t\t\talt={name || 'Business icon'}\n\t\t\t\tsrc={url}\n\t\t\t\tstyle={{ width: '100%', height: '100%' }}\n\t\t\t/>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Avatar className=\"inline-block\" style={{ color: '#fff', width: '100%', height: '100%' }}>\n\t\t\t\t{name ? name[0].toUpperCase() : null}\n\t\t\t</Avatar>\n\t\t);\n\t}\n};\n"],"names":["CaseItemInner","props","caseData","isDragging","toggleCaseDetailsOpen","caseRef","useRef","unreadMessagesCount","useAppState","department","sub_department","caseTitle","title","last_message_type","last_message_text","last_message_author","case_number","last_message_time","caseId","id","statusId","status","priority","draftMessage","draft_message","hasLinkedCase","has_linked_case","relatedTo","related_to_id","recurringId","recurring_id","lastReadMessage","last_read_message","assigneeIds","assignee_ids","hasUnread","useMemo","ref","className","pin_time","CaseItem","isCompact","usePayments","React","primeTab","setPrimeTab","pageName","setPageName","useRouter","location","match","url","path","useUnreadCaseTab","unreadCasesQuantity","isHidden","useEffect","locationSplitterArray","pathname","split","filter","Boolean","String","nestedPageType","length","handleChangePrime","event","newValue","useSubscription","companyId","companies","useAuth","history","useState","cancelLoading","setCancelLoading","cancelSubscription","setCancelSubscription","showNotification","useNotistack","hasUserAlreadyPaidInvoice","setUserAlreadyPaidInvoice","subscription","setSubscription","cancelSubscriptionRequest","useAxios","method","cb","success","message","variant","error","additionalArgs","response","data","fetchData","firstPayRequest","results","currentCompany","find","com","company","currentSubscription","comp_subscription","handleCancelRequest","useCallback","navigateToCheckout","push","StaffManagementContext","createContext","reducer","state","action","type","searchQuery","payload","StaffManagementContextProvider","children","useReducer","dispatch","setSearchQuery","query","contextValues","Provider","value","useStaffManagement","staffContext","useContext","Error","StaffManagementSearchQuery","placeholder","onChange","e","target","StaffReAssignItemWrapper","extra","scrollWrapperHeight","onToggleSelectAll","selectAllChecked","control","checked","color","label","name","classes","autoHide","style","height","StaffReAssignItem","avatarUrl","onToggleChecked","src","size","root","StaffReAssignStatuses","staffId","handleToggleItemChecked","isItemChecked","page","entity","params","assignee","limit","dataKey","appendData","items","isFetched","meta","statuses","map","ReAssignmentItemName","STATUSES","StaffReAssignCases","selectedStatusIds","staffCasesPage","setStaffCasesPage","assignees","all_cases","replaceIds","staffAssignedCasesList","caseItem","CASES","StaffReAssignUsers","staffSearchValue","setPage","search","exclude_ids","companyStaffList","staff","STAFF","first_name","last_name","current_page","last_page","prev","useStaffReAssignment","entityInState","useSelector","setStaffSearchValue","reAssignmentState","setReAssignmentState","selectAll","setSelectAll","reAssigningCases","useGetEntity","entityName","all","getEntityIds","toLowerCase","ids","includes","prevState","prevId","handleToggleSelectAll","allEntityIds","handleStaffSearchValueChanged","newSelectAll","Object","keys","forEach","totalItems","checkIfAllSelected","item","StaffReAssignment","onCloseReAssignmentModal","actionType","onOpenDeleteStaffConfirmModal","reloadEntityAll","useLoadAll","values","previous_assignee","case_ids","console","log","reAssignStaffCases","reAssignStaffCaseLoading","loading","isReAssignButtonDisabled","onClick","disabled","Loader","tiled","InputText","fullWidth","RequireReAssignWarning","onConfirmReAssignRequireModal","NO_MOBILE_NUMBER","StaffManagementTableRequest","fetchStaffCount","isAdmin","userData","usePagination","handlePage","useDispatch","isBusinessOwner","owner","useStaffManagementList","deleteLoading","handleClientDelete","showDeleteVisible","closeDeletePopup","deleteVisible","editVisible","showEditVisible","closeEditPopup","staffCountLoading","reAssignModalVisible","clickReAssignButtonHandler","closeReAssignModalHandler","reAssignmentActionType","setReAssignmentActionType","reAssignRequiredWarningVisible","showReAssignRequiredWarningVisible","closeReAssignRequiredWarningVisible","handleConfirmReAssignRequiredModal","useDebounce","querySearch","useEntityActionPopup","resendVisible","visible","showResendVisible","showVisible","resendLoading","toggleResendLoading","toggleLoading","closeResendPopup","closePopup","dynamicUrl","args","onAfterCasesCountSuccess","requestUserAssignedCasesCount","clickDeleteButtonHandler","has_assigned_cases","handleResend","formRequest","err","finally","primaryKey","requests","width","textAlign","username","mobile","roles","avatar","is_business_owner","phone","getBusinessIcon","thumbnail","thumbnail_150","to","overflow","textOverflow","whiteSpace","href","clsx","role","index","isDisabled","clickHandler","withOverlay","featureHandler","isOpen","toggleHandler","hasLoader","isLoading","handleModalOpen","open","maxWidth","minWidth","scrollable","noPadding","EditStaffForm","onSuccess","Pagination","count","defaultPage","siblingCount","StaffManagementTable","CreateStaffForm","modalHandler","hasToShowGuard","formValuesSetter","closeModal","sendAsFormData","normalizeData","prependData","fields","required","onSubmitKey","onSubmitValue","reduce","acc","curr","resetForm","onError","isSubmitting","setFieldValue","errors","setFieldError","StaffFormElement","defaultProps","StaffManagementRequest","isPermitted","formOpen","setFormOpen","useFormGuard","formValues","guardOpen","setGuardOpen","extraPaymentOpen","setExtraPaymentOpen","staffCountResponse","paidMemberCount","isOwner","updatedVariables","current","modalHandlerOpen","staffs_count","subscription_type","is_available","confirmToggleHandler","confirmModalHandler","Helmet","order","paid_staffs_count","StatusTag","useStyles","makeStyles","theme","createStyles","border","fontSize","lineHeight","borderRadius","padding","fontWeight","input","alt","toUpperCase"],"sourceRoot":""}