{"version":3,"file":"static/js/3209.5c155c68.chunk.js","mappings":"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","sources":["pages/Departments/components/DepartmentSearchQuery.tsx","pages/Departments/components/CreateDepartmentForm.tsx","pages/Departments/Departments.tsx","pages/Departments/index.tsx"],"sourcesContent":["import React from 'react';\nimport { CgSearch } from 'react-icons/cg';\nimport { useDepartmentContext } from '../context/DepartmentContext';\n\nexport function DepartmentSearchQuery() {\n\tconst { searchQuery, setSearchQuery } = useDepartmentContext();\n\n\treturn (\n\t\t<div className=\"group-sidebar__search relative\">\n\t\t\t<input\n\t\t\t\ttype=\"search\"\n\t\t\t\tvalue={searchQuery}\n\t\t\t\tclassName={\n\t\t\t\t\t'group-sidebar__search-input w-full border-b outline-none md:w-36 ' +\n\t\t\t\t\t'border-kgrey-border-solid dark:border-white dark:text-white' +\n\t\t\t\t\t' pl-7 transition focus:border-primary' +\n\t\t\t\t\t' placeholder-[rgba(45, 45, 45, 0.3)] pt-2 pb-2 dark:bg-kdark dark:focus:border-primary'\n\t\t\t\t}\n\t\t\t\tplaceholder={'Search'}\n\t\t\t\tonChange={(e) => setSearchQuery(e.target.value)}\n\t\t\t/>\n\t\t\t<div className=\"absolute top-1/2 left-0 -translate-y-1/2\">\n\t\t\t\t<div className=\"text-kgrey\">\n\t\t\t\t\t<CgSearch />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useCallback, useState } from 'react';\nimport { CreateBusinessForm } from 'shared/components';\nimport EntityForm from 'modules/entity/forms';\nimport { useAppState } from 'shared/state';\nimport DepartmentFormElements from './DepartmentFormElements';\nimport { useLoadAll, useNotistack } from 'shared/hooks';\nimport { useDepartmentContext } from '../context/DepartmentContext';\nimport get from 'lodash/get';\n\ntype Props = {\n\thandleModalOpen: any;\n\tisStaff: string;\n\tpage: number;\n\thasToShowGuard: () => void;\n\tformValuesSetter: (fieldValues: string[]) => void;\n};\n\nexport default function CreateDepartmentForm({\n\thandleModalOpen,\n\tpage,\n\tisStaff,\n\thasToShowGuard,\n\tformValuesSetter\n}: Props) {\n\tconst { companyId } = useAppState();\n\tconst closeModal = useCallback(() => handleModalOpen(null), []);\n\tconst { showNotification } = useNotistack();\n\tconst { reloadEntityAll } = useLoadAll();\n\tconst { searchQuery } = useDepartmentContext();\n\tconst [accStatusRequired, setAccStatusRequired] = useState<boolean>(false);\n\treturn (\n\t\t<div>\n\t\t\t{companyId ? (\n\t\t\t\t<EntityForm.Main\n\t\t\t\t\tentity=\"departments\"\n\t\t\t\t\tname={`AllDepartments-${companyId}`}\n\t\t\t\t\turl={`${companyId}/departments/`}\n\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\tprimaryKey=\"id\"\n\t\t\t\t\tsendAsFormData={false}\n\t\t\t\t\tnormalizeData={(data: any) => data}\n\t\t\t\t\tappendData\n\t\t\t\t\tfields={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'icon',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\tonSubmitValue: (value) => (value ? value : null)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'link',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\tonSubmitValue: (value) => (value ? value : null)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'phone',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'is_staff',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: 'true',\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// {\n\t\t\t\t\t\t// \tname: 'assign_required',\n\t\t\t\t\t\t// \trequired: false,\n\t\t\t\t\t\t// \tvalue: false,\n\t\t\t\t\t\t// \tonSubmitKey: ''\n\t\t\t\t\t\t// },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'case_escalation_time',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\tonSubmitValue: (value) => (value ? parseInt(value) : null)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'case_escalation_time_unit',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: { label: 'minutes', value: 'MINUTES' },\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\tonSubmitValue: (value) => value.value,\n\t\t\t\t\t\t\ttype: 'object'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'initial_response_time',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'initial_response_time_unit',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: { label: 'minutes', value: 'MINUTES' },\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\tonSubmitValue: (value) => value.value,\n\t\t\t\t\t\t\ttype: 'object'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'auto_case_create',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: false,\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'acc_status',\n\t\t\t\t\t\t\tonSubmitValue: (value) => get(value, 'id'),\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\trequired: accStatusRequired\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'acc_linked_email',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\tonSubmitValue: (value) => (value ? value : null),\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// {\n\t\t\t\t\t\t// \tname: 'default_assignees',\n\t\t\t\t\t\t// \trequired: false,\n\t\t\t\t\t\t// \tonSubmitKey: '',\n\t\t\t\t\t\t// \ttype: 'object',\n\t\t\t\t\t\t// \tvalue: [],\n\t\t\t\t\t\t// \tonSubmitValue: (value) => (value?.length ? value?.map((item: any) => item.id) : [])\n\t\t\t\t\t\t// }\n\t\t\t\t\t]}\n\t\t\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\t\t\tshowNotification({ message: 'Success! ' });\n\t\t\t\t\t\tresetForm();\n\t\t\t\t\t\treloadEntityAll({\n\t\t\t\t\t\t\tentity: 'departments',\n\t\t\t\t\t\t\tname: `AllDepartments-${companyId}`,\n\t\t\t\t\t\t\turl: `/${companyId}/departments/`,\n\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\tpage: page,\n\t\t\t\t\t\t\t\tlimit: 10,\n\t\t\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\t\t\tis_staff: isStaff,\n\t\t\t\t\t\t\t\t\tsearch: searchQuery\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t}}\n\t\t\t\t\tonError={(error, resetForm): any => {\n\t\t\t\t\t\tshowNotification({ message: error?.response?.data?.message, variant: 'error' });\n\t\t\t\t\t\tresetForm();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ isSubmitting, values, setFieldValue, errors, setFieldError, resetForm }) => {\n\t\t\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\t\t\tconsole.log('value dep create', values);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<DepartmentFormElements\n\t\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\tsetFieldError={setFieldError}\n\t\t\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\tresetForm={resetForm}\n\t\t\t\t\t\t\t\tformValuesSetter={formValuesSetter}\n\t\t\t\t\t\t\t\tcloseModal={hasToShowGuard}\n\t\t\t\t\t\t\t\tsetAccStatusRequired={setAccStatusRequired}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityForm.Main>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n\nCreateBusinessForm.defaultProps = {\n\tonSuccess: () => {}\n};\n","import React, { lazy, Suspense, useCallback, useEffect, useState } from 'react';\nimport { ConfirmModal, CustomMuiTabs, ErrorBoundary, Loader } from 'shared/components';\nimport { Helmet } from 'react-helmet';\nimport { useFormGuard, usePagination, useQueryParams, useUnreadCaseTab } from 'shared/hooks';\nimport { DepartmentSearchQuery } from './components/DepartmentSearchQuery';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { DepartmentContextProvider, useDepartmentContext } from './context/DepartmentContext';\nimport { SimpleBtn, WhiteModal } from 'shared/components/Elements';\nimport CreateDepartmentForm from './components/CreateDepartmentForm';\nimport { useAppState } from '../../shared/state';\n\nconst StaffDepartment = lazy(() => import('./components/DepartmentList'));\n\nfunction a11yProps(index: number) {\n\treturn {\n\t\tid: `simple-tabpanel-${index}`,\n\t\t'aria-controls': `simple-tab-${index}`\n\t};\n}\n\ntype Props = {\n\tmatch: {\n\t\tparams: {\n\t\t\tclientType: string;\n\t\t};\n\t\turl: string;\n\t\tpath: string;\n\t};\n};\n\nfunction DepartmentsInner({ match }: Props) {\n\tconst { isPermitted, isAdmin } = useAppState();\n\tconst [primeTab, setPrimeTab] = React.useState(0);\n\tconst { url, path } = match;\n\tconst { unreadCasesQuantity, isHidden } = useUnreadCaseTab('Departments');\n\tconst { setIsStaff, isStaff } = useDepartmentContext();\n\tconst [formOpen, setFormOpen] = useState<boolean>(false);\n\tconst { page } = usePagination();\n\tconst { formValues, guardOpen, setGuardOpen, formValuesSetter } = useFormGuard();\n\tconst { query } = useQueryParams();\n\n\tconst isStaffQuery = query['is-staff'];\n\n\tconst handleModalOpen = () => setFormOpen((prev) => !prev);\n\n\tconst handleChangePrime = (\n\t\tevent: React.ChangeEvent<Record<string, unknown>>,\n\t\tnewValue: number\n\t) => {\n\t\tswitch (newValue) {\n\t\t\tcase 0: {\n\t\t\t\tsetIsStaff('true');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 1: {\n\t\t\t\tsetIsStaff('false');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tsetPrimeTab(newValue);\n\t};\n\tconst confirmToggleHandler = useCallback(() => {\n\t\tsetGuardOpen((prev: boolean) => !prev);\n\t}, []);\n\tconst confirmModalHandler = useCallback(() => {\n\t\tsetGuardOpen(false);\n\t\tformValuesSetter([]);\n\t\thandleModalOpen();\n\t}, [formOpen]);\n\n\tconst hasToShowGuard = useCallback(() => {\n\t\tif (formValues.length) {\n\t\t\tsetGuardOpen(true);\n\t\t\treturn;\n\t\t}\n\n\t\thandleModalOpen();\n\t}, [formValues]);\n\n\tconst onPopupClose = () => {\n\t\tif (formValues.length) {\n\t\t\tsetGuardOpen(true);\n\t\t\treturn;\n\t\t}\n\t\thandleModalOpen();\n\t};\n\n\tuseEffect(() => {\n\t\tif (isStaffQuery === 'true') {\n\t\t\tsetIsStaff('true');\n\t\t\tsetPrimeTab(0);\n\t\t} else {\n\t\t\tsetIsStaff('false');\n\t\t\tsetPrimeTab(1);\n\t\t}\n\t}, [isStaffQuery]);\n\n\treturn (\n\t\t<div className=\"relative flex min-h-full w-full flex-grow flex-col p-4\">\n\t\t\t{(!isHidden || unreadCasesQuantity === 0) && (\n\t\t\t\t<Helmet>\n\t\t\t\t\t<title>KENNEKT | Departments </title>\n\t\t\t\t</Helmet>\n\t\t\t)}\n\t\t\t<div className=\"mb-5\">\n\t\t\t\t<div className=\" absolute top-0 left-0 w-full bg-kred-pink-200\">\n\t\t\t\t\t{!isAdmin ? (\n\t\t\t\t\t\t<p className=\"my-1 text-center text-xs text-kred-pink\">\n\t\t\t\t\t\t\tYou do not have permission to perform some actions, please check with admin\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mt-5 flex w-full flex-wrap items-center justify-between\">\n\t\t\t\t\t<h2 className=\"mr-5 py-4 text-xl font-bold dark:text-white md:text-3xl\">Departments</h2>\n\t\t\t\t\t<div className=\"flex w-full items-center md:w-auto\">\n\t\t\t\t\t\t<DepartmentSearchQuery />\n\t\t\t\t\t\t<SimpleBtn disabled={!isPermitted} onClick={handleModalOpen}>\n\t\t\t\t\t\t\tNew department\n\t\t\t\t\t\t</SimpleBtn>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"prime-tabs\">\n\t\t\t\t<CustomMuiTabs.Tabs\n\t\t\t\t\troundedTop\n\t\t\t\t\tvalue={primeTab}\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tonChange={handleChangePrime}\n\t\t\t\t\taria-label=\"simple tabs\"\n\t\t\t\t>\n\t\t\t\t\t<CustomMuiTabs.Tab\n\t\t\t\t\t\tlabel=\"Staff departments\"\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto={`${url}?is-staff=true`}\n\t\t\t\t\t\t{...a11yProps(0)}\n\t\t\t\t\t/>\n\t\t\t\t\t<CustomMuiTabs.Tab\n\t\t\t\t\t\tlabel=\"Client departments\"\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\tto={`${url}?is-staff=false`}\n\t\t\t\t\t\t{...a11yProps(1)}\n\t\t\t\t\t/>\n\t\t\t\t</CustomMuiTabs.Tabs>\n\t\t\t</div>\n\n\t\t\t<div className=\"relative flex max-w-full flex-grow flex-col\">\n\t\t\t\t<div className=\"relative flex-grow\">\n\t\t\t\t\t<Suspense fallback={<Loader tiled />}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path={path} component={StaffDepartment} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Suspense>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<WhiteModal\n\t\t\t\tmaxWidth={466}\n\t\t\t\tminWidth={466}\n\t\t\t\thandleModalOpen={onPopupClose}\n\t\t\t\topen={Boolean(formOpen)}\n\t\t\t\tscrollable\n\t\t\t\tnoPadding\n\t\t\t>\n\t\t\t\t<CreateDepartmentForm\n\t\t\t\t\tpage={page}\n\t\t\t\t\tisStaff={isStaff}\n\t\t\t\t\thasToShowGuard={hasToShowGuard}\n\t\t\t\t\tformValuesSetter={formValuesSetter}\n\t\t\t\t\thandleModalOpen={handleModalOpen}\n\t\t\t\t/>\n\t\t\t</WhiteModal>\n\t\t\t<ConfirmModal\n\t\t\t\tfeatureHandler={confirmModalHandler}\n\t\t\t\tisOpen={guardOpen}\n\t\t\t\ttoggleHandler={confirmToggleHandler}\n\t\t\t\ttitle=\"You have unsaved changes, Are you sure to cancel?\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport function Departments(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<DepartmentContextProvider>\n\t\t\t\t<DepartmentsInner {...props} />\n\t\t\t</DepartmentContextProvider>\n\t\t</ErrorBoundary>\n\t);\n}\n","import { Departments } from './Departments';\nexport default Departments;\n"],"names":["DepartmentSearchQuery","useDepartmentContext","searchQuery","setSearchQuery","className","type","value","placeholder","onChange","e","target","CreateDepartmentForm","handleModalOpen","page","isStaff","hasToShowGuard","formValuesSetter","companyId","useAppState","closeModal","useCallback","showNotification","useNotistack","reloadEntityAll","useLoadAll","useState","accStatusRequired","setAccStatusRequired","entity","name","url","method","primaryKey","sendAsFormData","normalizeData","data","appendData","fields","required","onSubmitKey","onSubmitValue","parseInt","label","get","onSuccess","response","resetForm","message","params","limit","extra","is_staff","search","onError","error","variant","isSubmitting","values","setFieldValue","errors","setFieldError","DepartmentFormElements","CreateBusinessForm","StaffDepartment","lazy","a11yProps","index","id","DepartmentsInner","match","isPermitted","isAdmin","React","primeTab","setPrimeTab","path","useUnreadCaseTab","unreadCasesQuantity","isHidden","setIsStaff","formOpen","setFormOpen","usePagination","useFormGuard","formValues","guardOpen","setGuardOpen","isStaffQuery","useQueryParams","query","prev","confirmToggleHandler","confirmModalHandler","length","useEffect","Helmet","disabled","onClick","roundedTop","event","newValue","component","Link","to","Suspense","fallback","tiled","exact","maxWidth","minWidth","open","Boolean","scrollable","noPadding","featureHandler","isOpen","toggleHandler","title","props","DepartmentContext"],"sourceRoot":""}