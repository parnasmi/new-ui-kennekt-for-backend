{"version":3,"file":"static/js/2217.5ad55a88.chunk.js","mappings":"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","sources":["pages/Cases/components/CaseItem.tsx","pages/Payments/hooks/usePayments.ts","pages/Payments/hooks/useSubscription.ts","pages/StaffManagement/context/StaffManagementContext.tsx","pages/StaffManagement/components/StaffManagementSearchQuery.tsx","pages/StaffManagement/components/StaffReAssignItemWrapper.tsx","pages/StaffManagement/components/StaffReAssignItem.tsx","pages/StaffManagement/hooks/useStaffReAssignment.tsx","pages/StaffManagement/components/StaffReAssignStatuses.tsx","pages/StaffManagement/components/StaffReAssignCases.tsx","pages/StaffManagement/components/StaffReAssignUsers.tsx","pages/StaffManagement/components/StaffReAssignment.tsx","pages/StaffManagement/components/ReassignmentConfirmModal.tsx","pages/StaffManagement/components/RequireReAssignWarning.tsx","pages/StaffManagement/components/StaffManagementTable.tsx","pages/StaffManagement/components/CreateStaffForm.tsx","pages/StaffManagement/StaffManagement.tsx","pages/StaffManagement/index.tsx","shared/components/DataDisplay/StatusTag.tsx","shared/components/Elements/Fields/InputText.tsx","shared/services/utils/getBusinessIcon.tsx"],"sourcesContent":["import React, { useMemo, useRef } from 'react';\nimport { useAppState } from 'shared/state';\nimport { CaseItemMarkup } from './CaseItemMarkup';\nimport { Priority } from 'shared/interfaces';\nimport { EntityDraft } from '../../GroupChat/types';\nimport { ErrorBoundary } from 'shared/components';\nimport { ToggleCaseDetailsOpen } from './case-details/CaseDetails.types';\n// import { useQueryParams } from '../../../shared/hooks';\n\ntype CompanyType = {\n\tid: number;\n\tname: string;\n};\n\nexport type CaseType = {\n\tid: number;\n\ttitle: any;\n\tcase_number: string;\n\tbusiness_company: CompanyType;\n\tclient_company: CompanyType;\n\tdepartment: {\n\t\tid: number;\n\t\tname: string;\n\t\ticon: {\n\t\t\tthumbnail: string | null;\n\t\t\tthumbnail_150: string | null;\n\t\t};\n\t};\n\ttext?: string;\n\tsub_department: {\n\t\tid: number;\n\t\tname: string;\n\t\ticon: {\n\t\t\tthumbnail: string | null;\n\t\t\tthumbnail_150: string | null;\n\t\t};\n\t};\n\tstatus: {\n\t\tid: number;\n\t\ttitle: string;\n\t};\n\tlast_message_type: string | null;\n\tlast_message_text: string;\n\tlast_message_author: {\n\t\tfirst_name: string;\n\t\tlast_name: string;\n\t};\n\tlast_message_time: any;\n\tpriority: Priority;\n\tpin_time: null | string;\n\tdraft_message: EntityDraft;\n\tassignee_ids: null | number[];\n\thas_linked_case: boolean;\n\trelated_to_id: boolean;\n\trecurring_id: number;\n\tlast_read_message: number | null;\n};\n\ntype Props = {\n\tcaseData: CaseType;\n\tisFetched: boolean;\n\tisDragging?: boolean;\n\ttoggleCaseDetailsOpen: ToggleCaseDetailsOpen;\n};\n\nconst CaseItemInner = (props: Props) => {\n\tconst { caseData, isDragging, toggleCaseDetailsOpen /*, isFetched */ } = props;\n\tconst caseRef = useRef<HTMLDivElement>(null);\n\n\tconst { unreadMessagesCount /*, searchQuery, caseType*/ } = useAppState();\n\t// const { query } = useQueryParams<{ case: string; status: string; searchedMessageId?: string }>();\n\n\tconst department = caseData.department,\n\t\tsub_department = caseData.sub_department,\n\t\tcaseTitle = caseData.title,\n\t\tlast_message_type = caseData.last_message_type,\n\t\tlast_message_text = caseData.last_message_text,\n\t\tlast_message_author = caseData.last_message_author,\n\t\tcase_number = caseData.case_number,\n\t\tlast_message_time = caseData.last_message_time,\n\t\tcaseId = caseData.id,\n\t\tstatusId = caseData?.status?.id,\n\t\tpriority = caseData.priority,\n\t\tdraftMessage = caseData.draft_message,\n\t\thasLinkedCase = caseData.has_linked_case,\n\t\trelatedTo = caseData.related_to_id,\n\t\trecurringId = caseData.recurring_id,\n\t\tlastReadMessage = caseData.last_read_message,\n\t\tassigneeIds = caseData.assignee_ids;\n\n\tconst hasUnread = useMemo(() => unreadMessagesCount?.[caseId], [caseId, unreadMessagesCount]);\n\n\t// const isActive = Number(query.case) === caseId;\n\n\t// useEffect(() => {\n\t// \tif (isActive && isFetched) {\n\t// \t\tcaseRef?.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n\t// \t}\n\t// }, [query, statusId]);\n\n\treturn (\n\t\t<div ref={caseRef} className={`case-${caseId} h-full`}>\n\t\t\t<CaseItemMarkup\n\t\t\t\tcase_number={case_number}\n\t\t\t\tcaseTitle={caseTitle}\n\t\t\t\tdepartment={department}\n\t\t\t\tsub_department={sub_department}\n\t\t\t\tlast_message_author={last_message_author}\n\t\t\t\tlast_message_time={last_message_time}\n\t\t\t\tlast_message_type={last_message_type}\n\t\t\t\tlast_message_text={last_message_text}\n\t\t\t\thasUnread={hasUnread}\n\t\t\t\tcaseId={caseId}\n\t\t\t\tstatusId={statusId}\n\t\t\t\tpin_time={caseData.pin_time}\n\t\t\t\tpriority={priority}\n\t\t\t\tdraftMessage={draftMessage}\n\t\t\t\tassigneeIds={assigneeIds}\n\t\t\t\tisDragging={isDragging}\n\t\t\t\ttoggleCaseDetailsOpen={toggleCaseDetailsOpen}\n\t\t\t\thasLinkedCase={hasLinkedCase}\n\t\t\t\trelatedTo={relatedTo}\n\t\t\t\trecurringId={recurringId}\n\t\t\t\tlastReadMessage={lastReadMessage}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport function CaseItem(props: Props) {\n\treturn (\n\t\t<ErrorBoundary isCompact>\n\t\t\t<CaseItemInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React, { useEffect } from 'react';\nimport { useRouter, useUnreadCaseTab } from 'shared/hooks';\n\nexport function usePayments() {\n\tconst [primeTab, setPrimeTab] = React.useState(0);\n\tconst [pageName, setPageName] = React.useState('Billing');\n\n\tconst { location, match } = useRouter();\n\tconst { url, path } = match;\n\tconst { unreadCasesQuantity, isHidden } = useUnreadCaseTab('Billing');\n\n\tconst handleChangePrime = (\n\t\tevent: React.ChangeEvent<Record<string, unknown>>,\n\t\tnewValue: number\n\t) => {\n\t\tsetPrimeTab(newValue);\n\t};\n\n\t//Just to setup tab active tab indication\n\tuseEffect(() => {\n\t\tconst locationSplitterArray = location.pathname.split('/').filter(Boolean).filter(String);\n\t\tconst nestedPageType = locationSplitterArray[locationSplitterArray.length - 1] || '';\n\n\t\t(() => {\n\t\t\tswitch (nestedPageType) {\n\t\t\t\tcase 'billing': {\n\t\t\t\t\tsetPrimeTab(0);\n\t\t\t\t\tsetPageName('Billing');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'invoice': {\n\t\t\t\t\tsetPrimeTab(1);\n\t\t\t\t\tsetPageName('Invoice');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t})();\n\t}, [location]);\n\n\treturn {\n\t\tprimeTab,\n\t\tpageName,\n\t\turl,\n\t\tpath,\n\t\tunreadCasesQuantity,\n\t\tsetPrimeTab,\n\t\tisHidden,\n\t\thandleChangePrime\n\t};\n}\n","import { useAppState } from '../../../shared/state';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\nimport { useAxios, useNotistack, useRouter } from '../../../shared/hooks';\nimport { useCallback, useEffect, useState } from 'react';\nimport { CompSubscriptionType } from '../../../modules/user/reducers';\nimport { useTranslation } from 'react-i18next';\n\nexport function useSubscription() {\n\tconst { companyId } = useAppState();\n\tconst { companies } = useAuth();\n\tconst { history } = useRouter();\n\tconst [cancelLoading, setCancelLoading] = useState(false);\n\tconst [cancelSubscription, setCancelSubscription] = useState(false);\n\tconst { showNotification } = useNotistack();\n\tconst [hasUserAlreadyPaidInvoice, setUserAlreadyPaidInvoice] = useState(false);\n\tconst { t } = useTranslation();\n\n\tconst [subscription, setSubscription] = useState<CompSubscriptionType | null>(null);\n\n\tconst { fetchData: cancelSubscriptionRequest } = useAxios({\n\t\turl: `/${companyId}/payment/${companyId}/cancel-subscription/`,\n\t\tmethod: 'put',\n\t\tcb: {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tsuccess: () => {\n\t\t\t\tshowNotification({ message: 'Your subscription has been cancelled', variant: 'success' });\n\t\t\t\tsetCancelLoading(false);\n\t\t\t\tsetCancelSubscription(false);\n\t\t\t},\n\t\t\terror: (error, additionalArgs) => {\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: error?.response?.data?.message || t('something_went_wrong'),\n\t\t\t\t\tvariant: 'error'\n\t\t\t\t});\n\t\t\t\tsetCancelLoading(false);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst { fetchData: firstPayRequest } = useAxios({\n\t\turl: `/payment/${companyId}/invoices/?page_size=10`,\n\t\tcb: {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tsuccess: (data) => {\n\t\t\t\tif (data?.results?.length) {\n\t\t\t\t\tsetUserAlreadyPaidInvoice(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: (error, additionalArgs) => {}\n\t\t}\n\t});\n\n\t//set subscription object\n\tuseEffect(() => {\n\t\tfirstPayRequest();\n\t\tif (companyId && companies.length) {\n\t\t\tconst currentCompany = companies.find((com) => com.company.id === companyId);\n\t\t\tconst currentSubscription = currentCompany?.company.comp_subscription as CompSubscriptionType;\n\n\t\t\tif (currentSubscription) {\n\t\t\t\tsetSubscription(currentSubscription);\n\t\t\t}\n\t\t}\n\t}, [companies, companyId]);\n\n\tconst handleCancelRequest = useCallback(async () => {\n\t\tsetCancelLoading(true);\n\t\tawait cancelSubscriptionRequest();\n\t}, []);\n\n\tconst navigateToCheckout = useCallback(() => history.push('/checkout'), []);\n\n\treturn {\n\t\tnavigateToCheckout,\n\t\tsubscription,\n\t\thandleCancelRequest,\n\t\tsetCancelSubscription,\n\t\tcancelSubscription,\n\t\tcancelLoading,\n\t\thasUserAlreadyPaidInvoice\n\t};\n}\n","import React, { createContext, useReducer, useContext, useCallback } from 'react';\n\ntype ContextType = {\n\tsearchQuery: string;\n\tsetSearchQuery: (query: string) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const StaffManagementContext = createContext<ContextType>(null!);\ntype SetSearchQuery = {\n\ttype: 'SET_SEARCH_QUERY';\n\tpayload: string;\n};\n\ntype StateType = {\n\tsearchQuery: string;\n};\n\ntype Actions = SetSearchQuery;\n\nconst reducer = (state: StateType, action: Actions): StateType => {\n\tswitch (action.type) {\n\t\tcase 'SET_SEARCH_QUERY': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchQuery: action.payload\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport function StaffManagementContextProvider({\n\tchildren\n}: React.PropsWithChildren<Record<string, unknown>>) {\n\tconst [state, dispatch] = useReducer(reducer, { searchQuery: '' });\n\n\tconst setSearchQuery = useCallback((query: string) => {\n\t\tdispatch({ type: 'SET_SEARCH_QUERY', payload: query });\n\t}, []);\n\n\t// eslint-disable-next-line react/jsx-no-constructed-context-values\n\tconst contextValues = {\n\t\tsearchQuery: state.searchQuery,\n\t\tsetSearchQuery\n\t} as ContextType;\n\n\treturn (\n\t\t<StaffManagementContext.Provider value={contextValues}>\n\t\t\t{children}\n\t\t</StaffManagementContext.Provider>\n\t);\n}\n\nexport const useStaffManagement = () => {\n\tconst staffContext = useContext(StaffManagementContext);\n\n\tif (!staffContext)\n\t\tthrow new Error('useBusinessContext must be used within the BusinessContextProvider');\n\treturn staffContext;\n};\n","import React from 'react';\nimport { CgSearch } from 'react-icons/cg';\nimport { useStaffManagement } from '../context/StaffManagementContext';\nimport { useTranslation } from 'react-i18next';\n\nexport function StaffManagementSearchQuery() {\n\tconst { searchQuery, setSearchQuery } = useStaffManagement();\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<div className=\"group-sidebar__search relative\">\n\t\t\t<input\n\t\t\t\ttype=\"search\"\n\t\t\t\tvalue={searchQuery}\n\t\t\t\tclassName={\n\t\t\t\t\t'group-sidebar__search-input w-full border-b outline-none md:w-36 ' +\n\t\t\t\t\t'border-kgrey-border-solid dark:border-white dark:text-white' +\n\t\t\t\t\t' pl-7 transition focus:border-primary dark:focus:border-primary' +\n\t\t\t\t\t' placeholder-[rgba(45, 45, 45, 0.3)] pt-2 pb-2 dark:bg-kdark'\n\t\t\t\t}\n\t\t\t\tplaceholder={t('search_for_staff')}\n\t\t\t\tonChange={(e) => setSearchQuery(e.target.value)}\n\t\t\t/>\n\t\t\t<div className=\"absolute top-1/2 left-0 -translate-y-1/2\">\n\t\t\t\t<div className=\"text-kgrey\">\n\t\t\t\t\t<CgSearch />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { Checkbox, FormControlLabel } from 'shared/components/Elements';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { ChangeEvent } from 'react';\nimport { useGetEntity } from 'shared/hooks';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\ttitle: string;\n\textra?: React.ReactNode;\n\tchildren: React.ReactNode;\n\tscrollWrapperHeight?: number | string;\n\tonToggleSelectAll?: (e: ChangeEvent<HTMLInputElement>) => void;\n\tselectAllChecked?: boolean;\n\tselectedItemCount: number;\n\tentityName: string;\n};\nexport function StaffReAssignItemWrapper({\n\ttitle,\n\textra,\n\tchildren,\n\tscrollWrapperHeight,\n\tonToggleSelectAll,\n\tselectAllChecked,\n\tselectedItemCount,\n\tentityName\n}: Props) {\n\tconst {\n\t\tall: { meta = { count: 0 } }\n\t} = useGetEntity({\n\t\tentity: `reAssign-${entityName}`,\n\t\tentityName\n\t});\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<div className=\"staff-assign__column w-96 rounded-lg border-1px border-kgrey-light-grey-3 p-1 dark:border-kgrey-chatGrey\">\n\t\t\t<div className=\"column__header flex items-center justify-between rounded-t-2xl bg-kgrey-bg py-2 px-2.5 dark:bg-kdark-lighter\">\n\t\t\t\t<h3 className=\"column__title text-base font-semibold\">{title}</h3>\n\t\t\t\t{meta?.count > 0 ? (\n\t\t\t\t\t<span className=\"column__total-items text-kgrey\">\n\t\t\t\t\t\t{t('total')}: {meta?.count}\n\t\t\t\t\t</span>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t<div className=\"column-header__bottom flex items-center justify-between py-2 px-0.5\">\n\t\t\t\t<div className=\"column__checkbox flex-center-y\">\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t<Checkbox onChange={onToggleSelectAll} checked={selectAllChecked} color=\"primary\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel={selectAllChecked ? t('unselect_all') : t('select_all')}\n\t\t\t\t\t\tname=\"select_all\"\n\t\t\t\t\t\tclasses={{ label: '!text-kgrey' }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{selectedItemCount ? (\n\t\t\t\t\t<div className=\"column__selected-items text-kgrey\">\n\t\t\t\t\t\t{selectedItemCount} {t('selected_lower')}\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t{extra}\n\t\t\t<Scrollbars\n\t\t\t\tautoHide\n\t\t\t\tclassName=\"rct-scroll\"\n\t\t\t\tstyle={{ height: scrollWrapperHeight ? scrollWrapperHeight : '20rem' }}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Scrollbars>\n\t\t</div>\n\t);\n}\n","import { AvatarSized, Checkbox, FormControlLabel } from 'shared/components/Elements';\nimport { ChangeEvent } from 'react';\nimport { useTranslationHelpers } from 'shared/hooks/useTranslationHelpers';\nimport clsx from 'clsx';\n\ntype Props = {\n\tavatarUrl?: string;\n\ttitle?: string;\n\tonToggleChecked: (e: ChangeEvent<HTMLInputElement>) => void;\n\tchecked: boolean;\n\tchildren?: React.ReactNode;\n\tdisabled?: boolean;\n};\nexport function StaffReAssignItem({\n\tavatarUrl,\n\ttitle,\n\tonToggleChecked,\n\tchecked,\n\tchildren,\n\tdisabled\n}: Props) {\n\tconst { isRTL } = useTranslationHelpers();\n\treturn (\n\t\t<div className=\"staff-assign__item relative my-1.5 rounded-lg bg-kgrey-bg py-2.5 px-2.5 dark:bg-kdark-lighter\">\n\t\t\t{!children ? (\n\t\t\t\t<div className=\"flex-center-y gap-x-2\">\n\t\t\t\t\t{avatarUrl ? <AvatarSized src={avatarUrl} size={36} /> : null}\n\n\t\t\t\t\t<h3 className=\"w-11/12 break-all dark:text-kgrey-d8d8d8\">{title}</h3>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\tchildren\n\t\t\t)}\n\n\t\t\t<FormControlLabel\n\t\t\t\tdisabled={disabled}\n\t\t\t\tclasses={{ root: '!mr-0' }}\n\t\t\t\tclassName={clsx('absolute top-0', { 'right-0': !isRTL, 'left-1': isRTL })}\n\t\t\t\tcontrol={<Checkbox onChange={onToggleChecked} checked={checked} color=\"primary\" />}\n\t\t\t\tlabel={null}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport {\n\tReAssignmentItemName,\n\tReAssignmentItemNameUnionType\n} from '../components/StaffReAssignment';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'store/root.state';\nimport { useAxios, useGetEntity, useLoadAll, useNotistack } from 'shared/hooks';\nimport { StatusType } from '../../Cases/components/Status';\nimport { useAppState } from 'shared/state';\nimport { StaffManagementItemRequest } from 'shared/typings/staffManagement.types';\n\nexport type ReAssignmentStateType = {\n\t[name in ReAssignmentItemName]: number[];\n};\n\ntype SelectAllType = {\n\t[name in ReAssignmentItemName]: boolean;\n};\n\nexport function useStaffReAssignment(staff: Partial<StaffManagementItemRequest>) {\n\tconst entityInState = useSelector((state: RootState) => state?.entity);\n\tconst { companyId } = useAppState();\n\tconst { showNotification } = useNotistack();\n\tconst { reloadEntityAll } = useLoadAll();\n\n\tconst [staffSearchValue, setStaffSearchValue] = useState('');\n\tconst [reAssignmentState, setReAssignmentState] = useState<ReAssignmentStateType>({\n\t\t[ReAssignmentItemName.CASES]: [],\n\t\t[ReAssignmentItemName.STATUSES]: [],\n\t\t[ReAssignmentItemName.STAFF]: []\n\t});\n\tconst [selectAll, setSelectAll] = useState<SelectAllType>({\n\t\t[ReAssignmentItemName.CASES]: false,\n\t\t[ReAssignmentItemName.STATUSES]: false,\n\t\t[ReAssignmentItemName.STAFF]: false\n\t});\n\n\tconst { fetchData: reAssignStaffCases, loading: reAssignStaffCaseLoading } = useAxios({\n\t\turl: `/v2/${companyId}/cases/staff-cases/reassign/`,\n\t\tmethod: 'post',\n\t\tvalues: {\n\t\t\tprevious_assignee: staff?.id,\n\t\t\tassignee_ids: reAssignmentState[ReAssignmentItemName.STAFF],\n\t\t\tcase_ids: reAssignmentState[ReAssignmentItemName.CASES]\n\t\t},\n\t\tcb: {\n\t\t\tsuccess: (data) => {\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: 'Successfully reassigned!'\n\t\t\t\t});\n\n\t\t\t\tsetReAssignmentState((prev) => ({\n\t\t\t\t\t...prev,\n\t\t\t\t\t[ReAssignmentItemName.CASES]: [],\n\t\t\t\t\t[ReAssignmentItemName.STAFF]: []\n\t\t\t\t}));\n\n\t\t\t\t//re fetching previous staff cases\n\t\t\t\treloadEntityAll({\n\t\t\t\t\tentity: 'reAssign-cases',\n\t\t\t\t\tname: 'cases',\n\t\t\t\t\turl: `/${companyId}/cases/filter/`,\n\t\t\t\t\tparams: {\n\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\tassignee: staff?.id,\n\t\t\t\t\t\t\tall_cases: 'true',\n\t\t\t\t\t\t\tstatus: reAssignmentState[ReAssignmentItemName.STATUSES]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\treplaceIds: true\n\t\t\t\t});\n\n\t\t\t\t//re-fetching statuses\n\t\t\t\treloadEntityAll({\n\t\t\t\t\tentity: 'reAssign-statuses',\n\t\t\t\t\tname: `statuses`,\n\t\t\t\t\turl: `/v2/${companyId}/cases/staff-cases/`,\n\t\t\t\t\tparams: {\n\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\tassignee: staff?.id\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdataKey: (data: any) => data,\n\t\t\t\t\treplaceIds: true,\n\t\t\t\t\tcb: {\n\t\t\t\t\t\tsuccess: (data) => {\n\t\t\t\t\t\t\tsetReAssignmentState((prev) => ({\n\t\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\t\t[ReAssignmentItemName.STATUSES]: prev.STATUSES.filter((selectedStatusId) =>\n\t\t\t\t\t\t\t\t\tdata?.find((status: StatusType) => status?.id === selectedStatusId)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\terror: (error) => {\n\t\t\t\tconsole.log(error, 'reAssignStaffCases error');\n\t\t\t}\n\t\t}\n\t});\n\n\t//Is fired when reassign button clicked\n\tasync function handleReAssignment() {\n\t\tawait reAssignStaffCases();\n\t}\n\n\tconst { all: reAssigningCases } = useGetEntity({\n\t\tentity: 'reAssign-cases',\n\t\tentityName: 'cases'\n\t});\n\n\tfunction getEntityIds(name: ReAssignmentItemNameUnionType) {\n\t\tconst entityName = name.toLowerCase();\n\t\treturn entityInState?.[`reAssign-${entityName}`]?.[entityName].ids ?? [];\n\t}\n\n\tconst isItemChecked = useCallback(\n\t\t(id: number, name: ReAssignmentItemNameUnionType) => {\n\t\t\treturn reAssignmentState[name].includes(id);\n\t\t},\n\t\t[reAssignmentState]\n\t);\n\n\t//toggle column item checked/unchecked function\n\tconst handleToggleItemChecked = useCallback(\n\t\t(id: number, name: ReAssignmentItemNameUnionType) => (event: ChangeEvent<HTMLInputElement>) => {\n\t\t\tconst isItemChecked = event.target?.checked;\n\n\t\t\tif (isItemChecked) {\n\t\t\t\tsetReAssignmentState((prevState) => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\t[name]: [...prevState[name], id]\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tsetReAssignmentState((prevState) => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\t[name]: [...prevState[name]].filter((prevId) => prevId !== id)\n\t\t\t\t}));\n\t\t\t}\n\t\t},\n\t\t[reAssignmentState, getEntityIds]\n\t);\n\n\t//toggle select all/unselect all function\n\tconst handleToggleSelectAll = useCallback(\n\t\t(name: ReAssignmentItemNameUnionType) => (e: ChangeEvent<HTMLInputElement>) => {\n\t\t\tconst allEntityIds = getEntityIds(name);\n\t\t\tsetReAssignmentState((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\t[name]: e.target.checked ? allEntityIds : []\n\t\t\t}));\n\t\t\tsetSelectAll((prev) => ({ ...prev, [name]: e.target.checked }));\n\t\t},\n\t\t[getEntityIds]\n\t);\n\n\t//staff search value onchange\n\tconst handleStaffSearchValueChanged = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetStaffSearchValue(e?.target?.value);\n\t}, []);\n\n\t//select all/unselect all\n\t//use-case 1: even if only item is being checked and that was last unchecked one in the list, select all  should be checked\n\t//use-case 2: if item is being unchecked and that was first unchecked one in the all checked list, unselect all should be unchecked\n\tuseEffect(() => {\n\t\t// Function to check if all items in a category are selected\n\t\tconst checkIfAllSelected = (name: ReAssignmentItemNameUnionType) => {\n\t\t\tconst totalItems = getEntityIds(name).length;\n\t\t\tif (totalItems === 0) return false;\n\n\t\t\treturn reAssignmentState[name].length === totalItems;\n\t\t};\n\n\t\t// Update the selectAll state based on individual selections\n\t\tconst newSelectAll = { ...selectAll };\n\t\tObject.keys(ReAssignmentItemName).forEach((name) => {\n\t\t\tnewSelectAll[name as ReAssignmentItemNameUnionType] = checkIfAllSelected(\n\t\t\t\tname as ReAssignmentItemNameUnionType\n\t\t\t);\n\t\t});\n\n\t\tsetSelectAll(newSelectAll);\n\t}, [reAssignmentState]);\n\n\treturn {\n\t\thandleStaffSearchValueChanged,\n\t\thandleToggleSelectAll,\n\t\thandleToggleItemChecked,\n\t\tisItemChecked,\n\t\treAssignmentState,\n\t\tstaffSearchValue,\n\t\tselectAll,\n\t\tsetReAssignmentState,\n\t\tisCasesFetched: reAssigningCases?.isFetched,\n\t\thandleReAssignment,\n\t\treAssignStaffCaseLoading\n\t};\n}\n","import { useAppState } from 'shared/state';\nimport EntityContainer from 'modules/entity/containers';\nimport { StaffReAssignItem } from './StaffReAssignItem';\nimport React, { ChangeEvent } from 'react';\nimport { ReAssignmentItemName, ReAssignmentItemNameUnionType } from './StaffReAssignment';\nimport { Loader } from 'shared/components';\nimport { useStaffReAssignment } from '../hooks/useStaffReAssignment';\n\ntype Props = {\n\tstaffId: number;\n\thandleToggleItemChecked: (\n\t\tid: number,\n\t\tname: ReAssignmentItemNameUnionType\n\t) => (e: ChangeEvent<HTMLInputElement>) => void;\n\tisItemChecked: (id: number, name: ReAssignmentItemNameUnionType) => boolean;\n};\nexport function StaffReAssignStatuses({ staffId, handleToggleItemChecked, isItemChecked }: Props) {\n\tconst { companyId } = useAppState();\n\tconst { isCasesFetched } = useStaffReAssignment({ id: staffId });\n\n\treturn staffId ? (\n\t\t<EntityContainer.All\n\t\t\tentity=\"reAssign-statuses\"\n\t\t\tname={`statuses`}\n\t\t\turl={`/v2/${companyId}/cases/staff-cases/`}\n\t\t\tparams={{\n\t\t\t\textra: {\n\t\t\t\t\tassignee: staffId\n\t\t\t\t},\n\t\t\t\tlimit: 10\n\t\t\t}}\n\t\t\tdataKey={(data: any) => data}\n\t\t\tappendData\n\t\t\treplaceIds\n\t\t>\n\t\t\t{({ items, meta, isFetched }) => {\n\t\t\t\tconst statuses = items as { id: number; name: string }[];\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{statuses.map((status) => (\n\t\t\t\t\t\t\t<StaffReAssignItem\n\t\t\t\t\t\t\t\tdisabled={!isCasesFetched}\n\t\t\t\t\t\t\t\tonToggleChecked={handleToggleItemChecked(status?.id, ReAssignmentItemName.STATUSES)}\n\t\t\t\t\t\t\t\tchecked={isItemChecked(status?.id, ReAssignmentItemName.STATUSES)}\n\t\t\t\t\t\t\t\tkey={status?.id}\n\t\t\t\t\t\t\t\ttitle={status?.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{!isFetched ? (\n\t\t\t\t\t\t\t<div className=\"case-chat-loader flex items-center justify-center\">\n\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityContainer.All>\n\t) : null;\n}\n","import EntityContainer from 'modules/entity/containers';\nimport { CaseItem, CaseType } from '../../Cases/components/CaseItem';\nimport { StaffReAssignItem } from './StaffReAssignItem';\nimport { ReAssignmentItemName, ReAssignmentItemNameUnionType } from './StaffReAssignment';\nimport { useAppState } from 'shared/state';\nimport React, { ChangeEvent, Dispatch, SetStateAction } from 'react';\nimport { Loader } from 'shared/components';\nimport { ReAssignmentStateType } from '../hooks/useStaffReAssignment';\n\ntype Props = {\n\tstaffId: number;\n\thandleToggleItemChecked: (\n\t\tid: number,\n\t\tname: ReAssignmentItemNameUnionType\n\t) => (e: ChangeEvent<HTMLInputElement>) => void;\n\tisItemChecked: (id: number, name: ReAssignmentItemNameUnionType) => boolean;\n\tselectedStatusIds: number[];\n\tsetReAssignmentState: Dispatch<SetStateAction<ReAssignmentStateType>>;\n};\n\nexport function StaffReAssignCases({\n\tstaffId,\n\thandleToggleItemChecked,\n\tisItemChecked,\n\tselectedStatusIds,\n\tsetReAssignmentState\n}: Props) {\n\tconst { companyId } = useAppState();\n\n\treturn staffId ? (\n\t\t<EntityContainer.All\n\t\t\tentity=\"reAssign-cases\"\n\t\t\tname=\"cases\"\n\t\t\turl={`/${companyId}/cases/filter/`}\n\t\t\tparams={{\n\t\t\t\textra: {\n\t\t\t\t\tassignee: staffId,\n\t\t\t\t\tall_cases: 'true',\n\t\t\t\t\t...(selectedStatusIds.length && { status: selectedStatusIds })\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonInit={(data) => {\n\t\t\t\tif (selectedStatusIds?.length) {\n\t\t\t\t\tsetReAssignmentState((prevState) => ({\n\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t[ReAssignmentItemName.CASES]: []\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}}\n\t\t\tappendData\n\t\t\treplaceIds\n\t\t>\n\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\tconst staffAssignedCasesList = items as CaseType[];\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{!isFetched ? (\n\t\t\t\t\t\t\t<div className=\"case-chat-loader flex items-center justify-center\">\n\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{staffAssignedCasesList.map((caseItem) => (\n\t\t\t\t\t\t\t<StaffReAssignItem\n\t\t\t\t\t\t\t\tkey={caseItem?.id}\n\t\t\t\t\t\t\t\tonToggleChecked={handleToggleItemChecked(caseItem?.id, ReAssignmentItemName.CASES)}\n\t\t\t\t\t\t\t\tchecked={isItemChecked(caseItem?.id, ReAssignmentItemName.CASES)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"h-40\">\n\t\t\t\t\t\t\t\t\t<CaseItem\n\t\t\t\t\t\t\t\t\t\tcaseData={caseItem}\n\t\t\t\t\t\t\t\t\t\tisFetched={isFetched}\n\t\t\t\t\t\t\t\t\t\ttoggleCaseDetailsOpen={() => {}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</StaffReAssignItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityContainer.All>\n\t) : null;\n}\n","import { StaffReAssignItem } from './StaffReAssignItem';\nimport EntityContainer from 'modules/entity/containers';\nimport { ReAssignmentItemName, ReAssignmentItemNameUnionType } from './StaffReAssignment';\nimport { useAppState } from 'shared/state';\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport { Loader, LoadMoreVisible } from 'shared/components';\n\ntype Props = {\n\tstaffSearchValue: string;\n\tstaffId: number;\n\thandleToggleItemChecked: (\n\t\tid: number,\n\t\tname: ReAssignmentItemNameUnionType\n\t) => (e: ChangeEvent<HTMLInputElement>) => void;\n\tisItemChecked: (id: number, name: ReAssignmentItemNameUnionType) => boolean;\n};\n\nexport function StaffReAssignUsers({\n\tstaffSearchValue,\n\thandleToggleItemChecked,\n\tisItemChecked,\n\tstaffId\n}: Props) {\n\tconst { companyId } = useAppState();\n\tconst [page, setPage] = useState(1);\n\n\tuseEffect(() => {\n\t\tif (staffSearchValue.length) {\n\t\t\tsetPage(1);\n\t\t}\n\t}, [staffSearchValue]);\n\n\treturn (\n\t\t<EntityContainer.All\n\t\t\tentity=\"reAssign-staff\"\n\t\t\tname=\"staff\"\n\t\t\turl={`/${companyId}/employee/`}\n\t\t\tparams={{\n\t\t\t\textra: {\n\t\t\t\t\tsearch: staffSearchValue,\n\t\t\t\t\texclude_ids: staffId,\n\t\t\t\t\twith_pending: 'false'\n\t\t\t\t},\n\t\t\t\tpage: page,\n\t\t\t\tlimit: 10\n\t\t\t}}\n\t\t\tappendData\n\t\t>\n\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\tconst companyStaffList = items as {\n\t\t\t\t\tid: number;\n\t\t\t\t\tfirst_name: string;\n\t\t\t\t\tlast_name: string;\n\t\t\t\t\tavatar: any;\n\t\t\t\t}[];\n\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{companyStaffList.map((staff) => (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<StaffReAssignItem\n\t\t\t\t\t\t\t\t\tonToggleChecked={handleToggleItemChecked(staff?.id, ReAssignmentItemName.STAFF)}\n\t\t\t\t\t\t\t\t\tchecked={isItemChecked(staff?.id, ReAssignmentItemName.STAFF)}\n\t\t\t\t\t\t\t\t\tkey={staff?.id}\n\t\t\t\t\t\t\t\t\ttitle={`${staff?.first_name} ${staff?.last_name}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{isFetched &&\n\t\t\t\t\t\tmeta?.current_page &&\n\t\t\t\t\t\tmeta?.last_page &&\n\t\t\t\t\t\tmeta?.current_page < meta?.last_page ? (\n\t\t\t\t\t\t\t<LoadMoreVisible setPage={() => setPage((prev) => prev + 1)} />\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{!isFetched ? (\n\t\t\t\t\t\t\t<div className=\"case-chat-loader flex items-center justify-center\">\n\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityContainer.All>\n\t);\n}\n","import { Button, WhiteModal } from 'shared/components/Elements';\nimport InputText from 'shared/components/Elements/Fields/InputText';\nimport { StaffReAssignItemWrapper } from './StaffReAssignItemWrapper';\nimport { useWhiteModal } from 'shared/hooks';\nimport Loader from 'shared/components/Loader';\nimport { StaffReAssignStatuses } from './StaffReAssignStatuses';\nimport { StaffReAssignCases } from './StaffReAssignCases';\nimport { StaffReAssignUsers } from './StaffReAssignUsers';\nimport { StaffReAssignmentActionType } from './StaffManagementTable';\nimport { useStaffReAssignment } from '../hooks/useStaffReAssignment';\nimport { useTranslation } from 'react-i18next';\nimport { PiWarningBold } from 'react-icons/pi';\nimport React, { useCallback } from 'react';\nimport { ReassignmentConfirmationModal } from './ReassignmentConfirmModal';\nimport { StaffManagementItemRequest } from 'shared/typings/staffManagement.types';\n\ntype Props = {\n\tstaff: StaffManagementItemRequest;\n\tonCloseReAssignmentModal: () => void;\n\tactionType: StaffReAssignmentActionType;\n\tonOpenDeleteStaffConfirmModal: (entity: any) => void;\n};\n\nexport enum ReAssignmentItemName {\n\tSTATUSES = 'STATUSES',\n\tCASES = 'CASES',\n\tSTAFF = 'STAFF'\n}\n\nexport type ReAssignmentItemNameUnionType = keyof typeof ReAssignmentItemName;\n\nexport function StaffReAssignment({\n\tstaff,\n\tonCloseReAssignmentModal,\n\tactionType,\n\tonOpenDeleteStaffConfirmModal\n}: Props) {\n\tconst { t } = useTranslation();\n\tconst {\n\t\treAssignmentState,\n\t\tstaffSearchValue,\n\t\thandleStaffSearchValueChanged,\n\t\thandleToggleSelectAll,\n\t\thandleToggleItemChecked,\n\t\tisItemChecked,\n\t\tselectAll,\n\t\tsetReAssignmentState,\n\t\treAssignStaffCaseLoading,\n\t\thandleReAssignment\n\t} = useStaffReAssignment(staff);\n\n\tconst { open: openConfirmReassignment, modalHandler: toggleOpenConfirmReassignment } =\n\t\tuseWhiteModal();\n\n\tconst isReAssignButtonDisabled =\n\t\treAssignStaffCaseLoading || !reAssignmentState.CASES.length || !reAssignmentState.STAFF.length;\n\n\tconst handleReassignConfirmationCloseClicked = useCallback(() => {\n\t\tonOpenDeleteStaffConfirmModal(staff);\n\t\tonCloseReAssignmentModal();\n\t}, [staff]);\n\n\tconst handleDeleteUserButtonClicked = useCallback(() => {\n\t\ttoggleOpenConfirmReassignment();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"staff-assign__wrapper py-2\">\n\t\t\t<div className=\"staff-assign__header flex items-center justify-between\">\n\t\t\t\t<h3 className=\"header__title text-lg font-medium\">{t('assign_cases')}</h3>\n\t\t\t\t<div className=\"header__buttons flex gap-x-2\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={onCloseReAssignmentModal}\n\t\t\t\t\t\tdisabled={reAssignStaffCaseLoading}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tclasses={{ root: '!bg-white !text-kgrey' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={handleReAssignment}\n\t\t\t\t\t\tdisabled={isReAssignButtonDisabled}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclasses={{ root: '!bg-primary-dark !text-white' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{reAssignStaffCaseLoading && <Loader tiled />} {t('reassign')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t{actionType === 'delete' ? (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tonClick={handleDeleteUserButtonClicked}\n\t\t\t\t\t\t\t//classes={{ root: '!bg-kred-red !text-white' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('delete_user')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<section className=\"staff-assign__row mt-4 flex gap-x-2\">\n\t\t\t\t<StaffReAssignItemWrapper\n\t\t\t\t\tselectAllChecked={selectAll[ReAssignmentItemName.STATUSES]}\n\t\t\t\t\tonToggleSelectAll={handleToggleSelectAll(ReAssignmentItemName.STATUSES)}\n\t\t\t\t\ttitle={t('filter_by_status')}\n\t\t\t\t\tselectedItemCount={reAssignmentState[ReAssignmentItemName.STATUSES].length}\n\t\t\t\t\tentityName=\"statuses\"\n\t\t\t\t>\n\t\t\t\t\t<StaffReAssignStatuses\n\t\t\t\t\t\tstaffId={staff?.id}\n\t\t\t\t\t\thandleToggleItemChecked={handleToggleItemChecked}\n\t\t\t\t\t\tisItemChecked={isItemChecked}\n\t\t\t\t\t/>\n\t\t\t\t</StaffReAssignItemWrapper>\n\t\t\t\t<StaffReAssignItemWrapper\n\t\t\t\t\tselectAllChecked={selectAll[ReAssignmentItemName.CASES]}\n\t\t\t\t\tonToggleSelectAll={handleToggleSelectAll(ReAssignmentItemName.CASES)}\n\t\t\t\t\ttitle={t('select_cases_to_assign')}\n\t\t\t\t\tselectedItemCount={reAssignmentState[ReAssignmentItemName.CASES].length}\n\t\t\t\t\tentityName=\"cases\"\n\t\t\t\t\tscrollWrapperHeight=\"23rem\"\n\t\t\t\t>\n\t\t\t\t\t<StaffReAssignCases\n\t\t\t\t\t\tsetReAssignmentState={setReAssignmentState}\n\t\t\t\t\t\tstaffId={staff?.id}\n\t\t\t\t\t\thandleToggleItemChecked={handleToggleItemChecked}\n\t\t\t\t\t\tisItemChecked={isItemChecked}\n\t\t\t\t\t\tselectedStatusIds={reAssignmentState[ReAssignmentItemName.STATUSES]}\n\t\t\t\t\t/>\n\t\t\t\t</StaffReAssignItemWrapper>\n\t\t\t\t<StaffReAssignItemWrapper\n\t\t\t\t\tselectAllChecked={selectAll[ReAssignmentItemName.STAFF]}\n\t\t\t\t\tonToggleSelectAll={handleToggleSelectAll(ReAssignmentItemName.STAFF)}\n\t\t\t\t\ttitle={t('reassign_to_selected_staff')}\n\t\t\t\t\tselectedItemCount={reAssignmentState[ReAssignmentItemName.STAFF].length}\n\t\t\t\t\tentityName=\"staff\"\n\t\t\t\t\textra={\n\t\t\t\t\t\t<div className=\"column__extra my-1 rounded-lg bg-kgrey-bg py-1 px-3 dark:bg-kdark-lighter\">\n\t\t\t\t\t\t\t<InputText\n\t\t\t\t\t\t\t\tonChange={handleStaffSearchValueChanged}\n\t\t\t\t\t\t\t\tclasses={{ root: 'border-none' }}\n\t\t\t\t\t\t\t\tplaceholder={t('search_user')}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<StaffReAssignUsers\n\t\t\t\t\t\tstaffId={staff?.id}\n\t\t\t\t\t\tstaffSearchValue={staffSearchValue}\n\t\t\t\t\t\thandleToggleItemChecked={handleToggleItemChecked}\n\t\t\t\t\t\tisItemChecked={isItemChecked}\n\t\t\t\t\t/>\n\t\t\t\t</StaffReAssignItemWrapper>\n\t\t\t\t<WhiteModal\n\t\t\t\t\tmaxWidth={300}\n\t\t\t\t\thandleModalOpen={toggleOpenConfirmReassignment}\n\t\t\t\t\topen={openConfirmReassignment}\n\t\t\t\t>\n\t\t\t\t\t<ReassignmentConfirmationModal\n\t\t\t\t\t\tonConfirmClicked={toggleOpenConfirmReassignment}\n\t\t\t\t\t\tonCancelClicked={handleReassignConfirmationCloseClicked}\n\t\t\t\t\t\tmodalIcon={<PiWarningBold className=\"text-amber-400\" size={60} />}\n\t\t\t\t\t\ttitle={t('attention')}\n\t\t\t\t\t\tmodalContent={t('would_like_to_reassign_cases')}\n\t\t\t\t\t/>\n\t\t\t\t</WhiteModal>\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'shared/components/Elements';\n\ntype ConfirmationModalProps = {\n\tonCancelClicked: () => void;\n\tonConfirmClicked: () => void;\n\tmodalIcon: React.ReactNode;\n\ttitle: string | React.ReactNode;\n\tmodalContent: string | React.ReactNode;\n\tconfirmBtnContent?: string;\n\tcancelBtnContent?: string;\n};\n\nexport function ReassignmentConfirmationModal(props: ConfirmationModalProps) {\n\tconst { t } = useTranslation();\n\t\n\treturn (\n\t\t<div className=\"reassignment-confirmation__wrapper flex-center-center flex-col\">\n\t\t\t<div className=\"flex-center-y mb-2.5 flex-col\">\n\t\t\t\t{props.modalIcon}\n\t\t\t\t<h3 className=\"mb-1 text-center text-lg font-medium\">{props.title}</h3>\n\t\t\t\t<p className=\"my-1.5 text-center text-base text-kgrey-menuText dark:text-kgrey-d8d8d8\">\n\t\t\t\t\t{props.modalContent}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"flex-center-x gap-x-2\">\n\t\t\t\t<Button\n\t\t\t\t\tonClick={props.onCancelClicked}\n\t\t\t\t\tcolor={props.cancelBtnContent?.includes('Delete') ? 'secondary' : 'inherit'}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\t{props.cancelBtnContent ? props.cancelBtnContent : t('no')}\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={props.onConfirmClicked}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tclasses={{ root: '!bg-primary-dark !text-white' }}\n\t\t\t\t>\n\t\t\t\t\t{props.confirmBtnContent ? props.confirmBtnContent : t('yes_reassign_cases')}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { PiWarningBold } from 'react-icons/pi';\nimport { Button } from 'shared/components/Elements';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tonConfirmReAssignRequireModal: () => void;\n};\n\nexport function RequireReAssignWarning({ onConfirmReAssignRequireModal }: Props) {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<div className=\"re-assign-required__wrapper flex-center-center flex-col\">\n\t\t\t<div className=\"flex-center-y mb-2.5 flex-col\">\n\t\t\t\t<PiWarningBold className=\"text-amber-400\" size={60} />\n\t\t\t\t<h3 className=\"mb-1 text-center text-lg font-medium\">{t('warning')}</h3>\n\t\t\t\t<p className=\"text-base text-kgrey-menuText dark:text-kgrey-d8d8d8\">\n\t\t\t\t\t{t('reassign_required_warning')}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={onConfirmReAssignRequireModal}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tclasses={{ root: '!bg-primary-dark !text-white' }}\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t>\n\t\t\t\t\t{t('reassign')}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport {\n\tActionsButtons,\n\tConfirmModal,\n\tErrorBoundary,\n\tKntButton,\n\tLoader,\n\tStyledTable,\n\tStyledTableCell,\n\tStyledTableHeadCell,\n\tStyledTableRow\n} from 'shared/components';\nimport { useAppState } from 'shared/state';\nimport EntityContainer from 'modules/entity/containers';\nimport { TableBody, TableContainer, TableHead, WhiteModal } from 'shared/components/Elements';\nimport { usePagination, useRouter } from 'shared/hooks';\nimport { useStaffManagement } from '../context/StaffManagementContext';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport { Pagination } from 'shared/components/Elements';\nimport { useDebounce } from 'use-debounce';\nimport EditStaffForm from './EditStaffForm';\nimport { useStaffManagementList } from '../hooks/useStaffManagement';\nimport { getBusinessIcon } from 'shared/services/utils/getBusinessIcon';\nimport { StaffManagementItemRequest } from 'shared/typings/staffManagement.types';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { formRequest } from 'modules/entity/actions';\nimport { useEntityActionPopup, useLoadAll, useNotistack } from 'shared/hooks';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from 'modules/auth/hooks/useAuth';\nimport { StatusTag } from 'shared/components/DataDisplay';\nimport { StaffReAssignment } from './StaffReAssignment';\nimport { RequireReAssignWarning } from './RequireReAssignWarning';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { ReassignmentConfirmationModal } from './ReassignmentConfirmModal';\nimport { PiWarningBold } from 'react-icons/pi';\nimport { useTranslationHelpers } from 'shared/hooks/useTranslationHelpers';\n\nconst NO_MOBILE_NUMBER = 'No mobile number';\n\nexport type StaffReAssignmentActionType = 're_assign' | 'delete';\n\ntype Props = {\n\tfetchStaffCount?: () => void;\n};\n\nfunction StaffManagementTableRequest({ fetchStaffCount = () => {} }: Props) {\n\tconst { t } = useTranslation();\n\tconst { isRTL } = useTranslationHelpers();\n\tconst { companyId, isAdmin } = useAppState();\n\tconst { searchQuery } = useStaffManagement();\n\tconst { company, userData } = useAuth();\n\tconst { page, handlePage } = usePagination();\n\tconst { match, history } = useRouter();\n\tconst { showNotification } = useNotistack();\n\tconst dispatch = useDispatch();\n\tconst { reloadEntityAll } = useLoadAll();\n\n\tconst isBusinessOwner = userData?.id === company?.company?.owner?.id;\n\n\tconst {\n\t\tdeleteLoading,\n\t\tcloseDeletePopup,\n\t\tdeleteVisible,\n\t\teditVisible,\n\t\tshowEditVisible,\n\t\tcloseEditPopup,\n\t\tstaffCountLoading,\n\t\treAssignModalVisible,\n\t\tcloseReAssignModalHandler,\n\t\treAssignmentActionType,\n\t\treAssignRequiredWarningVisible,\n\t\tcloseReAssignRequiredWarningVisible,\n\t\tdeleteClientHandler,\n\t\tclickReAssignmentHandler,\n\t\tclickDeleteButtonHandler,\n\t\thandleOpenDeleteConfirmation,\n\t\thandleDeletePermanentlyConfirmClicked,\n\t\topenDeleteConfirmation,\n\t\tcloseDeleteConfirmation,\n\t\thandleConfirmReAssignRequiredModal\n\t} = useStaffManagementList(fetchStaffCount);\n\n\tconst [querySearch] = useDebounce<string>(searchQuery, 500);\n\n\tconst {\n\t\tvisible: resendVisible,\n\t\tshowVisible: showResendVisible,\n\t\tloading: resendLoading,\n\t\ttoggleLoading: toggleResendLoading,\n\t\tclosePopup: closeResendPopup\n\t} = useEntityActionPopup<any>();\n\n\tconst handleResendRequest = (id: number) => {\n\t\ttoggleResendLoading();\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'staffEmployee',\n\t\t\t\tname: `staffEmployee-${companyId}`,\n\t\t\t\tmethod: 'post',\n\t\t\t\turl: `/${companyId}/employee/${id}/resend_invitation/`,\n\t\t\t\tvalues: {},\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\treloadEntityAll({\n\t\t\t\t\t\t\tentity: 'staffEmployee',\n\t\t\t\t\t\t\tname: `staffEmployee-${companyId}`,\n\t\t\t\t\t\t\turl: `/${companyId}/employee/`,\n\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\tpage: 1,\n\t\t\t\t\t\t\t\tlimit: 10\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcloseResendPopup();\n\t\t\t\t\t\tshowNotification({ message: 'Successfully resended', variant: 'success' });\n\t\t\t\t\t},\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\tshowNotification({ message: t('something_went_wrong'), variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {\n\t\t\t\t\t\ttoggleResendLoading();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id'\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleResend = () => () => handleResendRequest(resendVisible!);\n\n\treturn (\n\t\t<div>\n\t\t\t{companyId ? (\n\t\t\t\t<EntityContainer.All\n\t\t\t\t\tentity={'staffEmployee'}\n\t\t\t\t\tname={`staffEmployee-${companyId}`}\n\t\t\t\t\turl={`/${companyId}/employee/`}\n\t\t\t\t\treplaceIds\n\t\t\t\t\tparams={{\n\t\t\t\t\t\tlimit: 10,\n\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\tsearch: querySearch\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpage\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\t\t\tconst requests = items.map((item: unknown) => item) as StaffManagementItemRequest[];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<TableContainer classes={{ root: 'relative ' }}>\n\t\t\t\t\t\t\t\t\t<StyledTable\n\t\t\t\t\t\t\t\t\t\taria-label=\"simple table\"\n\t\t\t\t\t\t\t\t\t\tclasses={{ root: 'table-fixed dark-mode-styled-table' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t\t\t\t<StyledTableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '22%', textAlign: isRTL ? 'right' : 'left' }}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t('full_name')}\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '24%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t('email')}\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '24%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t('phone_number')}\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '18%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t('role')}\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '15%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t('status')}\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableHeadCell style={{ width: '24%', textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t('actions')}\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableHeadCell>\n\t\t\t\t\t\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t\t\t{requests.map((item: StaffManagementItemRequest) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfirst_name,\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast_name,\n\t\t\t\t\t\t\t\t\t\t\t\t\tusername,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmobile,\n\t\t\t\t\t\t\t\t\t\t\t\t\troles,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\t\t\t\t\tavatar,\n\t\t\t\t\t\t\t\t\t\t\t\t\tis_business_owner\n\t\t\t\t\t\t\t\t\t\t\t\t} = item;\n\t\t\t\t\t\t\t\t\t\t\t\tconst phone = mobile\n\t\t\t\t\t\t\t\t\t\t\t\t\t? mobile[0] === '+'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? mobile\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: `+${mobile}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t: NO_MOBILE_NUMBER;\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableRow key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"h-9 w-9 flex-shrink-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{getBusinessIcon(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavatar?.thumbnail || avatar?.thumbnail_150,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfirst_name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{state === 'Pending' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"truncate\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mx-2 text-sm font-medium\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{first_name} {last_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"truncate\" to={`${match.path}/view/${item.id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"mx-2 text-sm font-medium text-primary transition hover:text-primary-dark\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{first_name} {last_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdir=\"ltr\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twordBreak: 'break-all'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"test-kdark-text text-sm\">{username}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{phone ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdir=\"ltr\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx('flex items-center', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ml-10': isRTL\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<BsFillTelephoneFill color=\"#979797\" size=\"15px\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={`tel:${phone}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx('test-kdark-text mx-2 align-middle text-sm ', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'text-primary hover:text-primary-dark':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tphone !== NO_MOBILE_NUMBER,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'pointer-events-none': phone === NO_MOBILE_NUMBER\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{phone}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{roles.map((role: string, index: number) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sx text-kgrey\" key={`${index}_${role}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{' ' + t(role) + ' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{roles.length > 1 ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-kgrey\">|</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{is_business_owner ? <span>| {t('owner')}</span> : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{state === 'Pending' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<KntButton color=\"primary\" onClick={() => showResendVisible(id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('resend')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</KntButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StatusTag status={state}>{state}</StatusTag>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex w-4/5 items-center justify-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!is_business_owner && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ActionsButtons.DeleteButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisBusinessOwner ? false : is_business_owner || !isAdmin\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickHandler={clickDeleteButtonHandler(item)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* I am required to remove this action button so that i am commenting out\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tin case we may need this in the future\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ActionsButtons.ViewButton\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={!isAdmin || state === 'Pending'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickHandler={() => history.push(`${match.path}/view/${id}`)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ActionsButtons.ReAssignButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickHandler={clickReAssignmentHandler(item)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={!isAdmin || state === 'Pending'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ActionsButtons.EditButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisBusinessOwner\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? state === 'Pending'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: is_business_owner || !isAdmin || state === 'Pending'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickHandler={() => showEditVisible(item)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t\t\t</StyledTable>\n\t\t\t\t\t\t\t\t\t{isFetched && staffCountLoading && <Loader tiled withOverlay />}\n\t\t\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\t\tfeatureHandler={deleteClientHandler(deleteVisible)}\n\t\t\t\t\t\t\t\t\tisOpen={Boolean(deleteVisible)}\n\t\t\t\t\t\t\t\t\ttoggleHandler={closeDeletePopup}\n\t\t\t\t\t\t\t\t\ttitle={t('delete_staff_confirmation', {\n\t\t\t\t\t\t\t\t\t\tfull_name: `${deleteVisible?.first_name} ${deleteVisible?.last_name}`\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\thasLoader\n\t\t\t\t\t\t\t\t\tisLoading={deleteLoading}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\t\tfeatureHandler={handleResend()}\n\t\t\t\t\t\t\t\t\tisOpen={Boolean(resendVisible)}\n\t\t\t\t\t\t\t\t\ttoggleHandler={closeResendPopup}\n\t\t\t\t\t\t\t\t\ttitle={t('resend_request_confirmation')}\n\t\t\t\t\t\t\t\t\thasLoader\n\t\t\t\t\t\t\t\t\tisLoading={resendLoading}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\thandleModalOpen={closeEditPopup}\n\t\t\t\t\t\t\t\t\topen={Boolean(editVisible)}\n\t\t\t\t\t\t\t\t\tmaxWidth={490}\n\t\t\t\t\t\t\t\t\tminWidth={490}\n\t\t\t\t\t\t\t\t\tscrollable\n\t\t\t\t\t\t\t\t\tnoPadding\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<EditStaffForm entity={editVisible!} onSuccess={closeEditPopup} />\n\t\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\thandleModalOpen={closeReAssignModalHandler}\n\t\t\t\t\t\t\t\t\topen={Boolean(reAssignModalVisible)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<StaffReAssignment\n\t\t\t\t\t\t\t\t\t\tonCloseReAssignmentModal={closeReAssignModalHandler}\n\t\t\t\t\t\t\t\t\t\tstaff={reAssignModalVisible}\n\t\t\t\t\t\t\t\t\t\tactionType={reAssignmentActionType}\n\t\t\t\t\t\t\t\t\t\tonOpenDeleteStaffConfirmModal={handleOpenDeleteConfirmation}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\thandleModalOpen={closeReAssignRequiredWarningVisible}\n\t\t\t\t\t\t\t\t\topen={Boolean(reAssignRequiredWarningVisible)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<RequireReAssignWarning\n\t\t\t\t\t\t\t\t\t\tonConfirmReAssignRequireModal={handleConfirmReAssignRequiredModal}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\thandleModalOpen={closeDeleteConfirmation}\n\t\t\t\t\t\t\t\t\topen={Boolean(openDeleteConfirmation)}\n\t\t\t\t\t\t\t\t\tmaxWidth={300}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ReassignmentConfirmationModal\n\t\t\t\t\t\t\t\t\t\tonCancelClicked={handleDeletePermanentlyConfirmClicked}\n\t\t\t\t\t\t\t\t\t\tonConfirmClicked={closeDeleteConfirmation}\n\t\t\t\t\t\t\t\t\t\tmodalIcon={<PiWarningBold className=\"text-kred-red\" size={60} />}\n\t\t\t\t\t\t\t\t\t\ttitle={t('attention')}\n\t\t\t\t\t\t\t\t\t\tmodalContent={\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<Trans\n\t\t\t\t\t\t\t\t\t\t\t\t\ti18nKey=\"are_you_sure_to_delete_user\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponents={{ Secondary: <p /> }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalues={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullName: `${openDeleteConfirmation?.first_name} \n\t\t\t\t\t\t\t\t\t\t\t\t\t${openDeleteConfirmation?.last_name}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tconfirmBtnContent={t('do_not_delete')}\n\t\t\t\t\t\t\t\t\t\tcancelBtnContent={t('delete_permanently')}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t\t<div className=\"news__pagination my-4 flex items-center justify-between\">\n\t\t\t\t\t\t\t\t\t{items.length ? (\n\t\t\t\t\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\t\t\t\t\tcount={meta?.last_page}\n\t\t\t\t\t\t\t\t\t\t\tpage={page ? +page : 1}\n\t\t\t\t\t\t\t\t\t\t\tdefaultPage={6}\n\t\t\t\t\t\t\t\t\t\t\tsiblingCount={1}\n\t\t\t\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handlePage}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t<div className=\"ml-4\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-base font-medium dark:text-white\">\n\t\t\t\t\t\t\t\t\t\t\t{t('staff_count')}:{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"ml-2 text-base font-semibold text-primary \">\n\t\t\t\t\t\t\t\t\t\t\t\t{meta?.count}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityContainer.All>\n\t\t\t) : (\n\t\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t\t<Loader />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport function StaffManagementTable(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<StaffManagementTableRequest {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React, { useCallback } from 'react';\nimport EntityForm from 'modules/entity/forms';\nimport { useAppState } from 'shared/state';\nimport { useNotistack } from 'shared/hooks';\nimport StaffFormElement from './StaffFormElement';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tmodalHandler: any;\n\thasToShowGuard: () => void;\n\tformValuesSetter: (fieldValues: string[]) => void;\n\tfetchStaffCount: () => void;\n};\n\nexport default function CreateStaffForm({\n\tmodalHandler,\n\thasToShowGuard,\n\tformValuesSetter,\n\tfetchStaffCount\n}: Props) {\n\tconst { t } = useTranslation();\n\tconst { companyId } = useAppState();\n\tconst closeModal = useCallback(() => modalHandler(null), []);\n\tconst { showNotification } = useNotistack();\n\treturn (\n\t\t<div>\n\t\t\t{companyId ? (\n\t\t\t\t<EntityForm.Main\n\t\t\t\t\tentity=\"staffEmployee\"\n\t\t\t\t\tname={`staffEmployee-${companyId}`}\n\t\t\t\t\turl={`${companyId}/employee/`}\n\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\tprimaryKey=\"id\"\n\t\t\t\t\tsendAsFormData={false}\n\t\t\t\t\tnormalizeData={(data: any) => data}\n\t\t\t\t\tprependData\n\t\t\t\t\tfields={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'avatar',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\tonSubmitValue: (value) => (value ? value : null)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'first_name',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'username',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'last_name',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'mobile',\n\t\t\t\t\t\t\t//required: true,\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'roles',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tvalue: { label: t('member'), value: 'member' },\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\t\tonSubmitValue: (value) => [value.value]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'departments',\n\t\t\t\t\t\t\tonSubmitValue: (value) =>\n\t\t\t\t\t\t\t\tvalue.reduce((acc: any, curr: any) => [...acc, { id: curr.value }], []),\n\t\t\t\t\t\t\tvalue: [],\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'can_send_news',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\t\t\tshowNotification({ message: 'Success! ' });\n\t\t\t\t\t\tfetchStaffCount();\n\t\t\t\t\t\tresetForm();\n\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t}}\n\t\t\t\t\tonError={(error, resetForm): any => {\n\t\t\t\t\t\tshowNotification({\n\t\t\t\t\t\t\tmessage: error?.response?.data?.message ?? t('something_went_wrong'),\n\t\t\t\t\t\t\tvariant: 'error'\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tresetForm();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ isSubmitting, values, setFieldValue, errors, setFieldError, resetForm }) => {\n\t\t\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\t\t\tconsole.log('values create staff', { values, errors });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<StaffFormElement\n\t\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\tsetFieldError={setFieldError}\n\t\t\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\tformValuesSetter={formValuesSetter}\n\t\t\t\t\t\t\t\tcloseModal={hasToShowGuard}\n\t\t\t\t\t\t\t\tresetForm={resetForm}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityForm.Main>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n\nCreateStaffForm.defaultProps = {\n\tonSuccess: () => {}\n};\n","import React, { useCallback, useRef, useState } from 'react';\nimport { ConfirmModal, ErrorBoundary } from 'shared/components';\nimport { StaffManagementContextProvider } from './context/StaffManagementContext';\nimport { Helmet } from 'react-helmet';\nimport { useFormGuard, useUnreadCaseTab, useRouter } from '../../shared/hooks';\nimport { StaffManagementSearchQuery } from './components/StaffManagementSearchQuery';\nimport { StaffManagementTable } from './components/StaffManagementTable';\nimport { SimpleBtn, WhiteModal } from 'shared/components/Elements';\nimport CreateStaffForm from './components/CreateStaffForm';\nimport { useAppState } from '../../shared/state';\nimport { useStaffManagementList } from './hooks/useStaffManagement';\nimport clsx from 'clsx';\nimport { useSubscription } from '../Payments/hooks';\nimport { useAuth } from '../../modules/auth/hooks/useAuth';\nimport { useTranslation } from 'react-i18next';\n\nfunction StaffManagementRequest() {\n\tconst { t } = useTranslation();\n\tconst { isAdmin, isPermitted } = useAppState();\n\tconst { unreadCasesQuantity, isHidden } = useUnreadCaseTab('Staff Management');\n\n\tconst [formOpen, setFormOpen] = useState<boolean>(false);\n\tconst { formValues, guardOpen, setGuardOpen, formValuesSetter } = useFormGuard();\n\tconst [extraPaymentOpen, setExtraPaymentOpen] = useState(false);\n\tconst { staffCountLoading, staffCountResponse, paidMemberCount, fetchStaffCount } =\n\t\tuseStaffManagementList();\n\tconst { history } = useRouter();\n\tconst { subscription } = useSubscription();\n\n\tconst { company, userData } = useAuth();\n\tconst isOwner = company?.company?.owner?.id === userData.id;\n\n\tconst updatedVariables = useRef<any>({});\n\n\tupdatedVariables.current.subscription = subscription;\n\tupdatedVariables.current.staffCountResponse = staffCountResponse;\n\tupdatedVariables.current.paidMemberCount = paidMemberCount;\n\n\t//TODO: move to custom hook all payment related logics\n\tconst modalHandlerOpen = useCallback(() => {\n\t\tconst { staffCountResponse, subscription, paidMemberCount } = updatedVariables.current || {};\n\t\tif (\n\t\t\t(staffCountResponse as any)?.staffs_count < paidMemberCount ||\n\t\t\t(subscription?.subscription_type === 'TRIAL' && subscription?.is_available)\n\t\t) {\n\t\t\tsetFormOpen((prev) => !prev);\n\t\t} else {\n\t\t\tsetExtraPaymentOpen(true);\n\t\t}\n\t}, [staffCountResponse, subscription, paidMemberCount]);\n\n\tconst closeExtraPaymentPopup = () => {\n\t\tsetExtraPaymentOpen(false);\n\t};\n\n\tconst navigateToCheckout = () => history.push('/checkout');\n\n\tconst confirmToggleHandler = useCallback(() => {\n\t\tsetGuardOpen((prev: boolean) => !prev);\n\t}, []);\n\tconst confirmModalHandler = useCallback(() => {\n\t\tsetGuardOpen(false);\n\t\tformValuesSetter([]);\n\t\tmodalHandlerOpen();\n\t}, [formOpen]);\n\n\tconst hasToShowGuard = useCallback(() => {\n\t\tif (formValues.length) {\n\t\t\tsetGuardOpen(true);\n\t\t\treturn;\n\t\t}\n\n\t\tmodalHandlerOpen();\n\t}, [formValues]);\n\n\tconst onPopupClose = () => {\n\t\tif (formValues.length) {\n\t\t\tsetGuardOpen(true);\n\t\t\treturn;\n\t\t}\n\t\tmodalHandlerOpen();\n\t};\n\n\treturn (\n\t\t<div className=\"relative flex min-h-full max-w-full flex-grow flex-col p-4\">\n\t\t\t{(!isHidden || !isOwner || unreadCasesQuantity === 0) && (\n\t\t\t\t<Helmet>\n\t\t\t\t\t<title>KENNEKT | Staff Management</title>\n\t\t\t\t</Helmet>\n\t\t\t)}\n\t\t\t<div className=\"mb-5\">\n\t\t\t\t<div className=\" absolute top-0 left-0 w-full bg-kred-pink-200\">\n\t\t\t\t\t{!isAdmin ? (\n\t\t\t\t\t\t<p className=\"my-1 text-center text-xs text-kred-pink\">{t('dont_have_permission')}</p>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mt-6 flex w-full flex-wrap items-center justify-between\">\n\t\t\t\t\t<div className=\"mb-4 flex flex-1 items-center font-bold\">\n\t\t\t\t\t\t<h2 className=\"text-xl dark:text-white md:text-3xl \">{t('staff_management')}</h2>\n\t\t\t\t\t\t{subscription && subscription.order && subscription.paid_staffs_count ? (\n\t\t\t\t\t\t\t<span className=\"ml-4\">\n\t\t\t\t\t\t\t\t<span className=\"mr-1 text-sm font-light text-kgrey-dark-3 dark:text-white\">\n\t\t\t\t\t\t\t\t\t{t('users_count')}:\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"text-base font-semibold text-primary\">\n\t\t\t\t\t\t\t\t\t{(staffCountResponse as any)?.staffs_count ?? 0}/{subscription.paid_staffs_count}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"ml-auto mb-4  flex max-w-full items-center\">\n\t\t\t\t\t\t<StaffManagementSearchQuery />\n\t\t\t\t\t\t<SimpleBtn\n\t\t\t\t\t\t\tdisabled={!isPermitted}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={modalHandlerOpen}\n\t\t\t\t\t\t\tclassName={clsx({\n\t\t\t\t\t\t\t\t'pointer-events-none opacity-20': staffCountLoading\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('add_staff')}\n\t\t\t\t\t\t</SimpleBtn>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<StaffManagementTable fetchStaffCount={fetchStaffCount} />\n\t\t\t<ConfirmModal\n\t\t\t\tfeatureHandler={navigateToCheckout}\n\t\t\t\tisOpen={extraPaymentOpen}\n\t\t\t\ttoggleHandler={closeExtraPaymentPopup}\n\t\t\t\ttitle={t('staff_adding_reached_limit')}\n\t\t\t/>\n\t\t\t<WhiteModal\n\t\t\t\thandleModalOpen={onPopupClose}\n\t\t\t\topen={formOpen}\n\t\t\t\tmaxWidth={446}\n\t\t\t\tnoPadding\n\t\t\t\tscrollable\n\t\t\t>\n\t\t\t\t<CreateStaffForm\n\t\t\t\t\tmodalHandler={modalHandlerOpen}\n\t\t\t\t\thasToShowGuard={hasToShowGuard}\n\t\t\t\t\tformValuesSetter={formValuesSetter}\n\t\t\t\t\tfetchStaffCount={fetchStaffCount}\n\t\t\t\t/>\n\t\t\t</WhiteModal>\n\t\t\t<ConfirmModal\n\t\t\t\tfeatureHandler={confirmModalHandler}\n\t\t\t\tisOpen={guardOpen}\n\t\t\t\ttoggleHandler={confirmToggleHandler}\n\t\t\t\ttitle={t('cancel_unsaved_changes_confirmation')}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nexport function StaffManagement() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<StaffManagementContextProvider>\n\t\t\t\t<StaffManagementRequest />\n\t\t\t</StaffManagementContextProvider>\n\t\t</ErrorBoundary>\n\t);\n}\n","import { StaffManagement } from './StaffManagement';\n\nexport default StaffManagement;\n","import clsx from 'clsx';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { convertToLocalizationKey } from 'shared/services/utils/convertToLocalizationKey';\n\ntype StatusTagProps = {\n\tstatus: string | 'Pending' | 'Logged';\n\tchildren: React.ReactNode | string;\n};\n\nexport function StatusTag({ status, children }: StatusTagProps) {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<span\n\t\t\tclassName={clsx(\n\t\t\t\t'inline-block rounded-4xl bg-primary py-0.5 px-5 text-10px uppercase leading-4 text-white',\n\t\t\t\t{\n\t\t\t\t\t'bg-kgrey-inputBg text-kdark': status === 'Pending',\n\t\t\t\t\t'bg-primary-dark': status === 'Logged'\n\t\t\t\t}\n\t\t\t)}\n\t\t>\n\t\t\t{t(convertToLocalizationKey(String(children))) ?? t('accepted')}\n\t\t</span>\n\t);\n}\n","import React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { InputProps, makeStyles } from '@material-ui/core';\nimport { createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tborder: '1px solid #B8BCCF',\n\t\t\tfontSize: '15px',\n\t\t\tlineHeight: 1,\n\t\t\tborderRadius: '12px',\n\t\t\tpadding: '10px 30px',\n\t\t\tfontWeight: 300,\n\t\t\twidth: '100%'\n\t\t},\n\t\tinput: {\n\t\t\tpadding: 0\n\t\t}\n\t})\n);\n\nexport function InputText(props: InputProps) {\n\tconst classes = useStyles();\n\n\treturn <InputBase classes={{ root: classes.root, input: classes.input }} {...props} />;\n}\n\nexport default InputText;\n","import { Avatar } from '@material-ui/core';\n\nexport const getBusinessIcon = (url: string | undefined, name: string | undefined) => {\n\tif (url) {\n\t\treturn (\n\t\t\t<Avatar\n\t\t\t\tclassName=\"inline-block\"\n\t\t\t\talt={name || 'Business icon'}\n\t\t\t\tsrc={url}\n\t\t\t\tstyle={{ width: '100%', height: '100%' }}\n\t\t\t/>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Avatar className=\"inline-block\" style={{ color: '#fff', width: '100%', height: '100%' }}>\n\t\t\t\t{name ? name[0].toUpperCase() : null}\n\t\t\t</Avatar>\n\t\t);\n\t}\n};\n"],"names":["CaseItemInner","props","caseData","isDragging","toggleCaseDetailsOpen","caseRef","useRef","unreadMessagesCount","useAppState","department","sub_department","caseTitle","title","last_message_type","last_message_text","last_message_author","case_number","last_message_time","caseId","id","statusId","status","priority","draftMessage","draft_message","hasLinkedCase","has_linked_case","relatedTo","related_to_id","recurringId","recurring_id","lastReadMessage","last_read_message","assigneeIds","assignee_ids","hasUnread","useMemo","ref","className","pin_time","CaseItem","isCompact","usePayments","React","primeTab","setPrimeTab","pageName","setPageName","useRouter","location","match","url","path","useUnreadCaseTab","unreadCasesQuantity","isHidden","useEffect","locationSplitterArray","pathname","split","filter","Boolean","String","nestedPageType","length","handleChangePrime","event","newValue","useSubscription","companyId","companies","useAuth","history","useState","cancelLoading","setCancelLoading","cancelSubscription","setCancelSubscription","showNotification","useNotistack","hasUserAlreadyPaidInvoice","setUserAlreadyPaidInvoice","t","useTranslation","subscription","setSubscription","cancelSubscriptionRequest","useAxios","method","cb","success","message","variant","error","additionalArgs","response","data","fetchData","firstPayRequest","results","currentCompany","find","com","company","currentSubscription","comp_subscription","handleCancelRequest","useCallback","navigateToCheckout","push","StaffManagementContext","createContext","reducer","state","action","type","searchQuery","payload","StaffManagementContextProvider","children","useReducer","dispatch","setSearchQuery","query","contextValues","Provider","value","useStaffManagement","staffContext","useContext","Error","StaffManagementSearchQuery","placeholder","onChange","e","target","StaffReAssignItemWrapper","extra","scrollWrapperHeight","onToggleSelectAll","selectAllChecked","selectedItemCount","entityName","useGetEntity","entity","all","meta","count","control","checked","color","label","name","classes","autoHide","style","height","StaffReAssignItem","avatarUrl","onToggleChecked","disabled","isRTL","useTranslationHelpers","src","size","root","clsx","useStaffReAssignment","staff","entityInState","useSelector","reloadEntityAll","useLoadAll","staffSearchValue","setStaffSearchValue","ReAssignmentItemName","CASES","STATUSES","STAFF","reAssignmentState","setReAssignmentState","selectAll","setSelectAll","values","previous_assignee","case_ids","prev","params","assignee","all_cases","replaceIds","dataKey","selectedStatusId","console","log","reAssignStaffCases","reAssignStaffCaseLoading","loading","reAssigningCases","getEntityIds","toLowerCase","ids","isItemChecked","includes","handleToggleItemChecked","prevState","prevId","handleToggleSelectAll","allEntityIds","handleStaffSearchValueChanged","newSelectAll","Object","keys","forEach","totalItems","checkIfAllSelected","isCasesFetched","isFetched","handleReAssignment","StaffReAssignStatuses","staffId","limit","appendData","items","statuses","map","StaffReAssignCases","selectedStatusIds","onInit","staffAssignedCasesList","caseItem","StaffReAssignUsers","page","setPage","search","exclude_ids","with_pending","companyStaffList","first_name","last_name","current_page","last_page","ReassignmentConfirmationModal","modalIcon","modalContent","onClick","onCancelClicked","cancelBtnContent","onConfirmClicked","confirmBtnContent","StaffReAssignment","onCloseReAssignmentModal","actionType","onOpenDeleteStaffConfirmModal","useWhiteModal","openConfirmReassignment","open","toggleOpenConfirmReassignment","modalHandler","isReAssignButtonDisabled","handleReassignConfirmationCloseClicked","handleDeleteUserButtonClicked","Loader","tiled","InputText","fullWidth","maxWidth","handleModalOpen","RequireReAssignWarning","onConfirmReAssignRequireModal","NO_MOBILE_NUMBER","StaffManagementTableRequest","fetchStaffCount","isAdmin","userData","usePagination","handlePage","useDispatch","isBusinessOwner","owner","useStaffManagementList","deleteLoading","closeDeletePopup","deleteVisible","editVisible","showEditVisible","closeEditPopup","staffCountLoading","reAssignModalVisible","closeReAssignModalHandler","reAssignmentActionType","reAssignRequiredWarningVisible","closeReAssignRequiredWarningVisible","deleteClientHandler","clickReAssignmentHandler","clickDeleteButtonHandler","handleOpenDeleteConfirmation","handleDeletePermanentlyConfirmClicked","openDeleteConfirmation","closeDeleteConfirmation","handleConfirmReAssignRequiredModal","useDebounce","querySearch","useEntityActionPopup","resendVisible","visible","showResendVisible","showVisible","resendLoading","toggleResendLoading","toggleLoading","closeResendPopup","closePopup","handleResend","formRequest","err","finally","primaryKey","requests","item","width","textAlign","username","mobile","roles","avatar","is_business_owner","phone","getBusinessIcon","thumbnail","thumbnail_150","to","dir","wordBreak","href","role","index","isDisabled","clickHandler","withOverlay","featureHandler","isOpen","toggleHandler","full_name","hasLoader","isLoading","minWidth","scrollable","noPadding","EditStaffForm","onSuccess","i18nKey","components","Secondary","fullName","defaultPage","siblingCount","StaffManagementTable","CreateStaffForm","hasToShowGuard","formValuesSetter","closeModal","sendAsFormData","normalizeData","prependData","fields","required","onSubmitKey","onSubmitValue","reduce","acc","curr","resetForm","onError","isSubmitting","setFieldValue","errors","setFieldError","StaffFormElement","defaultProps","StaffManagementRequest","isPermitted","formOpen","setFormOpen","useFormGuard","formValues","guardOpen","setGuardOpen","extraPaymentOpen","setExtraPaymentOpen","staffCountResponse","paidMemberCount","isOwner","updatedVariables","current","modalHandlerOpen","staffs_count","subscription_type","is_available","confirmToggleHandler","confirmModalHandler","Helmet","order","paid_staffs_count","StatusTag","convertToLocalizationKey","useStyles","makeStyles","theme","createStyles","border","fontSize","lineHeight","borderRadius","padding","fontWeight","input","alt","toUpperCase"],"sourceRoot":""}