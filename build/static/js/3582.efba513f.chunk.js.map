{"version":3,"file":"static/js/3582.efba513f.chunk.js","mappings":"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","sources":["pages/Checkout/components/CheckoutCard.tsx","pages/Checkout/components/CheckoutHeader.tsx","pages/Checkout/mockData/planJson.ts","pages/Checkout/mockData/paymentMethodJson.ts","pages/Checkout/components/CheckoutPlans.tsx","pages/Checkout/components/CheckoutMethods.tsx","pages/Checkout/utils.ts","pages/Checkout/paymentConsts.ts","pages/Checkout/hooks/useCheckout.ts","pages/Checkout/components/CheckoutSidebar.tsx","pages/Checkout/components/CardsCollection.tsx","pages/Checkout/components/CheckoutPaymentPopup.tsx","pages/Checkout/Checkout.tsx","pages/Payments/hooks/usePayments.ts","pages/Payments/hooks/useSubscription.ts","pages/Payments/utils/parsePlans.ts"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\ntype Props = {\n\tisActive?: boolean;\n\tisFixed?: boolean;\n\tdisabled?: boolean;\n} & React.HTMLAttributes<HTMLElement>;\nexport const CheckoutCard: React.FC<Props> = ({\n\tchildren,\n\tisActive = false,\n\tisFixed = false,\n\tclassName,\n\tdisabled = false,\n\t...rest\n}) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={clsx(\n\t\t\t\t'cursor-pointer rounded-lg border transition ' +\n\t\t\t\t\t'flex-centered flex-col hover:border-primary',\n\t\t\t\t{\n\t\t\t\t\t'border-kgrey-dark-2': !isActive,\n\t\t\t\t\t'border-primary-dark bg-primary-dark-50': isActive,\n\t\t\t\t\t'px-4 pt-5 pb-4': !isFixed,\n\t\t\t\t\t'h-[105px] w-[105px]': isFixed,\n\t\t\t\t\t'pointer-events-none border-none bg-kgrey/50 opacity-60 ': disabled\n\t\t\t\t},\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { AvatarSized } from '../../../shared/components/Elements';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\nimport { useTranslation } from 'react-i18next';\n\nexport function CheckoutHeader({ invoiceId }: { invoiceId: number }) {\n\tconst { company } = useAuth();\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<div className=\"checkout__header border-b pb-2.5\">\n\t\t\t<h2 className=\"mb-4 text-lg font-semibold text-kdark-lighter dark:text-white\">\n\t\t\t\t{invoiceId ? t('order_summary_for_unpaid_invoice', { invoiceId }) : t('order_summary')}\n\t\t\t</h2>\n\t\t\t<div className=\"mb-4 text-xs text-kgrey-menuText\">{t('upgrade_business')}</div>\n\t\t\t<div className=\"flex-center-y\">\n\t\t\t\t<AvatarSized\n\t\t\t\t\tsize={40}\n\t\t\t\t\tletter=\"S\"\n\t\t\t\t\talt=\"some descr\"\n\t\t\t\t\tsrc={company?.company?.icon?.thumbnail_150 || company?.company?.icon?.url}\n\t\t\t\t/>\n\t\t\t\t<div className=\"mx-2 text-xs text-kdark-text dark:text-white\">{company?.company?.name}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","export const planJson = [\n\t{ id: 1, title: 'billed_yearly', price: 2, type: 'year' },\n\t{ id: 2, title: 'billed_monthly', price: 4, type: 'month' }\n];\n","export const paymentMethodJson = [\n\t{ id: 1, text: 'credit_card', type: 'card' },\n\t{ id: 2, text: 'paypal', type: 'paypal' }\n];\n","import { planJson } from '../mockData';\nimport { CheckoutCard } from './CheckoutCard';\nimport { CheckoutPlan, PriceType } from '../types';\nimport clsx from 'clsx';\nimport { CompSubscriptionType } from 'modules/user/reducers';\nimport { useAppState } from 'shared/state';\nimport { useTranslation } from 'react-i18next';\nimport { Skeleton } from 'shared/components/Elements';\n\ntype Props = {\n\tplanClickHandler: (plan: CheckoutPlan) => void;\n\tplan: CheckoutPlan;\n\tprice: PriceType;\n\tyearlyDiscount: number;\n\tsubscription: CompSubscriptionType | null;\n};\n\nexport function CheckoutPlans({\n\tplanClickHandler,\n\tplan,\n\tprice,\n\tyearlyDiscount,\n\tsubscription\n}: Props) {\n\tconst { t } = useTranslation();\n\tconst { isAppAvailable } = useAppState();\n\tconst isUpgradingSubscription = isAppAvailable && subscription?.subscription_type === 'PRO';\n\tconst allowedPlanType = subscription?.order?.is_monthly ? 'month' : 'year';\n\n\treturn (\n\t\t<div className=\"checkout__plans mb-5 flex\">\n\t\t\t{planJson.map((planItem) => {\n\t\t\t\tconst isYearPlan = planItem.type === 'year';\n\t\t\t\tconst isPlanOptionDisabled = isUpgradingSubscription && planItem.type !== allowedPlanType;\n\n\t\t\t\treturn (\n\t\t\t\t\t<CheckoutCard\n\t\t\t\t\t\tdisabled={isPlanOptionDisabled}\n\t\t\t\t\t\tonClick={() => planClickHandler(planItem.type as CheckoutPlan)}\n\t\t\t\t\t\tclassName={clsx('mx-1.5 last:mr-0', { relative: isYearPlan })}\n\t\t\t\t\t\tkey={planItem.id}\n\t\t\t\t\t\tisActive={plan === planItem.type}\n\t\t\t\t\t>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h4 className=\"mb-1.5 text-xs text-kdark-text dark:text-white\">\n\t\t\t\t\t\t\t\t{t(planItem.title)}\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t<strong className=\"mb-1.5 block text-xl text-primary-dark\">\n\t\t\t\t\t\t\t\t{price ? (\n\t\t\t\t\t\t\t\t\t`$${price[isYearPlan ? 'year' : 'month']}`\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Skeleton variant=\"text\" width={25} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={clsx('text-10px uppercase text-kgrey-menuText', {\n\t\t\t\t\t\t\t\t\t'dark:text-white': isPlanOptionDisabled\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{t('per_member_per_month')}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t{isYearPlan && <CheckoutDiscount yearlyDiscount={yearlyDiscount} />}\n\t\t\t\t\t\t</>\n\t\t\t\t\t</CheckoutCard>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nfunction CheckoutDiscount({ yearlyDiscount }: { yearlyDiscount: number }) {\n\treturn (\n\t\t<div className=\"flex-centered absolute -top-[7px] -right-[7px] h-[30px] w-[30px] rounded-full bg-primary-dark text-10px text-white\">\n\t\t\t{`-${yearlyDiscount}%`}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { paymentMethodJson } from '../mockData';\nimport { CheckoutCard } from './CheckoutCard';\nimport { CheckoutMethodType } from '../types';\nimport { IconCreditCard, IconPaypal } from 'shared/icons';\nimport { useTranslation } from 'react-i18next';\n\ntype Props = {\n\tmethodClickHandler: (plan: CheckoutMethodType) => void;\n\tmethod: CheckoutMethodType;\n};\n\nexport function CheckoutMethods({ methodClickHandler, method }: Props) {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<div className=\"checkout__pmethods\">\n\t\t\t<h2 className=\"mb-4 text-lg font-semibold text-kdark-lighter dark:text-white\">\n\t\t\t\t{t('payment_method')}\n\t\t\t</h2>\n\t\t\t<div className=\"flex-center-y\">\n\t\t\t\t{paymentMethodJson.map((methodItem) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<CheckoutCard\n\t\t\t\t\t\t\tonClick={() => methodClickHandler(methodItem.type as CheckoutMethodType)}\n\t\t\t\t\t\t\tclassName=\"mx-1.5 last:mr-0\"\n\t\t\t\t\t\t\tkey={methodItem.id}\n\t\t\t\t\t\t\tisActive={method === methodItem.type}\n\t\t\t\t\t\t\tisFixed\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{methodItem.type === 'card' ? <IconCreditCard /> : <IconPaypal />}\n\t\t\t\t\t\t\t\t<div className=\"mt-1.5 text-xs font-medium dark:text-white\">\n\t\t\t\t\t\t\t\t\t{t(methodItem.text)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t</CheckoutCard>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { DAYS_IN_MONTH } from './hooks/useCheckout';\nimport { roundNumber } from '../../shared/services';\nimport { PlanType } from '../Payments/types';\nimport { CompSubscriptionType } from '../../modules/user/reducers';\n\nconst MONTH_IN_YEAR = 12;\n\nexport function calculatePrice(\n\tisExtraInvoice: boolean,\n\tprice: number,\n\tdaysInMonth: number,\n\tmemberCount: number,\n\tplan: 'year' | 'month',\n\tdaysLeft: number,\n\tallPaymentsCount: number\n) {\n\tconst computedPrice = isExtraInvoice ? price / DAYS_IN_MONTH : price;\n\tconst computedDaysOrMonths = isExtraInvoice ? (daysLeft as number) : MONTH_IN_YEAR;\n\tconst isYear = plan === 'year';\n\tconst isFreeTrial = allPaymentsCount - memberCount <= 2;\n\n\treturn roundNumber(\n\t\t(isYear ? computedPrice : price) *\n\t\t\t(isFreeTrial ? allPaymentsCount : memberCount) *\n\t\t\t(isYear ? computedDaysOrMonths : 1)\n\t);\n}\n\nexport function getFreePlan(plans: PlanType[], subscription: CompSubscriptionType) {\n\tconst userPaidStaffCount = subscription && subscription.paid_staffs_count;\n\tif (plans.length && userPaidStaffCount) {\n\t\treturn plans.find(\n\t\t\t(plan) =>\n\t\t\t\tuserPaidStaffCount >= plan.staffs_count_from &&\n\t\t\t\tuserPaidStaffCount <= plan.staffs_count_to &&\n\t\t\t\tparseFloat(plan.monthly_price) === 0 &&\n\t\t\t\tparseFloat(plan.yearly_price) === 0\n\t\t);\n\t}\n}\n","export const MAX_USERS_PLAN = 10000;\nexport const MIN_USER_ALLOWED = 1;\n","import { useCallback, useEffect, useState } from 'react';\nimport { CheckoutMethodType, CheckoutPlan, PaymentDetailsType, PriceType } from '../types';\nimport { useAxios, useRouter } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\nimport { getPlanByMemberCount, getSubscriptionRemainedTIme } from 'shared/services';\nimport { ParsedPlanType, PlanType } from '../../Payments/types';\nimport { parsePlans } from '../../Payments/utils/parsePlans';\nimport { CompSubscriptionType } from '../../../modules/user/reducers';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\nimport { calculatePrice, getFreePlan } from '../utils';\nimport { MAX_USERS_PLAN } from '../paymentConsts';\n\ntype StaffCount = { staffs_count: number };\nexport const DAYS_IN_MONTH = 30;\ntype PaidStaffCountType = {\n\tpaid_staffs_count: number;\n\tid: number;\n\tcompany_id: number;\n};\n\nexport function useCheckout() {\n\tconst { companyId, isAppAvailable } = useAppState();\n\tconst { companies } = useAuth();\n\tconst [plan, setPlan] = useState<CheckoutPlan>('year');\n\tconst [method, setMethod] = useState<CheckoutMethodType>('card');\n\tconst [memberCount, setMemberCount] = useState<number>(0);\n\tconst [allPaymentsCount, setAllPaymentsCount] = useState<number>(0);\n\tconst [staffCount, setStaffCount] = useState(0);\n\tconst [parsedPlansList, setParsedPlansList] = useState<ParsedPlanType[] | null>(null);\n\tconst [selectedPlan, setSelectedPlan] = useState<ParsedPlanType | null>(null);\n\tconst [openPaymentPopup, setOpenPaymentPopup] = useState<null | PaymentDetailsType>(null);\n\tconst [price, setPrice] = useState<PriceType>(null);\n\tconst [subscription, setSubscription] = useState<CompSubscriptionType | null>(null);\n\n\tconst [daysLeft, setDaysLeft] = useState<number | null>(null);\n\n\tconst { params, history } = useRouter();\n\n\tconst isExtraInvoice = isAppAvailable && subscription?.subscription_type === 'PRO';\n\n\tconst goBack = () => history.goBack();\n\n\t//Computing months left in current subscription when paying for  extra members\n\t//We must pay only for those left month when main plan is yearly.\n\tuseEffect(() => {\n\t\tif (subscription) {\n\t\t\tconst remainingDayString = getSubscriptionRemainedTIme(subscription?.end_date);\n\t\t\t// console.log('remainedMonth', { months, computedMonths, daysLeft: +remainingDayString[0] });\n\n\t\t\tsetDaysLeft(+remainingDayString[0]);\n\n\t\t\tif (isExtraInvoice) {\n\t\t\t\tsetPlan(subscription.order?.is_monthly ? 'month' : 'year');\n\t\t\t}\n\t\t}\n\t}, [subscription]);\n\n\t//Set subscription object\n\tuseEffect(() => {\n\t\tif (companyId && companies.length) {\n\t\t\tconst currentCompany = companies.find((com) => com.company.id === companyId);\n\t\t\tconst currentSubscription = currentCompany?.company.comp_subscription as CompSubscriptionType;\n\t\t\tif (currentSubscription) {\n\t\t\t\tsetSubscription(currentSubscription);\n\t\t\t}\n\t\t}\n\t}, [companies, companyId]);\n\n\tconst invoiceId = parseInt((params as { invoice: string })?.invoice);\n\tconst isMonthlyParam = parseInt((params as { isMonthly: string })?.isMonthly);\n\tconst staffsCountParam = parseInt((params as { staffsCount: string })?.staffsCount);\n\n\t//Set plan when paying from invoice\n\tuseEffect(() => {\n\t\tsetPlan(isMonthlyParam ? 'month' : 'year');\n\t}, [isMonthlyParam]);\n\n\tconst setPaymentDetailHandler = useCallback(\n\t\t(isClosing = false) => {\n\t\t\tsetOpenPaymentPopup(\n\t\t\t\tisClosing\n\t\t\t\t\t? null\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tcompany_id: companyId as number,\n\t\t\t\t\t\t\tstaffs_count: memberCount,\n\t\t\t\t\t\t\tpayment_type: method === 'card' ? 'STRIPE' : 'PAYPAL',\n\t\t\t\t\t\t\t// amount: roundNumber(\n\t\t\t\t\t\t\t// \t(isExtraInvoice ? price[plan] / DAYS_IN_MONTH : price[plan]) *\n\t\t\t\t\t\t\t// \t\tmemberCount *\n\t\t\t\t\t\t\t// \t\t(plan === 'year' ? (isExtraInvoice ? (daysLeft as number) : MONTH_IN_YEAR) : 1)\n\t\t\t\t\t\t\t// ),\n\t\t\t\t\t\t\tamount: calculatePrice(\n\t\t\t\t\t\t\t\tisExtraInvoice,\n\t\t\t\t\t\t\t\tprice?.[plan] ?? 0,\n\t\t\t\t\t\t\t\tDAYS_IN_MONTH,\n\t\t\t\t\t\t\t\tmemberCount,\n\t\t\t\t\t\t\t\tplan,\n\t\t\t\t\t\t\t\tdaysLeft as number,\n\t\t\t\t\t\t\t\tallPaymentsCount\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tsubscription_plan_id: selectedPlan?.id as number,\n\t\t\t\t\t\t\tis_monthly: plan === 'month',\n\t\t\t\t\t\t\torder_id: invoiceId || null,\n\t\t\t\t\t\t\tis_extra: isExtraInvoice\n\t\t\t\t\t  }\n\t\t\t);\n\t\t},\n\t\t[companyId, memberCount, method, plan, selectedPlan, price, invoiceId, isExtraInvoice, daysLeft]\n\t);\n\n\t//Request for fetching staff count in the business\n\tconst {\n\t\tfetchData: fetchStaffCount,\n\t\tresponse: staffCountResponse,\n\t\tloading: staffCountLoading\n\t} = useAxios({\n\t\turl: `/${companyId}/companies/staffs_count/`\n\t});\n\t// payment/{{company_id}}/paid-staffs-coun\n\t//Request for fetching plans\n\tconst {\n\t\tfetchData: fetchPlans,\n\t\tresponse: plansResponse,\n\t\tloading: plansLoading\n\t} = useAxios({\n\t\turl: `/payment/plans/`\n\t});\n\n\tconst {\n\t\tfetchData: fetchPaidStaffs,\n\t\tresponse: paidStaffResponse,\n\t\tloading: paidStaffLoading\n\t} = useAxios({\n\t\turl: `/payment/${companyId}/paid-staffs-count/`\n\t});\n\t//Fetch staff count and plans\n\tuseEffect(() => {\n\t\tif (companyId) {\n\t\t\t(async () => {\n\t\t\t\tawait fetchPaidStaffs();\n\t\t\t\tawait fetchStaffCount();\n\t\t\t\tawait fetchPlans();\n\t\t\t})();\n\t\t}\n\t}, [companyId]);\n\n\t//Set initial data after backend request\n\tuseEffect(() => {\n\t\tif ((plansResponse as any)?.results?.length && staffCountResponse) {\n\t\t\tconst staffCount = (staffCountResponse as StaffCount).staffs_count;\n\t\t\tconst parsedPlans = parsePlans((plansResponse as any)?.results as PlanType[]);\n\t\t\tconst plan = getPlanByMemberCount(staffCount, parsedPlans);\n\n\t\t\tsetStaffCount(isExtraInvoice ? staffsCountParam || 1 : staffCount);\n\t\t\tsetMemberCount(isExtraInvoice ? staffsCountParam || 1 : staffCount);\n\n\t\t\tsetParsedPlansList(parsedPlans);\n\t\t\tsetPrice(plan!.price);\n\t\t\tsetSelectedPlan(plan as ParsedPlanType);\n\t\t}\n\t}, [plansResponse, staffCountResponse, isExtraInvoice, staffsCountParam]);\n\n\tconst paidStaffCount =\n\t\t(paidStaffResponse && (paidStaffResponse as PaidStaffCountType).paid_staffs_count) ?? 0;\n\tconst hasUserFreePlan = Boolean(\n\t\tisExtraInvoice && plansResponse && getFreePlan((plansResponse as any).results, subscription)\n\t);\n\n\tuseEffect(() => {\n\t\tsetAllPaymentsCount(isExtraInvoice ? paidStaffCount + memberCount : memberCount);\n\t}, [paidStaffResponse, isExtraInvoice, memberCount]);\n\n\t//Update price on member count change\n\tuseEffect(() => {\n\t\tif (allPaymentsCount > 0 && parsedPlansList?.length) {\n\t\t\tconst parsedPlans = parsePlans((plansResponse as any)?.results as PlanType[]);\n\t\t\tconst plan = getPlanByMemberCount(allPaymentsCount, parsedPlans);\n\t\t\tsetPrice(plan!.price);\n\t\t\tsetSelectedPlan(plan as ParsedPlanType);\n\t\t}\n\t}, [memberCount, parsedPlansList, allPaymentsCount]);\n\n\tconst planClickHandler = useCallback((planText: CheckoutPlan) => setPlan(planText), []);\n\tconst methodClickHandler = useCallback(\n\t\t(methodText: CheckoutMethodType) => setMethod(methodText),\n\t\t[]\n\t);\n\n\t//Decrement count click handler\n\tconst decrementMemberCount = useCallback(() => {\n\t\tsetMemberCount((prev) => {\n\t\t\tif ((isExtraInvoice || prev > staffCount) && prev > 1) {\n\t\t\t\treturn prev - 1;\n\t\t\t} else {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t});\n\t}, [staffCount]);\n\n\t//Increment count click handler\n\tconst incrementMemberCount = useCallback(\n\t\t() =>\n\t\t\tsetMemberCount((prev) => {\n\t\t\t\tif (prev < MAX_USERS_PLAN - paidStaffCount) {\n\t\t\t\t\treturn prev + 1;\n\t\t\t\t}\n\t\t\t\treturn MAX_USERS_PLAN - paidStaffCount;\n\t\t\t}),\n\t\t[paidStaffCount]\n\t);\n\n\t//Member count Input onChange handler\n\tconst setCounterHandler = useCallback(\n\t\t({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\tconst staffCountInputValue = parseInt(value);\n\n\t\t\tif (staffCountInputValue > staffCount) {\n\t\t\t\t//Total of already paid staff count and user inputted member count must not be over MAX_USER_PLAN which is 10000\n\t\t\t\tif (staffCountInputValue + paidStaffCount > MAX_USERS_PLAN) {\n\t\t\t\t\tsetMemberCount(MAX_USERS_PLAN - paidStaffCount);\n\t\t\t\t} else {\n\t\t\t\t\tsetMemberCount(staffCountInputValue);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetMemberCount((prev) => {\n\t\t\t\t\t//IF: user has unpaid plan and wants to continue his invoice, allow any staff count from input not fixed staff count\n\t\t\t\t\tif (isExtraInvoice && prev > 0 && staffCountInputValue > 0) {\n\t\t\t\t\t\treturn staffCountInputValue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[staffCount]\n\t);\n\n\treturn {\n\t\tsubscription,\n\t\tplan,\n\t\tmethod,\n\t\tplanClickHandler,\n\t\tmethodClickHandler,\n\t\tprice,\n\t\tdecrementMemberCount,\n\t\tincrementMemberCount,\n\t\tmemberCount,\n\t\tsetCounterHandler,\n\t\tstaffCountLoading,\n\t\tplansLoading,\n\t\tsetPaymentDetailHandler,\n\t\topenPaymentPopup,\n\t\tyearlyDiscount: selectedPlan?.yearlyDiscount,\n\t\tinvoiceId,\n\t\tgoBack,\n\t\tisExtraInvoice,\n\t\tdaysLeft,\n\t\tallPaymentsCount,\n\t\tpaidStaffLoading,\n\t\thasUserFreePlan\n\t};\n}\n","import React from 'react';\nimport { BiMinus, BiPlus } from 'react-icons/bi';\nimport { DAYS_IN_MONTH } from '../hooks/useCheckout';\nimport { calculatePrice } from '../utils';\nimport Slider from '@material-ui/core/Slider';\nimport { MAX_USERS_PLAN, MIN_USER_ALLOWED } from '../paymentConsts';\nimport { useSubscription } from '../../Payments/hooks';\nimport { useTranslation } from 'react-i18next';\nimport clsx from 'clsx';\nimport { useTranslationHelpers } from 'shared/hooks/useTranslationHelpers';\n\ntype Props = {\n\tprice: number;\n\tmemberCount: number;\n\tdecrementMemberCount: () => void;\n\tincrementMemberCount: () => void;\n\tplan: 'month' | 'year';\n\tsetCounterHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\n\tisExtraInvoice: boolean;\n\tdaysLeft: number | null;\n\tallPaymentsCount: number;\n\n\thasUserFreePlan: boolean;\n};\n\nexport function CheckoutSidebar({\n\thasUserFreePlan,\n\tprice,\n\tmemberCount,\n\tdecrementMemberCount,\n\tincrementMemberCount,\n\tplan,\n\tsetCounterHandler,\n\tisExtraInvoice,\n\tdaysLeft,\n\tallPaymentsCount\n}: Props) {\n\tconst { t } = useTranslation();\n\tconst { isRTL } = useTranslationHelpers();\n\tconst { hasUserAlreadyPaidInvoice } = useSubscription();\n\tconst isWithinFreePlan = price === 0;\n\tconst showUserBeingChargedAlertText =\n\t\t(!hasUserAlreadyPaidInvoice && !isWithinFreePlan) || (hasUserFreePlan && !isWithinFreePlan);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"mb-6\">\n\t\t\t\t<h2 className=\"py-2.5 text-lg font-semibold dark:text-white\">\n\t\t\t\t\t{plan === 'month' ? t('monthly_plan') : t('yearly_plan')}\n\t\t\t\t</h2>\n\t\t\t\t<div className=\"mb-6 divide-y divide-dashed divide-kgrey-light-grey-6  rounded-lg bg-primary-dark-50 px-2.5  lg:w-[255px]\">\n\t\t\t\t\t<div className=\"flex-col py-2.5 text-kgrey-menuText\">\n\t\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={decrementMemberCount}\n\t\t\t\t\t\t\t\tclassName=\"checkout-counter mr-1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<BiMinus className=\"pointer-events-none\" />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tvalue={memberCount}\n\t\t\t\t\t\t\t\tclassName=\"w-14 border-b bg-transparent text-center text-sm font-semibold\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmin={MIN_USER_ALLOWED}\n\t\t\t\t\t\t\t\tmax={MAX_USERS_PLAN}\n\t\t\t\t\t\t\t\tonChange={setCounterHandler}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={incrementMemberCount}\n\t\t\t\t\t\t\t\tclassName=\"checkout-counter ml-1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<BiPlus className=\"pointer-events-none\" />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<span className=\"ml-2.5 text-sm capitalize\">\n\t\t\t\t\t\t\t\t{memberCount > 0 ? t('members') : t('member_lower')}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"pointer-events-none mt-4 text-sm leading-none\">\n\t\t\t\t\t\t\t<strong className=\"pointer-events-none text-kgrey-2d2d2d dark:text-white\">{`$${price} `}</strong>\n\t\t\t\t\t\t\t<span className=\"pointer-events-none \"> / {t('per_member_per_month')}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"py-2.5\">\n\t\t\t\t\t\t<div className=\"flex-center-between\">\n\t\t\t\t\t\t\t<span className=\"dark:text-white\">{t('total')}: </span>\n\t\t\t\t\t\t\t<strong className=\"text-lg font-bold dark:text-white\">{`$${calculatePrice(\n\t\t\t\t\t\t\t\tisExtraInvoice,\n\t\t\t\t\t\t\t\tprice,\n\t\t\t\t\t\t\t\tDAYS_IN_MONTH,\n\t\t\t\t\t\t\t\tmemberCount,\n\t\t\t\t\t\t\t\tplan,\n\t\t\t\t\t\t\t\tdaysLeft as number,\n\t\t\t\t\t\t\t\tallPaymentsCount\n\t\t\t\t\t\t\t)}`}</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/*allPaymentsCount - memberCount <= 2 && price > 0 && allPaymentsCount - memberCount !== 0 */}\n\t\t\t\t{showUserBeingChargedAlertText ? (\n\t\t\t\t\t<div className={clsx('mb-3', { 'pl-4': isRTL, 'pr-4': !isRTL })}>\n\t\t\t\t\t\t<span className=\"text-sm font-medium dark:text-white\">\n\t\t\t\t\t\t\t{t('user_being_charged_alert_text')}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\n\t\t\t\t{isExtraInvoice ? (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t'p-tariff rounded-lg border-t-4 border-primary-dark bg-primary-dark-50 py-5 px-4 font-poppins shadow-p-tariff lg:w-[255px]',\n\t\t\t\t\t\t\t{ 'ml-4': isRTL, 'mr-4': !isRTL }\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t<span className=\"dark:text-white\">{t('total_staff')}:</span>{' '}\n\t\t\t\t\t\t\t<span className=\"dark:text-white\">{allPaymentsCount}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={allPaymentsCount}\n\t\t\t\t\t\t\t\taria-labelledby=\"input-slider\"\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tclassName=\"!text-primary-dark\"\n\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport config from 'config';\nimport { useTranslation } from 'react-i18next';\nconst imgPath = `${config.PUBLIC_ASSETS}img`;\n\nexport function CardsCollection() {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<div>\n\t\t\t<h3 className=\"mb-2.5 text-xs text-kgrey-menuText\">{t('accepted_payment_methods')}</h3>\n\t\t\t<div className=\"flex items-center gap-x-1\">\n\t\t\t\t{['logo-visa', 'logo-mastercard', 'logo-paypal'].map((method) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img className=\"mx-1 last:mr-0\" src={`${imgPath}/${method}.svg`} alt=\"\" key={method} />\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from 'react';\nimport { PaymentDetailsType } from '../types';\nimport { NewButton } from '../../../shared/components/Elements';\nimport { useAppState } from '../../../shared/state';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\nimport { useAxios, useNotistack } from '../../../shared/hooks';\nimport { Loader } from '../../../shared/components';\nimport { Company } from '../../../modules/user/reducers';\nimport userActions from '../../../modules/user/actions';\nimport { storage } from '../../../shared/services';\nimport { useDispatch } from 'react-redux';\nimport Actions from '../../../store/actions';\nimport { useHistory } from 'react-router';\nimport { useTranslation } from 'react-i18next';\n\nconst SetSelectedUserCompany = Actions.user.setUserCompany;\n\ntype Props = {\n\tdetails: PaymentDetailsType;\n\tonSuccess: () => void;\n};\n\nexport function CheckoutPaymentPopup({ details, onSuccess }: Props) {\n\tconst { t } = useTranslation();\n\tconst { companyId } = useAppState();\n\tconst { companies, company } = useAuth();\n\tconst [loading, setLoading] = useState(false);\n\tconst { showNotification } = useNotistack();\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tif (!details?.subscription_plan_id) {\n\t\t\talert('Something wrong with payment. Please contact to support');\n\t\t\tonSuccess();\n\t\t\treturn;\n\t\t}\n\t}, []);\n\n\tconst { fetchData: processPaymentRequest } = useAxios({\n\t\turl: `/payment/create-checkout-session/`,\n\t\tvalues: details,\n\t\tmethod: 'post',\n\t\tcb: {\n\t\t\tsuccess: (data, args) => {\n\t\t\t\tif ('payment_link' in data) {\n\t\t\t\t\tonSuccess();\n\t\t\t\t\t//Forward to Stripe's or Paypal's website\n\t\t\t\t\twindow.open(data.payment_link, '_blank');\n\t\t\t\t} else if (details && details?.amount === 0) {\n\t\t\t\t\tconst changedCompanies = companies.map((comp: Company) => {\n\t\t\t\t\t\tif (comp.company.id === companyId) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...comp,\n\t\t\t\t\t\t\t\tcompany: {\n\t\t\t\t\t\t\t\t\t...comp.company,\n\t\t\t\t\t\t\t\t\tcomp_subscription: data\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn comp;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tdispatch(userActions.loadUserCompaniesSuccess(changedCompanies));\n\t\t\t\t\tconst selectedBusiness = {\n\t\t\t\t\t\t...company,\n\t\t\t\t\t\tcompany: {\n\t\t\t\t\t\t\t...company?.company,\n\t\t\t\t\t\t\tcomp_subscription: data\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdispatch(SetSelectedUserCompany(selectedBusiness));\n\t\t\t\t\tstorage.set('company', JSON.stringify(selectedBusiness));\n\t\t\t\t\thistory.push('/payment-success');\n\t\t\t\t} else if (!('payment_link' in data) && details.amount !== 0) {\n\t\t\t\t\tshowNotification({ message: t('something_went_wrong'), variant: 'error' });\n\t\t\t\t}\n\t\t\t\tsetLoading(false);\n\t\t\t},\n\t\t\terror: (error, args) => {\n\t\t\t\tconst errorText = error?.response?.data?.message;\n\t\t\t\tconsole.log('error payment', { response: error.response, errorText });\n\t\t\t\tshowNotification({ message: errorText || t('something_went_wrong'), variant: 'error' });\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst paymentHandler = async () => {\n\t\tsetLoading(true);\n\t\tawait processPaymentRequest();\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2 className=\"mb-6 text-lg font-bold\">{t('proceed_with_following_information')}</h2>\n\t\t\t{loading && <Loader tiled withOverlay />}\n\t\t\t<div className=\"mb-4\">\n\t\t\t\t<dl className=\"flex-center-y mb-4\">\n\t\t\t\t\t<dt className=\"mr-2 \">{t('business_company')}:</dt>\n\t\t\t\t\t<dd className=\"font-medium\">{company?.company.name}</dd>\n\t\t\t\t</dl>\n\t\t\t\t<dl className=\"flex-center-y mb-4\">\n\t\t\t\t\t<dt className=\"mr-2 \">{t('staff_count')}:</dt>\n\t\t\t\t\t<dd className=\"font-medium\">{details?.staffs_count}</dd>\n\t\t\t\t</dl>\n\t\t\t\t<dl className=\"flex-center-y mb-4\">\n\t\t\t\t\t<dt className=\"mr-2 \">{t('payment_type')}:</dt>\n\t\t\t\t\t<dd className=\"font-medium\">\n\t\t\t\t\t\t{details?.payment_type === 'PAYPAL' ? 'Paypal' : 'Credit Card'}\n\t\t\t\t\t</dd>\n\t\t\t\t</dl>\n\t\t\t\t<dl className=\"flex-center-y mb-4\">\n\t\t\t\t\t<dt className=\"mr-2 \">{t('amount')}:</dt>\n\t\t\t\t\t<dd className=\"font-medium\">${details?.amount}</dd>\n\t\t\t\t</dl>\n\t\t\t\t<dl className=\"flex-center-y mb-4\">\n\t\t\t\t\t<dt className=\"mr-2 \">{t('payment_frequency')}:</dt>\n\t\t\t\t\t<dd className=\"font-medium\">{details?.is_monthly ? t('monthly') : t('yearly')}</dd>\n\t\t\t\t</dl>\n\t\t\t</div>\n\n\t\t\t<p className=\"mb-6 text-sm italic text-kgrey\">\n\t\t\t\t{details?.payment_type === 'PAYPAL'\n\t\t\t\t\t? t('forward_to_paypal_website_confirmation')\n\t\t\t\t\t: t('forward_to_stripe_website_confirmation')}\n\t\t\t</p>\n\n\t\t\t<div className=\"flex-center-end\">\n\t\t\t\t<NewButton className=\"mr-4\" onClick={onSuccess}>\n\t\t\t\t\t{t('cancel')}\n\t\t\t\t</NewButton>\n\t\t\t\t<NewButton color=\"primary\" onClick={paymentHandler}>\n\t\t\t\t\t{t('proceed')}\n\t\t\t\t</NewButton>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport config from '../../config';\nimport { CheckoutHeader, CheckoutMethods, CheckoutPlans } from './components';\nimport { NewButton, WhiteModal } from 'shared/components/Elements';\nimport { CheckoutSidebar } from './components/CheckoutSidebar';\nimport { StandardPageLayout } from 'shared/layouts';\nimport { CardsCollection } from './components/CardsCollection';\nimport { useCheckout } from './hooks';\nimport { Loader } from '../../shared/components';\nimport { CheckoutPaymentPopup } from './components/CheckoutPaymentPopup';\nimport { PaymentDetailsType } from './types';\nimport { useTranslation } from 'react-i18next';\nconst imgPath = `${config.PUBLIC_ASSETS}img`;\n\nexport function Checkout() {\n\tconst { t } = useTranslation();\n\tconst {\n\t\tplan,\n\t\tmethod,\n\t\tplanClickHandler,\n\t\tmethodClickHandler,\n\t\tprice,\n\t\tmemberCount,\n\t\tdecrementMemberCount,\n\t\tincrementMemberCount,\n\t\tsetCounterHandler,\n\t\tstaffCountLoading,\n\t\tplansLoading,\n\t\tsetPaymentDetailHandler,\n\t\topenPaymentPopup,\n\t\tyearlyDiscount,\n\t\tinvoiceId,\n\t\tgoBack,\n\t\tisExtraInvoice,\n\t\tdaysLeft,\n\t\tallPaymentsCount,\n\t\tpaidStaffLoading,\n\t\thasUserFreePlan,\n\t\tsubscription\n\t} = useCheckout();\n\n\tconst showPaymentPopup = () => setPaymentDetailHandler();\n\tconst closePaymentPopup = () => setPaymentDetailHandler(true);\n\n\treturn (\n\t\t<StandardPageLayout>\n\t\t\t<div className=\"checkout mx-auto font-poppins lg:w-[707px] lg:py-14\">\n\t\t\t\t<div className=\"checkout__business-logo mx-auto mb-6 table h-[67px] w-[166px]\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={`${imgPath}/img-kennekt-logo-checkout.svg`}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclassName=\"h-full w-full object-cover\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"checkout__main relative rounded-lg border-t-4 border-primary-dark bg-white dark:bg-kdark-dark333\">\n\t\t\t\t\t{(staffCountLoading || plansLoading || paidStaffLoading) && <Loader tiled withOverlay />}\n\t\t\t\t\t<div className=\"checkout__body flex\">\n\t\t\t\t\t\t<div className=\"checkout__left p:2 w-[428px] flex-shrink-0 lg:p-7\">\n\t\t\t\t\t\t\t<CheckoutHeader invoiceId={invoiceId} />\n\t\t\t\t\t\t\t<div className=\"checkout__content py-5\">\n\t\t\t\t\t\t\t\t<h3 className=\"mb-3 text-xs text-kgrey-menuText\">{t('billing_plan')}</h3>\n\t\t\t\t\t\t\t\t<CheckoutPlans\n\t\t\t\t\t\t\t\t\tplan={plan}\n\t\t\t\t\t\t\t\t\tplanClickHandler={planClickHandler}\n\t\t\t\t\t\t\t\t\tprice={price}\n\t\t\t\t\t\t\t\t\tyearlyDiscount={yearlyDiscount || 0}\n\t\t\t\t\t\t\t\t\tsubscription={subscription}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CheckoutMethods method={method} methodClickHandler={methodClickHandler} />\n\t\t\t\t\t\t\t\t{Boolean(method) && (\n\t\t\t\t\t\t\t\t\t<div className=\"checkout__method-details pt-5\">\n\t\t\t\t\t\t\t\t\t\t{method === 'card' ? (\n\t\t\t\t\t\t\t\t\t\t\t<CardsCollection />\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-3 text-10px text-kgrey-menuText\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t('redirect_to_paypal_info')}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-10px text-kgrey-menuText\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t('make_sure_popup_not_blocked')}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"checkout__right w-full border-l border-kgrey-light-grey-6 p-4 px-3 py-7\">\n\t\t\t\t\t\t\t{!!price && (\n\t\t\t\t\t\t\t\t<CheckoutSidebar\n\t\t\t\t\t\t\t\t\thasUserFreePlan={hasUserFreePlan}\n\t\t\t\t\t\t\t\t\tprice={price[plan]}\n\t\t\t\t\t\t\t\t\tmemberCount={memberCount}\n\t\t\t\t\t\t\t\t\tdecrementMemberCount={decrementMemberCount}\n\t\t\t\t\t\t\t\t\tincrementMemberCount={incrementMemberCount}\n\t\t\t\t\t\t\t\t\tplan={plan}\n\t\t\t\t\t\t\t\t\tsetCounterHandler={setCounterHandler}\n\t\t\t\t\t\t\t\t\tisExtraInvoice={isExtraInvoice}\n\t\t\t\t\t\t\t\t\tdaysLeft={daysLeft}\n\t\t\t\t\t\t\t\t\tallPaymentsCount={allPaymentsCount}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"checkout__footer flex-center-end border-t border-kgrey-light-grey-6 py-5 px-5\">\n\t\t\t\t\t\t<NewButton className=\"mx-5\" shape=\"square\" type=\"button\" onClick={goBack}>\n\t\t\t\t\t\t\t{t('back')}\n\t\t\t\t\t\t</NewButton>\n\t\t\t\t\t\t<NewButton color=\"primary\" shape=\"square\" type=\"submit\" onClick={showPaymentPopup}>\n\t\t\t\t\t\t\t{t('text_continue')}\n\t\t\t\t\t\t</NewButton>\n\t\t\t\t\t\t<WhiteModal handleModalOpen={closePaymentPopup} open={!!openPaymentPopup}>\n\t\t\t\t\t\t\t<CheckoutPaymentPopup\n\t\t\t\t\t\t\t\tdetails={openPaymentPopup as PaymentDetailsType}\n\t\t\t\t\t\t\t\tonSuccess={closePaymentPopup}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StandardPageLayout>\n\t);\n}\n","import React, { useEffect } from 'react';\nimport { useRouter, useUnreadCaseTab } from 'shared/hooks';\n\nexport function usePayments() {\n\tconst [primeTab, setPrimeTab] = React.useState(0);\n\tconst [pageName, setPageName] = React.useState('Billing');\n\n\tconst { location, match } = useRouter();\n\tconst { url, path } = match;\n\tconst { unreadCasesQuantity, isHidden } = useUnreadCaseTab('Billing');\n\n\tconst handleChangePrime = (\n\t\tevent: React.ChangeEvent<Record<string, unknown>>,\n\t\tnewValue: number\n\t) => {\n\t\tsetPrimeTab(newValue);\n\t};\n\n\t//Just to setup tab active tab indication\n\tuseEffect(() => {\n\t\tconst locationSplitterArray = location.pathname.split('/').filter(Boolean).filter(String);\n\t\tconst nestedPageType = locationSplitterArray[locationSplitterArray.length - 1] || '';\n\n\t\t(() => {\n\t\t\tswitch (nestedPageType) {\n\t\t\t\tcase 'billing': {\n\t\t\t\t\tsetPrimeTab(0);\n\t\t\t\t\tsetPageName('Billing');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'invoice': {\n\t\t\t\t\tsetPrimeTab(1);\n\t\t\t\t\tsetPageName('Invoice');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t})();\n\t}, [location]);\n\n\treturn {\n\t\tprimeTab,\n\t\tpageName,\n\t\turl,\n\t\tpath,\n\t\tunreadCasesQuantity,\n\t\tsetPrimeTab,\n\t\tisHidden,\n\t\thandleChangePrime\n\t};\n}\n","import { useAppState } from '../../../shared/state';\nimport { useAuth } from '../../../modules/auth/hooks/useAuth';\nimport { useAxios, useNotistack, useRouter } from '../../../shared/hooks';\nimport { useCallback, useEffect, useState } from 'react';\nimport { CompSubscriptionType } from '../../../modules/user/reducers';\nimport { useTranslation } from 'react-i18next';\n\nexport function useSubscription() {\n\tconst { companyId } = useAppState();\n\tconst { companies } = useAuth();\n\tconst { history } = useRouter();\n\tconst [cancelLoading, setCancelLoading] = useState(false);\n\tconst [cancelSubscription, setCancelSubscription] = useState(false);\n\tconst { showNotification } = useNotistack();\n\tconst [hasUserAlreadyPaidInvoice, setUserAlreadyPaidInvoice] = useState(false);\n\tconst { t } = useTranslation();\n\n\tconst [subscription, setSubscription] = useState<CompSubscriptionType | null>(null);\n\n\tconst { fetchData: cancelSubscriptionRequest } = useAxios({\n\t\turl: `/${companyId}/payment/${companyId}/cancel-subscription/`,\n\t\tmethod: 'put',\n\t\tcb: {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tsuccess: () => {\n\t\t\t\tshowNotification({ message: 'Your subscription has been cancelled', variant: 'success' });\n\t\t\t\tsetCancelLoading(false);\n\t\t\t\tsetCancelSubscription(false);\n\t\t\t},\n\t\t\terror: (error, additionalArgs) => {\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: error?.response?.data?.message || t('something_went_wrong'),\n\t\t\t\t\tvariant: 'error'\n\t\t\t\t});\n\t\t\t\tsetCancelLoading(false);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst { fetchData: firstPayRequest } = useAxios({\n\t\turl: `/payment/${companyId}/invoices/?page_size=10`,\n\t\tcb: {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\tsuccess: (data) => {\n\t\t\t\tif (data?.results?.length) {\n\t\t\t\t\tsetUserAlreadyPaidInvoice(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: (error, additionalArgs) => {}\n\t\t}\n\t});\n\n\t//set subscription object\n\tuseEffect(() => {\n\t\tfirstPayRequest();\n\t\tif (companyId && companies.length) {\n\t\t\tconst currentCompany = companies.find((com) => com.company.id === companyId);\n\t\t\tconst currentSubscription = currentCompany?.company.comp_subscription as CompSubscriptionType;\n\n\t\t\tif (currentSubscription) {\n\t\t\t\tsetSubscription(currentSubscription);\n\t\t\t}\n\t\t}\n\t}, [companies, companyId]);\n\n\tconst handleCancelRequest = useCallback(async () => {\n\t\tsetCancelLoading(true);\n\t\tawait cancelSubscriptionRequest();\n\t}, []);\n\n\tconst navigateToCheckout = useCallback(() => history.push('/checkout'), []);\n\n\treturn {\n\t\tnavigateToCheckout,\n\t\tsubscription,\n\t\thandleCancelRequest,\n\t\tsetCancelSubscription,\n\t\tcancelSubscription,\n\t\tcancelLoading,\n\t\thasUserAlreadyPaidInvoice\n\t};\n}\n","import { ParsedPlanType, PlanType } from '../types';\n\nexport function parsePlans(planItems: PlanType[]) {\n\tconst isCustomPlan = (amount: number) => amount > 50;\n\n\treturn planItems\n\t\t.sort((a, b) => a.staffs_count_from - b.staffs_count_from)\n\t\t.reduce((acc: ParsedPlanType[], curr: PlanType) => {\n\t\t\treturn [\n\t\t\t\t...acc,\n\t\t\t\t{\n\t\t\t\t\tid: curr.id,\n\t\t\t\t\tname: curr.title,\n\t\t\t\t\tmembers: `${curr.staffs_count_from}${isCustomPlan(curr.staffs_count_to) ? '' : '-'}${\n\t\t\t\t\t\tisCustomPlan(curr.staffs_count_to) ? '+' : curr.staffs_count_to\n\t\t\t\t\t}`,\n\t\t\t\t\tmemberFrom: curr.staffs_count_from,\n\t\t\t\t\tmemberTo: curr.staffs_count_to,\n\t\t\t\t\tprice: {\n\t\t\t\t\t\tmonth: parseFloat(curr.monthly_price),\n\t\t\t\t\t\tyear: parseFloat(curr.yearly_price)\n\t\t\t\t\t},\n\t\t\t\t\tyearlyDiscount: parseInt(curr.yearly_discount),\n\t\t\t\t\ttype: curr.type\n\t\t\t\t}\n\t\t\t];\n\t\t}, []);\n}\n"],"names":["CheckoutCard","children","isActive","isFixed","className","disabled","rest","clsx","CheckoutHeader","invoiceId","company","useAuth","t","useTranslation","size","letter","alt","src","icon","thumbnail_150","url","name","planJson","id","title","price","type","paymentMethodJson","text","CheckoutPlans","planClickHandler","plan","yearlyDiscount","subscription","isUpgradingSubscription","useAppState","isAppAvailable","subscription_type","allowedPlanType","order","is_monthly","map","planItem","isYearPlan","isPlanOptionDisabled","onClick","relative","variant","width","CheckoutDiscount","CheckoutMethods","methodClickHandler","method","methodItem","MONTH_IN_YEAR","calculatePrice","isExtraInvoice","daysInMonth","memberCount","daysLeft","allPaymentsCount","computedPrice","DAYS_IN_MONTH","computedDaysOrMonths","isYear","isFreeTrial","roundNumber","MAX_USERS_PLAN","MIN_USER_ALLOWED","useCheckout","companyId","companies","useState","setPlan","setMethod","setMemberCount","setAllPaymentsCount","staffCount","setStaffCount","parsedPlansList","setParsedPlansList","selectedPlan","setSelectedPlan","openPaymentPopup","setOpenPaymentPopup","setPrice","setSubscription","setDaysLeft","useRouter","params","history","useEffect","remainingDayString","getSubscriptionRemainedTIme","end_date","length","currentCompany","find","com","currentSubscription","comp_subscription","parseInt","invoice","isMonthlyParam","isMonthly","staffsCountParam","staffsCount","setPaymentDetailHandler","useCallback","company_id","staffs_count","payment_type","amount","subscription_plan_id","order_id","is_extra","useAxios","fetchStaffCount","fetchData","staffCountResponse","response","staffCountLoading","loading","fetchPlans","plansResponse","plansLoading","fetchPaidStaffs","paidStaffResponse","paidStaffLoading","results","parsedPlans","parsePlans","getPlanByMemberCount","paidStaffCount","paid_staffs_count","hasUserFreePlan","Boolean","plans","userPaidStaffCount","staffs_count_from","staffs_count_to","parseFloat","monthly_price","yearly_price","getFreePlan","planText","methodText","decrementMemberCount","prev","incrementMemberCount","setCounterHandler","value","target","staffCountInputValue","goBack","CheckoutSidebar","isRTL","useTranslationHelpers","isWithinFreePlan","showUserBeingChargedAlertText","useSubscription","hasUserAlreadyPaidInvoice","min","max","onChange","Slider","imgPath","config","CardsCollection","SetSelectedUserCompany","Actions","CheckoutPaymentPopup","details","onSuccess","setLoading","showNotification","useNotistack","dispatch","useDispatch","useHistory","alert","processPaymentRequest","values","cb","success","data","args","window","open","payment_link","changedCompanies","comp","userActions","selectedBusiness","storage","JSON","stringify","push","message","error","errorText","console","log","paymentHandler","tiled","withOverlay","color","Checkout","closePaymentPopup","shape","handleModalOpen","usePayments","React","primeTab","setPrimeTab","pageName","setPageName","location","match","path","useUnreadCaseTab","unreadCasesQuantity","isHidden","locationSplitterArray","pathname","split","filter","String","nestedPageType","handleChangePrime","event","newValue","cancelLoading","setCancelLoading","cancelSubscription","setCancelSubscription","setUserAlreadyPaidInvoice","cancelSubscriptionRequest","additionalArgs","firstPayRequest","handleCancelRequest","navigateToCheckout","planItems","isCustomPlan","sort","a","b","reduce","acc","curr","members","memberFrom","memberTo","month","year","yearly_discount"],"sourceRoot":""}