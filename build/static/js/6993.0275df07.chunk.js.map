{"version":3,"file":"static/js/6993.0275df07.chunk.js","mappings":"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","sources":["pages/Contacts/ContactsPage/ContactsPage.tsx","pages/Contacts/ContactsPage/ContactsList/ContactItem.tsx","pages/Contacts/ContactsPage/ContactsList/ContactsListItems.tsx","pages/Contacts/ContactsPage/ContactsList/ContactsListHeader/ContactsListHeaderSearch.tsx","shared/icons/ContactsFilterIcon.tsx","pages/Contacts/ContactsPage/ContactsList/ContactsListHeader/ContactFilterFormItem.tsx","pages/Contacts/ContactsPage/ContactsList/ContactsListHeader/ContactFilterForm.tsx","pages/Contacts/ContactsPage/ContactsList/ContactsListHeader/ContactsListHeaderFilter.tsx","pages/Contacts/ContactsPage/ContactsList/ContactsListHeader/ContactsListHeader.tsx","pages/Contacts/ContactsPage/ContactForm/AddContactFieldButton.tsx","pages/Contacts/ContactsPage/ContactForm/ContactFormRow.tsx","pages/Contacts/types/contact.types.ts","pages/Contacts/ContactsPage/ContactForm/ContactImageUploader.tsx","pages/Contacts/ContactsPage/ContactForm/ContactFormElements.tsx","pages/Contacts/helpers/formMultipleFieldReducer.ts","pages/Contacts/helpers/sanitizeEmptyValueInArray.ts","pages/Contacts/ContactsPage/ContactForm/AddContactForm.tsx","pages/Contacts/ContactsPage/ContactForm/EditContactForm.tsx","pages/Contacts/ContactsPage/ContactsList/AddContactButton.tsx","pages/Contacts/ContactsPage/ContactsList/ContactsList.tsx","pages/Contacts/ContactsPage/ContactDetail/ContactDetail.tsx","pages/Contacts/ContactsPage/ContactDetail/ContactDetailHeader.tsx","pages/Contacts/ContactsPage/ContactDetail/ContactDetailRow.tsx","pages/Contacts/ContactsPage/ContactDetail/ContactDetailInfo.tsx","pages/Contacts/ContactsPage/ContactDetail/ContactDetailActions.tsx"],"sourcesContent":["import { ErrorBoundary } from 'shared/components';\nimport { ContactsList, ContactDetail } from './index';\n\nfunction ContactsPageInner() {\n\treturn (\n\t\t<section className=\"contacts-page h-full flex gap-x-5\">\n\t\t\t<ContactsList />\n\t\t\t<ContactDetail />\n\t\t</section>\n\t);\n}\n\nexport default function ContactsPage() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<ContactsPageInner />\n\t\t</ErrorBoundary>\n\t);\n}\n","import clsx from 'clsx';\nimport { get } from 'lodash';\nimport { ContactType } from 'pages/Contacts/types/contact.types';\nimport { memo, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { MdLockOutline } from 'react-icons/md';\nimport { ErrorBoundary } from 'shared/components';\nimport { AvatarSized } from 'shared/components/Elements';\nimport { useQueryParams } from 'shared/hooks';\nimport { useTranslationHelpers } from 'shared/hooks/useTranslationHelpers';\n\ntype Props = {\n\tphoto: ContactType['photo'];\n\tfirst_name: string;\n\tlast_name: string;\n\tphone_numbers: ContactType['phone_numbers'];\n\tid: ContactType['id'];\n\tcategoryList: ContactType['categories'];\n\tis_locked: ContactType['is_locked'];\n};\n\nconst ContactItemInner = memo(\n\t({\n\t\tid,\n\t\tphoto,\n\t\tfirst_name,\n\t\tlast_name,\n\t\tphone_numbers = [],\n\t\tcategoryList = [],\n\t\tis_locked\n\t}: Props) => {\n\t\tconst { t } = useTranslation();\n\t\tconst { isRTL } = useTranslationHelpers();\n\t\tconst { changeUrlParams, query } = useQueryParams();\n\n\t\tconst onContactItemClicked = useCallback(() => {\n\t\t\tchangeUrlParams({\n\t\t\t\tcategories: query.categories,\n\t\t\t\tcontact: id\n\t\t\t});\n\t\t}, [id, query.categories]);\n\t\tconst isContactOpened = id === Number(query.contact);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tonClick={onContactItemClicked}\n\t\t\t\tclassName={clsx(\n\t\t\t\t\t'contact-item my-1.5 flex items-center border-b-1px border-kgrey-icon-bg  py-2 transition-colors duration-150 first:rounded-t-md hover:bg-primary-300  dark:text-white dark:hover:bg-primary-300',\n\t\t\t\t\tisContactOpened\n\t\t\t\t\t\t? 'bg-primary-300 dark:bg-primary-300'\n\t\t\t\t\t\t: 'bg-kgrey-bgmenu dark:bg-kdark-dark333'\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<AvatarSized\n\t\t\t\t\tclassName=\"contact-item__avatar mx-3 inline-block\"\n\t\t\t\t\tletter={`${first_name[0]?.toUpperCase()}${last_name[0]?.toUpperCase()}`}\n\t\t\t\t\tsrc={get(photo, 'thumbnail_150')}\n\t\t\t\t\tsize={50}\n\t\t\t\t/>\n\t\t\t\t<div className=\"contact-item__info inline-block \">\n\t\t\t\t\t<p className=\"contact-item__info--fullname text-sm text-kgrey-menuText dark:text-kgrey-light-grey-3\">\n\t\t\t\t\t\t{first_name} {last_name}\n\t\t\t\t\t</p>\n\t\t\t\t\t<h3 className=\"contact-item__info--phone text-base font-medium text-kdark dark:text-white\">\n\t\t\t\t\t\t{phone_numbers[0]?.number}\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t<small className=\"contact-item__info--category text-xs text-kgrey\">\n\t\t\t\t\t\t{categoryList.length ? `${t('category')}: ${categoryList[0].name}` : null}\n\t\t\t\t\t</small>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"contact-item__extra relative flex-1 justify-self-end\">\n\t\t\t\t\t{is_locked ? (\n\t\t\t\t\t\t<MdLockOutline className={clsx('absolute -top-5', isRTL ? 'left-5' : 'right-5')} />\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n);\n\nContactItemInner.displayName = 'ContactItemInner';\n\nexport function ContactItem(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<ContactItemInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import { useTranslation } from 'react-i18next';\nimport { ErrorBoundary, LoadMoreVisible, Loader } from 'shared/components';\nimport EntityContainer from 'modules/entity/containers';\nimport { useAppState } from 'shared/state';\nimport Scrollbars from 'react-custom-scrollbars-2';\nimport { ContactItem } from './ContactItem';\nimport { Skeleton } from 'shared/components/Elements';\nimport { ContactType } from 'pages/Contacts/types/contact.types';\nimport { useQueryParams } from 'shared/hooks';\nimport { useEffect, useState } from 'react';\nimport { contactEventChannel } from 'eventChannels/contact';\n\ntype Props = { searchQuery: string };\n\nfunction ContactsListItemsInner({ searchQuery }: Props) {\n\tconst { t } = useTranslation();\n\tconst { companyId } = useAppState();\n\tconst { query } = useQueryParams<{ categories: string }>();\n\tconst [page, setPage] = useState(1);\n\tconst [searchPage, setSearchPage] = useState(1);\n\n\tuseEffect(() => {\n\t\tconst computedPage = page === 1 ? 0 : 1;\n\n\t\tconst unSubscribeContactRefetch = contactEventChannel.on('refetchContactList', () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetSearchPage(computedPage);\n\t\t\t\tsetPage(computedPage);\n\t\t\t}, 0);\n\t\t});\n\n\t\treturn () => {\n\t\t\tunSubscribeContactRefetch();\n\t\t};\n\t}, [page]);\n\n\tuseEffect(() => {\n\t\tsetSearchPage(1);\n\t\tsetPage(1);\n\t}, [searchQuery, query?.categories]);\n\n\treturn (\n\t\t<div className=\"contact-list-items cursor-pointer pt-3.5\">\n\t\t\t{companyId ? (\n\t\t\t\t<EntityContainer.All\n\t\t\t\t\tentity=\"contacts\"\n\t\t\t\t\tname={`AllContacts-${companyId}`}\n\t\t\t\t\turl={`/${companyId}/contacts/`}\n\t\t\t\t\tdataKey=\"results\"\n\t\t\t\t\tparams={{\n\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\tsearch: searchQuery,\n\t\t\t\t\t\t\tcategories: query?.categories\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlimit: 50,\n\t\t\t\t\t\tpage: searchQuery?.length ? searchPage : page\n\t\t\t\t\t}}\n\t\t\t\t\tappendData\n\t\t\t\t\treplaceIds={(page === 1 || page === 0) && !searchQuery.length}\n\t\t\t\t>\n\t\t\t\t\t{({ items, meta, isFetched }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{meta?.count ? (\n\t\t\t\t\t\t\t\t\t<h3 className=\"contact-list-items__total-count py-2 text-sm dark:text-kgrey-light-grey-3\">\n\t\t\t\t\t\t\t\t\t\t{meta?.count} {t('contacts_lower')}\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t<Scrollbars className=\"rct-scroll\" autoHide style={{ height: '70vh' }}>\n\t\t\t\t\t\t\t\t\t{items.length > 0 ? (\n\t\t\t\t\t\t\t\t\t\t<div className=\"contact-list-items__wrapper\">\n\t\t\t\t\t\t\t\t\t\t\t{(items as ContactType[]).map((contactItem) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<ContactItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tis_locked={contactItem.is_locked}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategoryList={contactItem.categories}\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={contactItem.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={contactItem.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfirst_name={contactItem.first_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast_name={contactItem.last_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\tphone_numbers={contactItem.phone_numbers}\n\t\t\t\t\t\t\t\t\t\t\t\t\tphoto={contactItem.photo}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : !isFetched ? (\n\t\t\t\t\t\t\t\t\t\t<Loader tiled />\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</Scrollbars>\n\n\t\t\t\t\t\t\t\t{!isFetched && items.length === 0 ? <Skeleton variant=\"rect\" height={35} /> : null}\n\t\t\t\t\t\t\t\t{isFetched &&\n\t\t\t\t\t\t\t\tmeta?.current_page &&\n\t\t\t\t\t\t\t\tmeta?.last_page &&\n\t\t\t\t\t\t\t\tmeta?.current_page < meta?.last_page ? (\n\t\t\t\t\t\t\t\t\t<LoadMoreVisible\n\t\t\t\t\t\t\t\t\t\tsetPage={() => {\n\t\t\t\t\t\t\t\t\t\t\tif (meta.current_page !== page) {\n\t\t\t\t\t\t\t\t\t\t\t\tsetPage(meta.current_page as number);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tsearchQuery.length ? setSearchPage(searchPage + 1) : setPage(page + 1);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityContainer.All>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n\nexport function ContactsListItems(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<ContactsListItemsInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import { ChangeEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SearchInput } from 'shared/components';\n\ntype Props = {\n\tquery: string;\n\tonSearchInput: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport default function ContactsListHeaderSearch({ query, onSearchInput }: Props) {\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<div className=\"list-header__search relative h-10 flex-1\">\n\t\t\t<SearchInput\n\t\t\t\tcustomPlaceholder={t('search_contacts')}\n\t\t\t\tquery={query}\n\t\t\t\thandleInput={onSearchInput}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import clsx from 'clsx';\nimport { useQueryParams } from 'shared/hooks';\n\nexport function ContactsFilterIcon() {\n\tconst { query } = useQueryParams();\n\treturn (\n\t\t<span\n\t\t\tclassName={clsx(\n\t\t\t\t'inline-block rounded-full p-2 align-middle transition-colors duration-150 hover:bg-primary-300  dark:hover:bg-primary-300',\n\t\t\t\tquery?.categories ? 'bg-primary-300' : 'bg-kgrey-bg dark:bg-kdark-dark333'\n\t\t\t)}\n\t\t>\n\t\t\t<svg\n\t\t\t\tclassName=\"dark:text-kgrey-bg\"\n\t\t\t\twidth=\"24\"\n\t\t\t\theight=\"24\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tfill=\"#fff\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t>\n\t\t\t\t<path\n\t\t\t\t\td=\"M1.5 6.75H22.5\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\td=\"M5.25 12H18.75\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\td=\"M9.75 17.25H14.25\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</span>\n\t);\n}\n","import clsx from 'clsx';\nimport { ChangeEvent } from 'react';\nimport { Checkbox, FormControlLabel } from 'shared/components/Elements';\nimport { useTranslationHelpers } from 'shared/hooks/useTranslationHelpers';\n\ntype Props = {\n\ttitle: string;\n\tchecked: boolean;\n\tonToggleChecked: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport function ContactFilterFormItem({ title, checked, onToggleChecked }: Props) {\n\tconst { isRTL } = useTranslationHelpers();\n\treturn (\n\t\t<div className=\"contact-filter-form__filter-item flex-center-between py-1\">\n\t\t\t<h3 className=\"contact-filter-form__filter-item--title\">{title}</h3>\n\t\t\t<FormControlLabel\n\t\t\t\tclasses={{ root: '!mr-0' }}\n\t\t\t\tclassName={clsx({ 'right-0': !isRTL, 'left-1': isRTL })}\n\t\t\t\tcontrol={<Checkbox onChange={onToggleChecked} checked={checked} color=\"primary\" />}\n\t\t\t\tlabel={null}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import { useTranslation } from 'react-i18next';\nimport { IoMdCloseCircle } from 'react-icons/io';\nimport { KntButton } from 'shared/components/Elements';\nimport { ContactFilterFormItem } from './ContactFilterFormItem';\nimport { useQueryParams } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\nimport { CategoryType } from 'pages/Contacts/types/category.types';\nimport { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport { LoadMoreVisible, Loader } from 'shared/components';\nimport Scrollbars from 'react-custom-scrollbars-2';\nimport EntityContainer from 'modules/entity/containers';\n\ntype Props = {\n\tonModalClose: () => void;\n};\n\nexport function ContactFilterForm({ onModalClose }: Props) {\n\tconst { t } = useTranslation();\n\tconst { companyId } = useAppState();\n\tconst { handleSort, query, removeOneQueryParam } = useQueryParams<{ categories: string }>();\n\tconst [filterCategoryIds, setFilterCategoryIds] = useState<(number | string)[]>(\n\t\tquery.categoies ? (query?.categories as string)?.split(',') : []\n\t);\n\tconst [page, setPage] = useState(1);\n\n\tuseEffect(() => {\n\t\tif (query.categories) {\n\t\t\tsetFilterCategoryIds((query.categories as string).split(',').map(Number));\n\t\t}\n\t}, []);\n\n\tconst onFilterItemCheckToggled = useCallback((categoryId: number) => {\n\t\treturn (e: ChangeEvent<HTMLInputElement>) => {\n\t\t\tif (e.target.checked) {\n\t\t\t\tsetFilterCategoryIds((prevFilterCategoryIds) => [...prevFilterCategoryIds, categoryId]);\n\t\t\t} else {\n\t\t\t\tsetFilterCategoryIds((prevFilterCategoryIds) =>\n\t\t\t\t\tprevFilterCategoryIds.filter((id) => id !== categoryId)\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t}, []);\n\n\tconst onShowResultClicked = useCallback(() => {\n\t\thandleSort(filterCategoryIds.join(',') as any, 'categories');\n\t\tonModalClose();\n\t}, [filterCategoryIds]);\n\n\tconst onClearFilterClicked = useCallback(() => {\n\t\tsetTimeout(() => {\n\t\t\tsetFilterCategoryIds([]);\n\t\t\tremoveOneQueryParam('categories');\n\t\t}, 100);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"contact-filter-form\">\n\t\t\t<div className=\"contact-filter-form__top flex items-center justify-between\">\n\t\t\t\t<h3 className=\"contact-filter-form__top--title\">{t('filter')}</h3>\n\t\t\t\t<IoMdCloseCircle className=\"cursor-pointer\" size={24} onClick={onModalClose} />\n\t\t\t</div>\n\t\t\t<div className=\"py-5\">\n\t\t\t\t<EntityContainer.All\n\t\t\t\t\tentity=\"contact-filter\"\n\t\t\t\t\tname={`AllContactFilters-${companyId}`}\n\t\t\t\t\turl={`/${companyId}/contacts/category/`}\n\t\t\t\t\tdataKey=\"results\"\n\t\t\t\t\tparams={{\n\t\t\t\t\t\tlimit: 50,\n\t\t\t\t\t\tpage\n\t\t\t\t\t}}\n\t\t\t\t\tappendData\n\t\t\t\t\treplaceIds={page === 1}\n\t\t\t\t>\n\t\t\t\t\t{({ meta, items, isFetched }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Scrollbars className=\"rct-scroll\" autoHide style={{ height: '400px' }}>\n\t\t\t\t\t\t\t\t\t{items.length > 0 ? (\n\t\t\t\t\t\t\t\t\t\t(items as CategoryType[]).map((category) => (\n\t\t\t\t\t\t\t\t\t\t\t<ContactFilterFormItem\n\t\t\t\t\t\t\t\t\t\t\t\tkey={category.id}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={category.name}\n\t\t\t\t\t\t\t\t\t\t\t\tonToggleChecked={onFilterItemCheckToggled(category.id)}\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={filterCategoryIds.includes(category.id)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t) : !isFetched ? (\n\t\t\t\t\t\t\t\t\t\t<Loader tiled />\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</Scrollbars>\n\n\t\t\t\t\t\t\t\t{isFetched &&\n\t\t\t\t\t\t\t\tmeta?.current_page &&\n\t\t\t\t\t\t\t\tmeta?.last_page &&\n\t\t\t\t\t\t\t\tmeta?.current_page < meta?.last_page ? (\n\t\t\t\t\t\t\t\t\t<LoadMoreVisible\n\t\t\t\t\t\t\t\t\t\tsetPage={() => {\n\t\t\t\t\t\t\t\t\t\t\tif (meta.current_page !== page) {\n\t\t\t\t\t\t\t\t\t\t\t\tsetPage(meta.current_page as number);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tsetPage(page + 1);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityContainer.All>\n\t\t\t</div>\n\n\t\t\t<div className=\"contact-filter-form__footer flex justify-end space-x-3\">\n\t\t\t\t<KntButton onClick={onClearFilterClicked}>{t('clear_filter')}</KntButton>\n\t\t\t\t<KntButton onClick={onShowResultClicked} color=\"primary\">\n\t\t\t\t\t{t('show_result')}\n\t\t\t\t</KntButton>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { useWhiteModal } from 'shared/hooks';\nimport { ContactsFilterIcon } from 'shared/icons/ContactsFilterIcon';\nimport { ContactFilterForm } from './ContactFilterForm';\nimport { memo } from 'react';\n\nconst ContactsListHeaderFilter = memo(() => {\n\tconst { WhiteModal, open, modalHandler } = useWhiteModal();\n\treturn (\n\t\t<div className=\"list-header__filter cursor-pointer\">\n\t\t\t<span onClick={modalHandler}>\n\t\t\t\t<ContactsFilterIcon />\n\t\t\t</span>\n\t\t\t<WhiteModal open={open} handleModalOpen={modalHandler}>\n\t\t\t\t<ContactFilterForm onModalClose={modalHandler} />\n\t\t\t</WhiteModal>\n\t\t</div>\n\t);\n});\n\nContactsListHeaderFilter.displayName = 'ContactsListHeaderFilter';\n\nexport default ContactsListHeaderFilter;\n","import { ErrorBoundary } from 'shared/components';\nimport { ContactsFilterIcon } from 'shared/icons/ContactsFilterIcon';\nimport ContactsListHeaderSearch from './ContactsListHeaderSearch';\nimport ContactsListHeaderFilter from './ContactsListHeaderFilter';\nimport { ChangeEvent } from 'react';\n\ntype Props = {\n\tquery: string;\n\tonSearchInput: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nfunction ContactsListHeaderInner({ query, onSearchInput }: Props) {\n\treturn (\n\t\t<div className=\"list__header flex items-center gap-x-2.5\">\n\t\t\t<ContactsListHeaderSearch query={query} onSearchInput={onSearchInput} />\n\t\t\t<ContactsListHeaderFilter />\n\t\t</div>\n\t);\n}\n\nexport function ContactsListHeader(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<ContactsListHeaderInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","type Props = {\n\tchildren: React.ReactNode;\n\tonAddFieldClick: () => void;\n};\n\nexport function AddContactFieldButton({ children, onAddFieldClick }: Props) {\n\treturn (\n\t\t<span onClick={onAddFieldClick} className=\"add-contact-field-button cursor-pointer\">\n\t\t\t<svg\n\t\t\t\twidth=\"24\"\n\t\t\t\theight=\"24\"\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\tclassName=\"inline-block align-middle\"\n\t\t\t\tfill=\"none\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t>\n\t\t\t\t<rect width=\"24\" height=\"24\" rx=\"12\" fill=\"#00A09D\" />\n\t\t\t\t<g clipPath=\"url(#clip0_8042_5517)\">\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M12 8.63965V15.3596\"\n\t\t\t\t\t\tstroke=\"white\"\n\t\t\t\t\t\tstrokeWidth=\"0.96\"\n\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M8.63965 12H15.3596\"\n\t\t\t\t\t\tstroke=\"white\"\n\t\t\t\t\t\tstrokeWidth=\"0.96\"\n\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t/>\n\t\t\t\t</g>\n\t\t\t\t<defs>\n\t\t\t\t\t<clipPath id=\"clip0_8042_5517\">\n\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\twidth=\"11.52\"\n\t\t\t\t\t\t\theight=\"11.52\"\n\t\t\t\t\t\t\tfill=\"white\"\n\t\t\t\t\t\t\ttransform=\"translate(6.24023 6.24023)\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</clipPath>\n\t\t\t\t</defs>\n\t\t\t</svg>\n\t\t\t<span className=\"inline-block px-1.5 align-middle text-sm\">{children}</span>\n\t\t</span>\n\t);\n}\n","import clsx from 'clsx';\nimport { RemoveContactFieldIcon } from 'shared/icons';\nimport { AddContactFieldButton } from './AddContactFieldButton';\n\ntype Props = {\n\tfieldName: string;\n\trequired?: boolean;\n\tchildren: React.ReactNode;\n\tclassName?: string;\n\tshowRemoveFieldButton?: boolean;\n\tonRemoveFieldClicked?: () => void;\n\tshowAddFieldButton?: boolean;\n\taddFieldButtonText?: string;\n\tonAddFieldClicked?: () => void;\n};\n\nexport function ContactFormRow({\n\tfieldName,\n\trequired,\n\tchildren,\n\tclassName = '',\n\tshowRemoveFieldButton = false,\n\tonRemoveFieldClicked = () => {},\n\tshowAddFieldButton = false,\n\tonAddFieldClicked = () => {},\n\taddFieldButtonText = ''\n}: Props) {\n\treturn (\n\t\t<div className={clsx('contact-form-row mb-4', className)}>\n\t\t\t<div className=\"contact-form-row__top flex items-center justify-between\">\n\t\t\t\t{fieldName ? (\n\t\t\t\t\t<label className={clsx('ml-2 mb-2 block text-sm font-light text-kgrey-menuText')}>\n\t\t\t\t\t\t<span>{fieldName}</span>\n\t\t\t\t\t\t{required ? <sup>*</sup> : null}\n\t\t\t\t\t</label>\n\t\t\t\t) : null}\n\t\t\t\t{showRemoveFieldButton ? (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<RemoveContactFieldIcon onClick={onRemoveFieldClicked} />\n\t\t\t\t\t</span>\n\t\t\t\t) : null}\n\t\t\t</div>\n\n\t\t\t{children}\n\t\t\t{showAddFieldButton ? (\n\t\t\t\t<div className=\"contact-form-row__extra\">\n\t\t\t\t\t<AddContactFieldButton onAddFieldClick={onAddFieldClicked}>\n\t\t\t\t\t\t{addFieldButtonText}\n\t\t\t\t\t</AddContactFieldButton>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n","import { CategoryType } from './category.types';\n\nexport type ContactPhoneNumber = {\n\tid: number;\n\ttype: string;\n\tnumber: string;\n};\n\nexport type ContactEmail = {\n\tid: number;\n\ttype: string;\n\temail: string;\n};\n\nexport type ContactSocialProfile = {\n\tid: number;\n\ttype: string;\n\tusername: string;\n};\n\nexport type ContactAddress = {\n\tid: number;\n\tadress: string;\n};\n\nexport type ContactType = {\n\tid: number;\n\tcompany: number;\n\tfirst_name: string;\n\tlast_name: string;\n\tphoto: {\n\t\tthumbnail: string;\n\t\tthumbnail_150: string;\n\t} | null;\n\tbirthday: string | null;\n\tnotes: string | null;\n\tis_locked: boolean;\n\tphone_numbers: Array<ContactPhoneNumber>;\n\temails: Array<ContactEmail>;\n\tsocial_profiles: Array<ContactSocialProfile>;\n\taddresses: Array<ContactAddress>;\n\tcategories: Array<CategoryType>;\n\tcreated_by_id: number;\n};\n\nexport type MultipleFieldStateType = {\n\tphone_numbers: Array<{ type: string; number: string; code: string }>;\n\temails: Array<{ type: string; email: string; code: string }>;\n\tsocial_profiles: Array<{ type: string; username: string; code: string }>;\n};\n\nexport const enum MultipleFieldListNames {\n\tphone_numbers = 'phone_numbers',\n\temails = 'emails',\n\tsocial_profiles = 'social_profiles'\n}\n\nexport const enum MultipleFieldUniqueKeys {\n\tnumber = 'number',\n\temail = 'email',\n\tusername = 'username'\n}\n\nexport const enum MultipleFieldActionsTypes {\n\tADD_FIELD = 'ADD_FIELD',\n\tADD_EMAIL = 'ADD_EMAIL',\n\tADD_SOCIAL_PROFILES = 'ADD_SOCIAL_PROFILES',\n\tMODIFY_FIELD = 'MODIFY_FIELD',\n\tREMOVE_FIELD = 'REMOVE_FIELD'\n}\n\nexport type MultipleFieldActionType =\n\t| {\n\t\t\ttype: MultipleFieldActionsTypes.ADD_FIELD;\n\t\t\tpayload: { type: string; fieldValue: string; code: string };\n\t\t\tfieldListName: string;\n\t\t\tuniqueFieldKey: string;\n\t\t\tsetFieldValue: (name: string, value: any, shouldValidate?: boolean) => void;\n\t  }\n\t| {\n\t\t\ttype: MultipleFieldActionsTypes.MODIFY_FIELD;\n\t\t\tpayload: { type: string; fieldValue: string | null; index: number; code: string };\n\t\t\tfieldListName: string;\n\t\t\tuniqueFieldKey: string;\n\t\t\tsetFieldValue: (name: string, value: any, shouldValidate?: boolean) => void;\n\t  }\n\t| {\n\t\t\ttype: MultipleFieldActionsTypes.REMOVE_FIELD;\n\t\t\tpayload: { index: number };\n\t\t\tfieldListName: string;\n\t\t\tsetFieldValue: (name: string, value: any, shouldValidate?: boolean) => void;\n\t  };\n","import config from 'config';\nimport { get } from 'lodash';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { ActionsButtons, FileUploader, Loader } from 'shared/components';\n\nconst imgPath = `${config.PUBLIC_ASSETS}img/`;\n\ntype Props = {\n\tsetFieldValue: (name: string, value: any) => void;\n\tphoto: Record<string, any> | null;\n};\n\nexport function ContactImageUploader({ setFieldValue, photo }: Props) {\n\tconst [uploadMeta, setUploadMeta] = useState(null);\n\tconst [cancelSending, setCancelSending] = useState(false);\n\tconst [file, setFile] = useState(photo);\n\tconst fileUploaderRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tif (file) {\n\t\t\tsetFieldValue('photo', file);\n\t\t}\n\t}, [file]);\n\n\tconst onUploadClick = useCallback(() => {\n\t\t(fileUploaderRef?.current as any)?.uploader?.onClick();\n\t}, [fileUploaderRef]);\n\n\tconst onDeleteClick = useCallback(() => {\n\t\tsetFile(null);\n\t\tsetFieldValue('photo', null);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"contact-image-uploader flex-center-center mb-4\">\n\t\t\t<div className=\"mr-4 hidden\">\n\t\t\t\t<FileUploader\n\t\t\t\t\tref={fileUploaderRef}\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\tuploadMeta={uploadMeta}\n\t\t\t\t\tsetUploadMeta={setUploadMeta}\n\t\t\t\t\tcancelSending={cancelSending}\n\t\t\t\t\tsetCancelSending={setCancelSending}\n\t\t\t\t\tsetFile={setFile}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"contact-avatar-box__display flex-centered group relative h-20 w-20 overflow-hidden rounded-full\">\n\t\t\t\t<img\n\t\t\t\t\tonClick={onUploadClick}\n\t\t\t\t\tsrc={get(file, 'thumbnail_150') || `${imgPath}contact-image-upload-placeholder.png`}\n\t\t\t\t\talt=\"\"\n\t\t\t\t\tclassName={'h-full object-cover'}\n\t\t\t\t/>\n\t\t\t\t{file && !uploadMeta && (\n\t\t\t\t\t<div className=\"absolute bottom-0 left-0 hidden h-1/3 w-full justify-center bg-kgrey-bg group-hover:flex\">\n\t\t\t\t\t\t<ActionsButtons.DeleteButton clickHandler={onDeleteClick} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{uploadMeta !== null && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={'absolute top-1/2 left-1/2 z-10 h-10 w-10 -translate-y-1/2 -translate-x-1/2'}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"upload-media-spinner\">\n\t\t\t\t\t\t\t<Loader variant=\"determinate\" value={uploadMeta} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetCancelSending(true);\n\t\t\t\t\t\t\t\tsetUploadMeta(null);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t'absolute top-1/2 left-1/2 z-20 h-8 w-8 -translate-y-1/2 -translate-x-1/2 ' +\n\t\t\t\t\t\t\t\t'cursor-pointer text-3xl text-primary-dark transition hover:text-primary'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AiOutlineCloseCircle />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import DayjsUtils from '@date-io/dayjs';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { Field } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { AsyncSelect, KntButton } from 'shared/components';\nimport { CustomDatePicker, InputWithSelect, KntInputField } from 'shared/components/Fields';\nimport { ContactFormSelectStyle } from 'shared/services';\nimport { ContactFormRow } from './ContactFormRow';\nimport { ContactImageUploader } from './ContactImageUploader';\nimport { useAppState } from 'shared/state';\nimport { ChangeEvent, Dispatch } from 'react';\nimport {\n\tMultipleFieldActionType,\n\tMultipleFieldActionsTypes,\n\tMultipleFieldListNames,\n\tMultipleFieldUniqueKeys\n} from 'pages/Contacts/types/contact.types';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\n\ntype Props = {\n\tonModalClose: () => void;\n\tsetFieldValue: (name: string, value: any, shouldValidate?: boolean) => void;\n\tvalues: any;\n\tdispatch: Dispatch<MultipleFieldActionType>;\n\tisSubmitting: boolean;\n\tisEditForm: boolean;\n};\n\ntype MultipleFieldInputChangeArgType = {\n\tevent: ChangeEvent<HTMLInputElement>;\n\titem: { type: string; code: string };\n\tindex: number;\n\tuniqueFieldKey: keyof typeof MultipleFieldUniqueKeys;\n\tfieldListName: keyof typeof MultipleFieldListNames;\n};\n\nexport function ContactFormElements({\n\tonModalClose,\n\tsetFieldValue,\n\tvalues,\n\tdispatch = () => {},\n\tisSubmitting,\n\tisEditForm = false\n}: Props) {\n\tconst { t } = useTranslation();\n\tconst { companyId } = useAppState();\n\n\tconst fieldInputChangeHandler = ({\n\t\tevent,\n\t\titem,\n\t\tindex,\n\t\tuniqueFieldKey,\n\t\tfieldListName\n\t}: MultipleFieldInputChangeArgType) => {\n\t\tdispatch({\n\t\t\ttype: MultipleFieldActionsTypes.MODIFY_FIELD,\n\t\t\tpayload: {\n\t\t\t\tindex,\n\t\t\t\tfieldValue: event.target?.value,\n\t\t\t\ttype: item?.type,\n\t\t\t\tcode: item?.code\n\t\t\t},\n\t\t\tfieldListName,\n\t\t\tuniqueFieldKey,\n\t\t\tsetFieldValue\n\t\t});\n\t};\n\n\treturn (\n\t\t<MuiPickersUtilsProvider utils={DayjsUtils}>\n\t\t\t<div className=\"contact-form-elments\">\n\t\t\t\t<ContactImageUploader photo={values.photo} setFieldValue={setFieldValue} />\n\t\t\t\t<div className=\"contact-form-elements__main grid grid-cols-3 gap-x-2.5\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabel={t('first_name')}\n\t\t\t\t\t\tname=\"first_name\"\n\t\t\t\t\t\tplaceholder={t('enter_first_name')}\n\t\t\t\t\t\tonBlur={(e: any) => {\n\t\t\t\t\t\t\tsetFieldValue(e.target.name, e.target?.value?.trim(), true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcomponent={KntInputField}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabel={t('last_name')}\n\t\t\t\t\t\tname=\"last_name\"\n\t\t\t\t\t\tplaceholder={t('enter_last_name')}\n\t\t\t\t\t\tonBlur={(e: any) => {\n\t\t\t\t\t\t\tsetFieldValue(e.target.name, e.target?.value?.trim(), true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcomponent={KntInputField}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabel={t('birthday')}\n\t\t\t\t\t\tname=\"birthday\"\n\t\t\t\t\t\tplaceholder=\"dd/mm/yyyy\"\n\t\t\t\t\t\tformat=\"DD-MM-YYYY\"\n\t\t\t\t\t\tcomponent={CustomDatePicker}\n\t\t\t\t\t\tshouldDisableDate={(date: MaterialUiPickersDate) => {\n\t\t\t\t\t\t\tconst today = new Date();\n\t\t\t\t\t\t\ttoday.setHours(0, 0, 0, 0);\n\t\t\t\t\t\t\treturn date ? date?.toDate() >= today : false;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdateValue={values.birthday}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{values?.[MultipleFieldListNames.phone_numbers]?.map(\n\t\t\t\t\t(item: any, index: number, itemsList: any[]) => (\n\t\t\t\t\t\t<ContactFormRow\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tfieldName={t('phone_number')}\n\t\t\t\t\t\t\tshowRemoveFieldButton={index > 0}\n\t\t\t\t\t\t\tonRemoveFieldClicked={() => {\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: MultipleFieldActionsTypes.REMOVE_FIELD,\n\t\t\t\t\t\t\t\t\tpayload: { index },\n\t\t\t\t\t\t\t\t\tfieldListName: MultipleFieldListNames.phone_numbers,\n\t\t\t\t\t\t\t\t\tsetFieldValue\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tshowAddFieldButton={itemsList.length - 1 === index}\n\t\t\t\t\t\t\tonAddFieldClicked={() => {\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: MultipleFieldActionsTypes.ADD_FIELD,\n\t\t\t\t\t\t\t\t\tfieldListName: MultipleFieldListNames.phone_numbers,\n\t\t\t\t\t\t\t\t\tuniqueFieldKey: MultipleFieldUniqueKeys.number,\n\t\t\t\t\t\t\t\t\tpayload: { type: 'Work', code: 'WORK', fieldValue: '' },\n\t\t\t\t\t\t\t\t\tsetFieldValue\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\taddFieldButtonText={t('add_phone_number')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<InputWithSelect\n\t\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\t\tvalue={item.number}\n\t\t\t\t\t\t\t\tname={`phone_number-${index}`}\n\t\t\t\t\t\t\t\tonInputChange={(e: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\t\t\t\tfieldInputChangeHandler({\n\t\t\t\t\t\t\t\t\t\tevent: e,\n\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\tuniqueFieldKey: MultipleFieldUniqueKeys.number,\n\t\t\t\t\t\t\t\t\t\tfieldListName: MultipleFieldListNames.phone_numbers\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tselectProps={{\n\t\t\t\t\t\t\t\t\tloadOptionsUrl: `/${companyId}/contacts/phone_email_network_types/`,\n\t\t\t\t\t\t\t\t\tloadOptionsKey: 'phone_number_types.choices',\n\t\t\t\t\t\t\t\t\tloadOptionsParams: {\n\t\t\t\t\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'phone_number_types'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tvalue: { name: item.type, code: item.code },\n\t\t\t\t\t\t\t\t\toptionLabel: 'name',\n\t\t\t\t\t\t\t\t\toptionValue: (option: { name: string; code: string }) => option.code,\n\t\t\t\t\t\t\t\t\tonChange: (option: { name: string; code: string }) => {\n\t\t\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\t\t\ttype: MultipleFieldActionsTypes.MODIFY_FIELD,\n\t\t\t\t\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\ttype: option?.name,\n\t\t\t\t\t\t\t\t\t\t\t\tcode: option?.code,\n\t\t\t\t\t\t\t\t\t\t\t\tfieldValue: null\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tfieldListName: MultipleFieldListNames.phone_numbers,\n\t\t\t\t\t\t\t\t\t\t\tuniqueFieldKey: MultipleFieldUniqueKeys.number,\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ContactFormRow>\n\t\t\t\t\t)\n\t\t\t\t)}\n\n\t\t\t\t{values?.[MultipleFieldListNames.emails]?.map(\n\t\t\t\t\t(item: any, index: number, itemsList: any[]) => (\n\t\t\t\t\t\t<ContactFormRow\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tfieldName={t('email_address')}\n\t\t\t\t\t\t\tshowRemoveFieldButton={index > 0}\n\t\t\t\t\t\t\tonRemoveFieldClicked={() => {\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: MultipleFieldActionsTypes.REMOVE_FIELD,\n\t\t\t\t\t\t\t\t\tpayload: { index },\n\t\t\t\t\t\t\t\t\tfieldListName: MultipleFieldListNames.emails,\n\t\t\t\t\t\t\t\t\tsetFieldValue\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tshowAddFieldButton={itemsList.length - 1 === index}\n\t\t\t\t\t\t\tonAddFieldClicked={() => {\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: MultipleFieldActionsTypes.ADD_FIELD,\n\t\t\t\t\t\t\t\t\tfieldListName: MultipleFieldListNames.emails,\n\t\t\t\t\t\t\t\t\tuniqueFieldKey: MultipleFieldUniqueKeys.email,\n\t\t\t\t\t\t\t\t\tpayload: { type: 'Work', code: 'WORK', fieldValue: '' },\n\t\t\t\t\t\t\t\t\tsetFieldValue\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\taddFieldButtonText={t('add_email_address')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<InputWithSelect\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tvalue={item.email}\n\t\t\t\t\t\t\t\tname={`email_address-${index}`}\n\t\t\t\t\t\t\t\tonInputChange={(e: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\t\t\t\tfieldInputChangeHandler({\n\t\t\t\t\t\t\t\t\t\tevent: e,\n\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\tuniqueFieldKey: MultipleFieldUniqueKeys.email,\n\t\t\t\t\t\t\t\t\t\tfieldListName: MultipleFieldListNames.emails\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tselectProps={{\n\t\t\t\t\t\t\t\t\tloadOptionsUrl: `/${companyId}/contacts/phone_email_network_types/`,\n\t\t\t\t\t\t\t\t\tloadOptionsKey: 'email_types.choices',\n\t\t\t\t\t\t\t\t\tloadOptionsParams: {\n\t\t\t\t\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'email_types'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tvalue: { name: item.type, code: item.code },\n\t\t\t\t\t\t\t\t\toptionLabel: 'name',\n\t\t\t\t\t\t\t\t\toptionValue: (option: { name: string; code: string }) => option.code,\n\t\t\t\t\t\t\t\t\tonChange: (option: { name: string; code: string }) => {\n\t\t\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\t\t\ttype: MultipleFieldActionsTypes.MODIFY_FIELD,\n\t\t\t\t\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\ttype: option?.name,\n\t\t\t\t\t\t\t\t\t\t\t\tcode: option?.code,\n\t\t\t\t\t\t\t\t\t\t\t\tfieldValue: null\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tfieldListName: MultipleFieldListNames.emails,\n\t\t\t\t\t\t\t\t\t\t\tuniqueFieldKey: MultipleFieldUniqueKeys.email,\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ContactFormRow>\n\t\t\t\t\t)\n\t\t\t\t)}\n\n\t\t\t\t<ContactFormRow className=\"react-select-dropdown\" fieldName={t('category')}>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tname=\"categories\"\n\t\t\t\t\t\tlabel={t('category')}\n\t\t\t\t\t\tloadOptionsUrl={`/${companyId}/contacts/category/`}\n\t\t\t\t\t\tloadOptionsKey=\"results\"\n\t\t\t\t\t\toptionLabel=\"name\"\n\t\t\t\t\t\tplaceholder={t('select_category')}\n\t\t\t\t\t\tcustomStylesProps={ContactFormSelectStyle}\n\t\t\t\t\t\tvalue={values.categories}\n\t\t\t\t\t\tonChange={(option: any) => {\n\t\t\t\t\t\t\tsetFieldValue('categories', option);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcomponent={AsyncSelect}\n\t\t\t\t\t\talwaysRefetch\n\t\t\t\t\t\tisMulti\n\t\t\t\t\t/>\n\t\t\t\t</ContactFormRow>\n\t\t\t\t<Field\n\t\t\t\t\tname=\"addresses\"\n\t\t\t\t\tlabel={t('address')}\n\t\t\t\t\tplaceholder={t('enter_address')}\n\t\t\t\t\tcomponent={KntInputField}\n\t\t\t\t/>\n\t\t\t\t{values?.[MultipleFieldListNames.social_profiles]?.map(\n\t\t\t\t\t(item: any, index: number, itemsList: any[]) => (\n\t\t\t\t\t\t<ContactFormRow\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tfieldName={t('social_profiles')}\n\t\t\t\t\t\t\tshowRemoveFieldButton={index > 0}\n\t\t\t\t\t\t\tonRemoveFieldClicked={() => {\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: MultipleFieldActionsTypes.REMOVE_FIELD,\n\t\t\t\t\t\t\t\t\tpayload: { index },\n\t\t\t\t\t\t\t\t\tfieldListName: MultipleFieldListNames.social_profiles,\n\t\t\t\t\t\t\t\t\tsetFieldValue\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tshowAddFieldButton={itemsList.length - 1 === index}\n\t\t\t\t\t\t\tonAddFieldClicked={() => {\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: MultipleFieldActionsTypes.ADD_FIELD,\n\t\t\t\t\t\t\t\t\tfieldListName: MultipleFieldListNames.social_profiles,\n\t\t\t\t\t\t\t\t\tuniqueFieldKey: MultipleFieldUniqueKeys.username,\n\t\t\t\t\t\t\t\t\tpayload: { type: 'X', code: 'X', fieldValue: '' },\n\t\t\t\t\t\t\t\t\tsetFieldValue\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\taddFieldButtonText={t('add_social_profile')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<InputWithSelect\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={item.username}\n\t\t\t\t\t\t\t\tname={`social_profiles-${index}`}\n\t\t\t\t\t\t\t\tonInputChange={(e: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\t\t\t\tfieldInputChangeHandler({\n\t\t\t\t\t\t\t\t\t\tevent: e,\n\t\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\tuniqueFieldKey: MultipleFieldUniqueKeys.username,\n\t\t\t\t\t\t\t\t\t\tfieldListName: MultipleFieldListNames.social_profiles\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tselectProps={{\n\t\t\t\t\t\t\t\t\tloadOptionsUrl: `/${companyId}/contacts/phone_email_network_types/`,\n\t\t\t\t\t\t\t\t\tloadOptionsKey: 'social_network_types.choices',\n\t\t\t\t\t\t\t\t\tloadOptionsParams: {\n\t\t\t\t\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'social_network_types'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tvalue: { name: item.type, code: item.code },\n\t\t\t\t\t\t\t\t\toptionLabel: 'name',\n\t\t\t\t\t\t\t\t\toptionValue: (option: { name: string; code: string }) => option.code,\n\t\t\t\t\t\t\t\t\tonChange: (option: { name: string; code: string }) => {\n\t\t\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\t\t\ttype: MultipleFieldActionsTypes.MODIFY_FIELD,\n\t\t\t\t\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\ttype: option?.name,\n\t\t\t\t\t\t\t\t\t\t\t\tcode: option?.code,\n\t\t\t\t\t\t\t\t\t\t\t\tfieldValue: null\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tfieldListName: MultipleFieldListNames.social_profiles,\n\t\t\t\t\t\t\t\t\t\t\tuniqueFieldKey: MultipleFieldUniqueKeys.username,\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ContactFormRow>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t\t<Field\n\t\t\t\t\tname=\"notes\"\n\t\t\t\t\tlabel={t('notes')}\n\t\t\t\t\tplaceholder={t('enter_note')}\n\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\tcomponent={KntInputField}\n\t\t\t\t/>\n\t\t\t\t<div className=\"contact-form-elements__buttons flex-center-end space-x-2.5\">\n\t\t\t\t\t<KntButton onClick={onModalClose}>{t('cancel')}</KntButton>\n\t\t\t\t\t<KntButton isSubmitting={isSubmitting} color=\"primary\" type=\"submit\">\n\t\t\t\t\t\t{isEditForm ? t('save_changes') : t('save')}\n\t\t\t\t\t</KntButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t);\n}\n","import {\n\tMultipleFieldActionType,\n\tMultipleFieldActionsTypes,\n\tMultipleFieldStateType\n} from '../types/contact.types';\n\nexport function formMultipleFieldReducer(\n\tstate: MultipleFieldStateType,\n\taction: MultipleFieldActionType\n) {\n\tswitch (action.type) {\n\t\tcase MultipleFieldActionsTypes.REMOVE_FIELD: {\n\t\t\tconst modifiedList = [...(state as any)?.[action.fieldListName]].filter(\n\t\t\t\t(_, index) => index !== action.payload?.index\n\t\t\t);\n\n\t\t\taction.setFieldValue(action.fieldListName, modifiedList);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[action.fieldListName]: modifiedList\n\t\t\t};\n\t\t}\n\t\tcase MultipleFieldActionsTypes.MODIFY_FIELD: {\n\t\t\tconst { index, fieldValue, type, code } = action.payload;\n\n\t\t\tconst modifiedFieldList = (state as any)[action.fieldListName].slice();\n\n\t\t\tmodifiedFieldList[index] = {\n\t\t\t\t...modifiedFieldList[index],\n\t\t\t\ttype,\n\t\t\t\t[action.uniqueFieldKey]:\n\t\t\t\t\tfieldValue ?? (modifiedFieldList as any)[index][action.uniqueFieldKey],\n\t\t\t\tcode\n\t\t\t};\n\n\t\t\taction.setFieldValue(action.fieldListName, modifiedFieldList);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[action.fieldListName]: modifiedFieldList\n\t\t\t};\n\t\t}\n\t\tcase MultipleFieldActionsTypes.ADD_FIELD: {\n\t\t\tconst { type, code, fieldValue } = action.payload;\n\t\t\tconst newField = {\n\t\t\t\ttype,\n\t\t\t\tcode,\n\t\t\t\t[action.uniqueFieldKey]: fieldValue\n\t\t\t};\n\t\t\tconst modifiedList = [...(state as any)[action.fieldListName], newField];\n\n\t\t\taction.setFieldValue(action.fieldListName, modifiedList);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[action.fieldListName]: modifiedList\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","import { isEmpty } from 'lodash';\n\nexport const sanitizeEmptyValueInArray = (list: any[], keyToCheck: string) => {\n\tif (!(list.length > 0)) return [];\n\n\treturn list\n\t\t.map((field) => ({ type: field.code, [keyToCheck]: field[keyToCheck] }))\n\t\t.filter((item) => !isEmpty(item[keyToCheck]));\n};\n","import EntityForm from 'modules/entity/forms';\nimport { useReducer } from 'react';\nimport { useAppState } from 'shared/state';\nimport { ContactFormElements } from './ContactFormElements';\nimport { useLoadAll, useNotistack, useQueryParams } from 'shared/hooks';\nimport { CategoryType } from 'pages/Contacts/types/category.types';\nimport { useTranslation } from 'react-i18next';\nimport { formMultipleFieldReducer } from 'pages/Contacts/helpers/formMultipleFieldReducer';\nimport { sanitizeEmptyValueInArray } from 'pages/Contacts/helpers/sanitizeEmptyValueInArray';\n\nexport function AddContactForm({ onModalClose }: { onModalClose: () => void }) {\n\tconst { companyId } = useAppState();\n\tconst { changeUrlParams, query } = useQueryParams();\n\tconst [state, dispatch] = useReducer(formMultipleFieldReducer, {\n\t\tphone_numbers: [\n\t\t\t{\n\t\t\t\ttype: 'Mobile',\n\t\t\t\tcode: 'MOBILE',\n\t\t\t\tnumber: ''\n\t\t\t}\n\t\t],\n\t\temails: [\n\t\t\t{\n\t\t\t\ttype: 'Work',\n\t\t\t\tcode: 'WORK',\n\t\t\t\temail: ''\n\t\t\t}\n\t\t],\n\t\tsocial_profiles: [\n\t\t\t{\n\t\t\t\ttype: 'X',\n\t\t\t\tcode: 'X',\n\t\t\t\tusername: ''\n\t\t\t}\n\t\t]\n\t});\n\tconst { showNotification } = useNotistack();\n\tconst { t } = useTranslation();\n\n\tconst { reloadEntityAll } = useLoadAll();\n\treturn (\n\t\t<EntityForm.Main\n\t\t\tentity=\"contacts\"\n\t\t\tname={`AllContacts-${companyId}`}\n\t\t\turl={`/${companyId}/contacts/`}\n\t\t\tmethod=\"post\"\n\t\t\tsendAsFormData={false}\n\t\t\tprependData={false}\n\t\t\tappendData={false}\n\t\t\tfields={[\n\t\t\t\t{\n\t\t\t\t\tname: 'first_name',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'last_name',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'birthday',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tonSubmitValue: (value) => (value ? value.format('YYYY-MM-DD') : null),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'notes',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'categories',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalue: [],\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tonSubmitValue: (value: Array<CategoryType>) => value.map((item) => item.id),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'phone_numbers',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tvalue: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'Mobile',\n\t\t\t\t\t\t\tcode: 'MOBILE',\n\t\t\t\t\t\t\tnumber: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tonSubmitValue: (value: any[]) => sanitizeEmptyValueInArray(value, 'number'),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'emails',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalue: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'Work',\n\t\t\t\t\t\t\tcode: 'WORK',\n\t\t\t\t\t\t\temail: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tonSubmitValue: (value: any[]) => sanitizeEmptyValueInArray(value, 'email'),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'social_profiles',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalue: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'X',\n\t\t\t\t\t\t\tcode: 'X',\n\t\t\t\t\t\t\tusername: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tonSubmitValue: (value: any[]) => sanitizeEmptyValueInArray(value, 'username'),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'addresses',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalue: [],\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tonSubmitValue: (value: string) => (value.length > 0 ? [{ adress: value }] : []),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'photo',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalue: null,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'object'\n\t\t\t\t}\n\t\t\t]}\n\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\treloadEntityAll({\n\t\t\t\t\tentity: 'contacts',\n\t\t\t\t\tname: `AllContacts-${companyId}`,\n\t\t\t\t\turl: `/${companyId}/contacts/`,\n\t\t\t\t\treplaceIds: true,\n\t\t\t\t\tparams: {\n\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\tcategories: query?.categories\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: t('successfully_created')\n\t\t\t\t});\n\n\t\t\t\tonModalClose();\n\t\t\t\tchangeUrlParams({\n\t\t\t\t\tcontact: response?.id\n\t\t\t\t});\n\t\t\t}}\n\t\t\tonError={(error, resetForm): any => {\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: error.response?.data?.message ?? t('something_went_wrong'),\n\t\t\t\t\tvariant: 'error'\n\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t{({ values, setFieldValue, isSubmitting }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ContactFormElements\n\t\t\t\t\t\tisEditForm={false}\n\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\tonModalClose={onModalClose}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityForm.Main>\n\t);\n}\n","import EntityForm from 'modules/entity/forms';\nimport { useAppState } from 'shared/state';\nimport { ContactFormElements } from './ContactFormElements';\nimport { useGetEntityOne, useNotistack, useQueryParams, useUpdateEntities } from 'shared/hooks';\nimport { ContactType } from 'pages/Contacts/types/contact.types';\nimport { CategoryType } from 'pages/Contacts/types/category.types';\nimport { useReducer } from 'react';\nimport { formMultipleFieldReducer } from 'pages/Contacts/helpers/formMultipleFieldReducer';\nimport { capitalizeFirstLetter } from 'shared/services';\nimport { useTranslation } from 'react-i18next';\nimport { sanitizeEmptyValueInArray } from 'pages/Contacts/helpers/sanitizeEmptyValueInArray';\n\ntype Props = {\n\tonModalClose: () => void;\n};\n\nconst getDefaultValue = (list: any[], defaultValue: any) => {\n\tif (list.length) return list;\n\n\treturn [defaultValue];\n};\n\nexport function EditContactForm({ onModalClose }: Props) {\n\tconst { companyId } = useAppState();\n\tconst { query } = useQueryParams<{ contact: string }>();\n\tconst { t } = useTranslation();\n\tconst { showNotification } = useNotistack();\n\tconst { updateEntities } = useUpdateEntities();\n\n\tconst contactId = Number(query.contact);\n\tconst contactEntity = useGetEntityOne({\n\t\tentityId: contactId,\n\t\tentity: 'contacts',\n\t\tentityName: `ContactDetail-${contactId}`\n\t});\n\tconst contactDetail = contactEntity.item as ContactType;\n\tconst [state, dispatch] = useReducer(formMultipleFieldReducer, {\n\t\tphone_numbers: contactDetail.phone_numbers.map((item) => ({\n\t\t\tcode: item.type,\n\t\t\tnumber: item.number,\n\t\t\ttype: capitalizeFirstLetter(item.type)\n\t\t})),\n\t\temails: contactDetail.emails.map((item) => ({\n\t\t\tcode: item.type,\n\t\t\temail: item.email,\n\t\t\ttype: capitalizeFirstLetter(item.type)\n\t\t})),\n\t\tsocial_profiles: contactDetail.social_profiles.map((item) => ({\n\t\t\tcode: item.type,\n\t\t\tusername: item.username,\n\t\t\ttype: capitalizeFirstLetter(item.type)\n\t\t}))\n\t});\n\n\treturn (\n\t\t<EntityForm.Main\n\t\t\tid={contactId}\n\t\t\tprimaryKey=\"id\"\n\t\t\tname=\"contacts\"\n\t\t\tentity={`AllContacts-${companyId}`}\n\t\t\turl={`/${companyId}/contacts/${contactId}/`}\n\t\t\tmethod=\"put\"\n\t\t\tsendAsFormData={false}\n\t\t\tprependData={false}\n\t\t\tappendData={false}\n\t\t\tupdateData={true}\n\t\t\tfields={[\n\t\t\t\t{\n\t\t\t\t\tname: 'first_name',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalue: contactDetail.first_name,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'last_name',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalue: contactDetail.last_name,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'birthday',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tvalue: contactDetail.birthday,\n\t\t\t\t\tonSubmitValue: (value) =>\n\t\t\t\t\t\tvalue ? (typeof value === 'string' ? value : value.format('YYYY-MM-DD')) : null,\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'notes',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalue: contactDetail.notes,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'categories',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tvalue: contactDetail.categories,\n\t\t\t\t\tonSubmitValue: (value: Array<CategoryType>) => value.map((item) => item.id),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'phone_numbers',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tvalue: getDefaultValue(contactDetail.phone_numbers, {\n\t\t\t\t\t\ttype: 'Mobile',\n\t\t\t\t\t\tcode: 'MOBILE',\n\t\t\t\t\t\tnumber: ''\n\t\t\t\t\t}),\n\t\t\t\t\tonSubmitValue: (value: any[]) => sanitizeEmptyValueInArray(value, 'number'),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'emails',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalue: getDefaultValue(contactDetail.emails, {\n\t\t\t\t\t\ttype: 'Work',\n\t\t\t\t\t\tcode: 'WORK',\n\t\t\t\t\t\temail: ''\n\t\t\t\t\t}),\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tonSubmitValue: (value: any[]) => sanitizeEmptyValueInArray(value, 'email'),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'social_profiles',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalue: getDefaultValue(contactDetail.social_profiles, {\n\t\t\t\t\t\ttype: 'X',\n\t\t\t\t\t\tcode: 'X',\n\t\t\t\t\t\tusername: ''\n\t\t\t\t\t}),\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tonSubmitValue: (value: any[]) => sanitizeEmptyValueInArray(value, 'username'),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'addresses',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalue: contactDetail.addresses?.[0]?.adress ?? '',\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tonSubmitValue: (value: string) => (value.length > 0 ? [{ adress: value }] : []),\n\t\t\t\t\ttype: 'array'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'photo',\n\t\t\t\t\trequired: false,\n\t\t\t\t\tvalue: contactDetail.photo,\n\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\tonSubmitValue: (value) =>\n\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tid: value?.id,\n\t\t\t\t\t\t\t\t\turl: value?.url,\n\t\t\t\t\t\t\t\t\tthumbnail: value?.thumbnail,\n\t\t\t\t\t\t\t\t\tthumbnail_150: value?.thumbnail_150,\n\t\t\t\t\t\t\t\t\tis_encrypted: value?.is_encrypted\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\ttype: 'object'\n\t\t\t\t}\n\t\t\t]}\n\t\t\tonSuccess={(data, resetForm): any => {\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: t('successfully_updated')\n\t\t\t\t});\n\t\t\t\tonModalClose();\n\t\t\t\tupdateEntities({\n\t\t\t\t\tentity: 'contacts',\n\t\t\t\t\tentityId: contactId,\n\t\t\t\t\tupdatingData: data\n\t\t\t\t});\n\t\t\t}}\n\t\t\tonError={(error, resetForm): any => {\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: error?.response?.data?.message ?? t('something_went_wrong'),\n\t\t\t\t\tvariant: 'error'\n\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t{({ values, setFieldValue, isSubmitting }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ContactFormElements\n\t\t\t\t\t\tisEditForm={true}\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\tonModalClose={onModalClose}\n\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityForm.Main>\n\t);\n}\n","import { Fab } from '@material-ui/core';\nimport { IoMdAdd } from 'react-icons/io';\nimport { useWhiteModal } from 'shared/hooks';\nimport { AddContactForm } from '../ContactForm';\nimport { memo } from 'react';\n\nexport const AddContactButton = memo(() => {\n\tconst { WhiteModal, open, modalHandler } = useWhiteModal();\n\treturn (\n\t\t<div className=\"add-contact-btn absolute bottom-24 right-10\">\n\t\t\t<div className=\"fixed\">\n\t\t\t\t<Fab className=\"fixed\" onClick={modalHandler} color=\"primary\" size=\"small\">\n\t\t\t\t\t<IoMdAdd className=\"text-2xl text-white\" />\n\t\t\t\t</Fab>\n\t\t\t</div>\n\n\t\t\t<WhiteModal maxWidth={600} open={open} scrollable handleModalOpen={modalHandler}>\n\t\t\t\t<AddContactForm onModalClose={modalHandler} />\n\t\t\t</WhiteModal>\n\t\t</div>\n\t);\n});\n\nAddContactButton.displayName = 'AddContactButton';\n","import { ErrorBoundary } from 'shared/components';\nimport { AddContactButton, ContactsListHeader, ContactsListItems } from './index';\nimport { ChangeEvent, useCallback, useState } from 'react';\nimport { useDebounce } from 'use-debounce';\n\nfunction ContactsListInner() {\n\tconst [query, setQuery] = useState('');\n\tconst handleSearchInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetQuery(e.target.value);\n\t}, []);\n\tconst [searchQuery] = useDebounce(query, 500);\n\n\treturn (\n\t\t<section className=\"contacts-page__list relative w-[25rem]\">\n\t\t\t<ContactsListHeader query={query} onSearchInput={handleSearchInputChange} />\n\t\t\t<ContactsListItems searchQuery={searchQuery} />\n\t\t\t<AddContactButton />\n\t\t</section>\n\t);\n}\n\nexport function ContactsList() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<ContactsListInner />\n\t\t</ErrorBoundary>\n\t);\n}\n","import { ErrorBoundary, Loader } from 'shared/components';\nimport EntityContainer from 'modules/entity/containers';\nimport { ContactDetailActions, ContactDetailHeader, ContactDetailInfo } from './index';\nimport { useQueryParams } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\nimport { ContactType } from 'pages/Contacts/types/contact.types';\nimport clsx from 'clsx';\n\nfunction ContactDetailInner() {\n\tconst { query } = useQueryParams<{ contact: string }>();\n\tconst contactId = Number(query?.contact);\n\tconst { companyId } = useAppState();\n\treturn (\n\t\t<section\n\t\t\tclassName={clsx(\n\t\t\t\t'contact-detail relative mb-3 max-h-full flex-1 rounded-10 bg-kgrey-bgmenu p-7 transition-transform duration-300 dark:bg-kdark-dark333',\n\t\t\t\t!contactId ? 'translate-x-[100vw]' : 'translate-x-0'\n\t\t\t)}\n\t\t>\n\t\t\t{contactId ? (\n\t\t\t\t<EntityContainer.One\n\t\t\t\t\tid={contactId}\n\t\t\t\t\tentity=\"contacts\"\n\t\t\t\t\tname={`ContactDetail-${contactId}`}\n\t\t\t\t\tparams={{}}\n\t\t\t\t\trelations=\"\"\n\t\t\t\t\tprimaryKey=\"id\"\n\t\t\t\t\turl={`/${companyId}/contacts/${contactId}/`}\n\t\t\t\t>\n\t\t\t\t\t{({ isFetched, item }) => {\n\t\t\t\t\t\tconst contact = item as ContactType;\n\t\t\t\t\t\treturn isFetched ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<ContactDetailHeader\n\t\t\t\t\t\t\t\t\tphoto={contact.photo}\n\t\t\t\t\t\t\t\t\tfirst_name={contact.first_name}\n\t\t\t\t\t\t\t\t\tlast_name={contact.last_name}\n\t\t\t\t\t\t\t\t\tphone_number={(contact.phone_numbers ?? [])?.[0]}\n\t\t\t\t\t\t\t\t\tcategories={contact.categories ?? []}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ContactDetailInfo contact={contact} />\n\t\t\t\t\t\t\t\t<ContactDetailActions is_locked={contact.is_locked} created_by_id={contact.created_by_id} />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Loader tiled />\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</EntityContainer.One>\n\t\t\t) : null}\n\t\t</section>\n\t);\n}\n\nexport function ContactDetail() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<ContactDetailInner />\n\t\t</ErrorBoundary>\n\t);\n}\n","import { get } from 'lodash';\nimport { CategoryType } from 'pages/Contacts/types/category.types';\nimport { ContactPhoneNumber, ContactType } from 'pages/Contacts/types/contact.types';\nimport { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TbCategory, TbPhoneCall } from 'react-icons/tb';\nimport { ErrorBoundary } from 'shared/components';\nimport { AvatarSized } from 'shared/components/Elements';\n\ntype Props = {\n\tfirst_name: ContactType['first_name'];\n\tlast_name: ContactType['last_name'];\n\tphone_number: ContactPhoneNumber;\n\tcategories: CategoryType[];\n\tphoto: ContactType['photo'];\n};\n\nconst ContactDetailHeaderInner = memo(\n\t({ first_name, last_name, phone_number, categories, photo }: Props) => {\n\t\tconst { t } = useTranslation();\n\t\treturn (\n\t\t\t<div className=\"contact-detail-header mb-4 flex items-center\">\n\t\t\t\t<AvatarSized\n\t\t\t\t\tletter={`${first_name?.[0]?.toUpperCase()}${last_name?.[0]?.toUpperCase()}`}\n\t\t\t\t\tsrc={get(photo, 'thumbnail_150')}\n\t\t\t\t\tclassName=\"contact-detail-header__avatar\"\n\t\t\t\t\tsize={120}\n\t\t\t\t/>\n\t\t\t\t<div className=\"contact-detail-header__primary-info px-5\">\n\t\t\t\t\t<p className=\"primary-info__fullname pb-1.5 font-medium dark:text-kgrey-light-grey-3\">\n\t\t\t\t\t\t{first_name} {last_name}\n\t\t\t\t\t</p>\n\t\t\t\t\t{phone_number ? (\n\t\t\t\t\t\t<div className=\"primary-info__phone py-0.5\">\n\t\t\t\t\t\t\t<TbPhoneCall size={24} className=\"inline-block text-kgrey\" />\n\t\t\t\t\t\t\t<span className=\"primary-info__phone--text mx-2 inline-block align-middle text-base font-medium text-kdark dark:text-white\">\n\t\t\t\t\t\t\t\t{phone_number?.number}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t{categories.length ? (\n\t\t\t\t\t\t<div className=\"primary-info__category\">\n\t\t\t\t\t\t\t<span className=\"primary-info__category--text inline-block align-middle text-base font-medium text-kdark dark:text-white\">\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<TbCategory size={24} className=\"inline-block text-kgrey\" />\n\t\t\t\t\t\t\t\t\t<span className=\"mx-2 inline-block\">{t('category')}:</span>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t{categories?.map((category) => (\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\tkey={category.id}\n\t\t\t\t\t\t\t\t\t\tclassName=\"mx-1 my-0.5 inline-block rounded-xl bg-kgrey-bgDashboardItem px-1.5 py-1 dark:bg-kdark\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{category?.name}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n);\n\nContactDetailHeaderInner.displayName = 'ContactDetailHeaderInner';\n\nexport function ContactDetailHeader(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<ContactDetailHeaderInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import { ErrorBoundary } from 'shared/components';\n\ntype Props = {\n\ttitle: string;\n\tchildren: React.ReactNode;\n\tshow?: boolean;\n};\n\nfunction ContactDetailRowInner({ title, children, show = true }: Props) {\n\treturn show ? (\n\t\t<div className=\"contact-detail-info__row mb-5 \">\n\t\t\t<h3 className=\"contact-detail-info__row--title text-sm uppercase text-kgrey-dark-2\">\n\t\t\t\t{title}\n\t\t\t</h3>\n\t\t\t<p className=\"contact-detail-info__row--value mt-1 font-medium text-kdark dark:text-white\">\n\t\t\t\t{children}\n\t\t\t</p>\n\t\t</div>\n\t) : null;\n}\n\nexport function ContactDetailRow(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<ContactDetailRowInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import { ErrorBoundary } from 'shared/components';\nimport { ContactDetailRow } from './ContactDetailRow';\nimport { ContactType } from 'pages/Contacts/types/contact.types';\nimport { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { isEmpty } from 'lodash';\nimport Scrollbars from 'react-custom-scrollbars-2';\n\ntype Props = {\n\tcontact: ContactType;\n};\n\nconst ContactDetailInfoInner = memo(({ contact }: Props) => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<Scrollbars className=\"rct-scroll\" autoHide style={{ height: '55vh' }}>\n\t\t\t<div className=\"contact-detail-info\">\n\t\t\t\t<ContactDetailRow title={t('phone_number')} show={!isEmpty(contact.phone_numbers)}>\n\t\t\t\t\t{contact?.phone_numbers?.map((phone) => (\n\t\t\t\t\t\t<div key={phone.id}>\n\t\t\t\t\t\t\t<span className=\"text-base font-medium text-kgrey-menuText\">{phone.type}:</span>\n\t\t\t\t\t\t\t<span className=\"mx-1\">{phone.number}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</ContactDetailRow>\n\t\t\t\t<ContactDetailRow title={t('email_address')} show={!isEmpty(contact.emails)}>\n\t\t\t\t\t{contact?.emails?.map((email) => (\n\t\t\t\t\t\t<div key={email.id}>\n\t\t\t\t\t\t\t<span className=\"text-base font-medium text-kgrey-menuText\">{email.type}:</span>\n\t\t\t\t\t\t\t<span className=\"mx-1\">{email.email}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</ContactDetailRow>\n\t\t\t\t<ContactDetailRow title={t('address')} show={!isEmpty(contact.addresses)}>\n\t\t\t\t\t{contact.addresses?.[0]?.adress}\n\t\t\t\t</ContactDetailRow>\n\t\t\t\t<ContactDetailRow title={t('birthday')} show={!isEmpty(contact.birthday)}>\n\t\t\t\t\t{contact.birthday}\n\t\t\t\t</ContactDetailRow>\n\t\t\t\t<ContactDetailRow title={t('social_profiles')} show={!isEmpty(contact.social_profiles)}>\n\t\t\t\t\t{contact?.social_profiles?.map((item) => (\n\t\t\t\t\t\t<div key={item.id}>\n\t\t\t\t\t\t\t<span className=\"text-base font-medium text-kgrey-menuText\">{item.type}:</span>\n\t\t\t\t\t\t\t<span className=\"mx-1\">{item.username}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</ContactDetailRow>\n\t\t\t\t<ContactDetailRow title={t('notes')} show={!isEmpty(contact.notes)}>\n\t\t\t\t\t{contact.notes}\n\t\t\t\t</ContactDetailRow>\n\t\t\t</div>\n\t\t</Scrollbars>\n\t);\n});\n\nContactDetailInfoInner.displayName = 'ContactDetailInfoInner';\n\nexport function ContactDetailInfo(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<ContactDetailInfoInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import { useTranslation } from 'react-i18next';\nimport {\n\tMdDeleteOutline,\n\tMdLockOutline,\n\tMdModeEditOutline,\n\tMdOutlineDeleteOutline\n} from 'react-icons/md';\nimport { KntButton, NewConfirmModal } from 'shared/components';\nimport {\n\tuseAxios,\n\tuseNotistack,\n\tuseQueryParams,\n\tuseUpdateEntities,\n\tuseWhiteModal\n} from 'shared/hooks';\nimport { EditContactForm } from '../ContactForm';\nimport { useEntityForm } from 'modules/entity/hooks/useEntityForm';\nimport { useAppState } from 'shared/state';\nimport { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { decrementEntityTotal } from 'modules/entity/actions';\nimport { useAuth } from 'modules/auth/hooks/useAuth';\nimport { GoLock, GoUnlock } from 'react-icons/go';\n\ntype Props = {\n\tis_locked: boolean;\n\tcreated_by_id: number;\n};\n\nexport const ContactDetailActions = memo(({ is_locked, created_by_id }: Props) => {\n\tconst { t } = useTranslation();\n\tconst { userData } = useAuth();\n\tconst { companyId, isAdmin } = useAppState();\n\tconst { showNotification } = useNotistack();\n\tconst { WhiteModal, open: openEditModal, modalHandler: toggleEditModal } = useWhiteModal();\n\tconst { open: openDeleteConfirm, modalHandler: toggleDeleteConfirm } = useWhiteModal();\n\tconst { open: openLockConfirm, modalHandler: toggleLockConfirm } = useWhiteModal();\n\tconst { query, removeMultipleParams } = useQueryParams<{ contact: string }>();\n\tconst { updateEntities } = useUpdateEntities();\n\tconst dispatch = useDispatch();\n\tconst contactId = Number(query?.contact);\n\tconst isContactOwner = created_by_id === userData?.id;\n\tconst isPermitted = is_locked ? isContactOwner : isContactOwner || isAdmin;\n\n\tconst { handleRequest: sendDeleteRequest } = useEntityForm({\n\t\tname: `AllContacts-${companyId}`,\n\t\tentity: 'contacts',\n\t\tmethod: 'delete',\n\t\turl: `/${companyId}/contacts/${contactId}/`,\n\t\tdeleteData: true,\n\t\tid: contactId,\n\t\tcb: {\n\t\t\tsuccess: () => {\n\t\t\t\ttoggleDeleteConfirm();\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: t('successfully_deleted')\n\t\t\t\t});\n\t\t\t\tremoveMultipleParams(['contact']);\n\t\t\t\tdispatch(decrementEntityTotal('contacts', `AllContacts-${companyId}`));\n\t\t\t},\n\t\t\terror: (error) => {\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: error.response?.data?.message ?? t('something_went_wrong'),\n\t\t\t\t\tvariant: 'error'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tconst { fetchData: sendToggleContactLockRequest, loading: toggleContactLockLoading } = useAxios({\n\t\turl: `/${companyId}/contacts/${contactId}/`,\n\t\tmethod: 'patch',\n\t\tvalues: {\n\t\t\tis_locked: !is_locked\n\t\t},\n\t\tcb: {\n\t\t\tsuccess: (data) => {\n\t\t\t\tshowNotification({ message: t('successfully_updated') });\n\t\t\t\ttoggleLockConfirm();\n\t\t\t\tupdateEntities({\n\t\t\t\t\tentity: 'contacts',\n\t\t\t\t\tentityId: contactId,\n\t\t\t\t\tupdatingData: {\n\t\t\t\t\t\tis_locked: data?.is_locked\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\terror: (error) => {\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: error.response?.data?.message ?? t('something_went_wrong'),\n\t\t\t\t\tvariant: 'error'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\treturn (\n\t\t<div className=\"contact-detail__buttons absolute bottom-2 right-10 space-x-2\">\n\t\t\t{isPermitted ? (\n\t\t\t\t<>\n\t\t\t\t\t<KntButton\n\t\t\t\t\t\tonClick={toggleEditModal}\n\t\t\t\t\t\ticonComponent={<MdModeEditOutline />}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('edit')}\n\t\t\t\t\t</KntButton>\n\t\t\t\t\t<KntButton\n\t\t\t\t\t\tonClick={toggleDeleteConfirm}\n\t\t\t\t\t\ticonComponent={<MdDeleteOutline />}\n\t\t\t\t\t\tclassName=\"bg-red-500 text-white hover:bg-red-400 dark:bg-red-500\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('delete')}\n\t\t\t\t\t</KntButton>{' '}\n\t\t\t\t</>\n\t\t\t) : null}\n\n\t\t\t{isContactOwner ? (\n\t\t\t\t<KntButton\n\t\t\t\t\tonClick={toggleLockConfirm}\n\t\t\t\t\ticonComponent={is_locked ? <GoUnlock /> : <GoLock />}\n\t\t\t\t\tclassName=\"bg-kgrey text-white hover:bg-kgrey dark:bg-kgrey\"\n\t\t\t\t>\n\t\t\t\t\t{is_locked ? t('locked') : t('lock')}\n\t\t\t\t</KntButton>\n\t\t\t) : null}\n\n\t\t\t<WhiteModal maxWidth={600} open={openEditModal} handleModalOpen={toggleEditModal} scrollable>\n\t\t\t\t<EditContactForm onModalClose={toggleEditModal} />\n\t\t\t</WhiteModal>\n\t\t\t<NewConfirmModal\n\t\t\t\ticon={<MdOutlineDeleteOutline size={24} />}\n\t\t\t\tprimaryBtnText={t('yes_delete_it')}\n\t\t\t\ttype=\"error\"\n\t\t\t\tfeatureHandler={() => {\n\t\t\t\t\tsendDeleteRequest();\n\t\t\t\t}}\n\t\t\t\ttitle={t('delete_contact_confirmation')}\n\t\t\t\tisOpen={openDeleteConfirm}\n\t\t\t\ttoggleHandler={toggleDeleteConfirm}\n\t\t\t/>\n\t\t\t<NewConfirmModal\n\t\t\t\thasLoader={toggleContactLockLoading}\n\t\t\t\tisLoading={toggleContactLockLoading}\n\t\t\t\ticon={<MdLockOutline size={24} />}\n\t\t\t\ttype=\"success\"\n\t\t\t\tprimaryBtnText={is_locked ? t('yes_unlock_it') : t('yes_lock_it')}\n\t\t\t\tfeatureHandler={() => {\n\t\t\t\t\tsendToggleContactLockRequest();\n\t\t\t\t}}\n\t\t\t\ttitle={is_locked ? t('unlock_contact_confirmation') : t('lock_contact_confirmation')}\n\t\t\t\thelperText={is_locked ? t('unlock_contact_helper_text') : t('lock_contact_helper_text')}\n\t\t\t\tisOpen={openLockConfirm}\n\t\t\t\ttoggleHandler={toggleLockConfirm}\n\t\t\t/>\n\t\t</div>\n\t);\n});\n\nContactDetailActions.displayName = 'ContactDetailActions';\n"],"names":["ContactsPageInner","className","ContactsList","ContactDetail","ContactsPage","ContactItemInner","memo","id","photo","first_name","last_name","phone_numbers","categoryList","is_locked","t","useTranslation","isRTL","useTranslationHelpers","useQueryParams","changeUrlParams","query","onContactItemClicked","useCallback","categories","contact","isContactOpened","Number","onClick","clsx","letter","toUpperCase","src","get","size","number","length","name","ContactItem","props","displayName","ContactsListItemsInner","searchQuery","companyId","useAppState","useState","page","setPage","searchPage","setSearchPage","useEffect","computedPage","unSubscribeContactRefetch","contactEventChannel","setTimeout","entity","url","dataKey","params","extra","search","limit","appendData","replaceIds","items","meta","isFetched","count","autoHide","style","height","map","contactItem","tiled","variant","current_page","last_page","ContactsListItems","ContactsListHeaderSearch","onSearchInput","customPlaceholder","handleInput","ContactsFilterIcon","width","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ContactFilterFormItem","title","checked","onToggleChecked","classes","root","control","onChange","color","label","ContactFilterForm","onModalClose","handleSort","removeOneQueryParam","categoies","split","filterCategoryIds","setFilterCategoryIds","onFilterItemCheckToggled","categoryId","e","target","prevFilterCategoryIds","filter","onShowResultClicked","join","onClearFilterClicked","category","includes","ContactsListHeaderFilter","useWhiteModal","WhiteModal","open","modalHandler","handleModalOpen","ContactsListHeaderInner","ContactsListHeader","AddContactFieldButton","children","onAddFieldClick","rx","clipPath","transform","ContactFormRow","fieldName","required","showRemoveFieldButton","onRemoveFieldClicked","showAddFieldButton","onAddFieldClicked","addFieldButtonText","MultipleFieldListNames","MultipleFieldUniqueKeys","MultipleFieldActionsTypes","imgPath","config","ContactImageUploader","setFieldValue","uploadMeta","setUploadMeta","cancelSending","setCancelSending","file","setFile","fileUploaderRef","useRef","onUploadClick","current","uploader","onDeleteClick","ref","accept","alt","clickHandler","value","ContactFormElements","values","dispatch","isSubmitting","isEditForm","fieldInputChangeHandler","event","item","index","uniqueFieldKey","fieldListName","type","MODIFY_FIELD","payload","fieldValue","code","M","utils","DayjsUtils","placeholder","onBlur","trim","component","KntInputField","format","CustomDatePicker","shouldDisableDate","date","today","Date","setHours","toDate","dateValue","birthday","itemsList","REMOVE_FIELD","ADD_FIELD","onInputChange","selectProps","loadOptionsUrl","loadOptionsKey","loadOptionsParams","optionLabel","optionValue","option","emails","email","customStylesProps","ContactFormSelectStyle","AsyncSelect","alwaysRefetch","isMulti","social_profiles","username","formMultipleFieldReducer","state","action","modifiedList","_","modifiedFieldList","slice","newField","sanitizeEmptyValueInArray","list","keyToCheck","field","isEmpty","AddContactForm","useReducer","showNotification","useNotistack","reloadEntityAll","useLoadAll","method","sendAsFormData","prependData","fields","onSubmitKey","onSubmitValue","adress","onSuccess","response","resetForm","message","onError","error","data","getDefaultValue","defaultValue","EditContactForm","updateEntities","useUpdateEntities","contactId","contactDetail","useGetEntityOne","entityId","entityName","capitalizeFirstLetter","primaryKey","updateData","notes","addresses","thumbnail","thumbnail_150","is_encrypted","updatingData","AddContactButton","Fab","maxWidth","scrollable","ContactsListInner","setQuery","handleSearchInputChange","useDebounce","ContactDetailInner","relations","ContactDetailHeader","phone_number","ContactDetailInfo","ContactDetailActions","created_by_id","ContactDetailHeaderInner","ContactDetailRowInner","show","ContactDetailRow","ContactDetailInfoInner","phone","userData","useAuth","isAdmin","openEditModal","toggleEditModal","openDeleteConfirm","toggleDeleteConfirm","openLockConfirm","toggleLockConfirm","removeMultipleParams","useDispatch","isContactOwner","isPermitted","sendDeleteRequest","useEntityForm","deleteData","cb","success","decrementEntityTotal","handleRequest","useAxios","sendToggleContactLockRequest","fetchData","toggleContactLockLoading","loading","iconComponent","icon","primaryBtnText","featureHandler","isOpen","toggleHandler","hasLoader","isLoading","helperText"],"sourceRoot":""}