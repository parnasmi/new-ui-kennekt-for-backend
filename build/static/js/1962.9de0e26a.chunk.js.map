{"version":3,"file":"static/js/1962.9de0e26a.chunk.js","mappings":"swBAyCA,ICxCA,EDKA,WACC,OAAuDA,EAAAA,EAAAA,KAA/CC,EAAR,EAAQA,sBAAuBC,EAA/B,EAA+BA,oBACvBC,GAAYC,EAAAA,EAAAA,MAAZD,QACAE,GAAsBC,EAAAA,EAAAA,KAAtBD,kBAyBR,OAtBAE,EAAAA,EAAAA,YAAU,WAET,GAAIF,EAAmB,CACtB,GAAIG,IAAQN,IAAwBM,IAAQP,GAE3C,YADAE,EAAQM,KAAK,cAId,IAAKD,IAAQN,GAEZ,YADAC,EAAQM,KAAK,kBAId,IAAKD,IAAQP,GAEZ,YADAE,EAAQM,KAAK,cAGd,MACAN,EAAQM,KAAK,UAEd,GAAE,KAGF,gBAAKC,UAAW,mDAAhB,sEAID,C","sources":["pages/InitialLoaderPage/InitialLoaderPage.tsx","pages/InitialLoaderPage/index.ts"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useAppState } from 'shared/state';\nimport isEmpty from 'lodash/isEmpty';\nimport { useRouter } from 'shared/hooks';\nimport { useAuth } from 'modules/auth/hooks/useAuth';\n\nfunction InitialLoaderPage() {\n\tconst { groupsUnreadCountData, unreadMessagesCount } = useAppState();\n\tconst { history } = useRouter();\n\tconst { isAuthentificated } = useAuth();\n\n\t//handle redirecting to appropriate pages according to unread count\n\tuseEffect(() => {\n\t\t//If there is no unread redirect to Dashboard page\n\t\tif (isAuthentificated) {\n\t\t\tif (isEmpty(unreadMessagesCount) && isEmpty(groupsUnreadCountData)) {\n\t\t\t\thistory.push('/dashboard');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isEmpty(unreadMessagesCount)) {\n\t\t\t\thistory.push('/case-messages');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isEmpty(groupsUnreadCountData)) {\n\t\t\t\thistory.push('/group-chat');\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\thistory.push('/signin');\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<div className={'flex h-screen w-full items-center justify-center'}>\n\t\t\tCounting unread messages... it will take a little time...\n\t\t</div>\n\t);\n}\n\nexport default InitialLoaderPage;\n","import InitialLoaderPage from './InitialLoaderPage';\nexport default InitialLoaderPage;\n"],"names":["useAppState","groupsUnreadCountData","unreadMessagesCount","history","useRouter","isAuthentificated","useAuth","useEffect","isEmpty","push","className"],"sourceRoot":""}