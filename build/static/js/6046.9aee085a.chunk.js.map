{"version":3,"file":"static/js/6046.9aee085a.chunk.js","mappings":"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","sources":["pages/Cases/components/StatusHeaderDots.tsx","pages/Cases/components/StatusHeader.tsx","shared/components/Loaders/CaseItemLoader.tsx","shared/components/Loaders/StatusLoader.tsx","pages/Cases/components/CaseItem.tsx","pages/Cases/components/SearchCaseItem.tsx","pages/Cases/components/DragItem.tsx","pages/Cases/components/DndRow.tsx","pages/Cases/components/ListComponent.tsx","pages/Cases/components/Status.tsx","pages/Cases/components/StatusCreateForm.tsx","pages/Cases/components/StatusCreateButton.tsx","pages/Cases/components/ConfirmationStatusesForm.tsx","pages/Cases/components/StatusEditForm.tsx","pages/Cases/components/StatusChangeMobile.tsx","pages/Cases/Cases.tsx"],"sourcesContent":["import React from 'react';\nimport { BiDotsVerticalRounded } from 'react-icons/bi';\nimport { Checkbox, FormControlLabel, Menu } from 'shared/components/Elements';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useStatusHeaderMenu } from '../hooks';\nimport { useAppState } from 'shared/state';\n\ntype Props = {\n\tstatusId: number;\n\tname: string;\n\tisConfirmationRequired: boolean;\n};\n\nexport function StatusHeaderDots({ statusId, name, isConfirmationRequired }: Props) {\n\tconst { open, anchorEl, handleClick, handleCloseMenu } = useStatusHeaderMenu();\n\tconst { setSelectedStatus, isAdmin, unreadCasesCountByStatus } = useAppState();\n\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName=\" more-btn absolute top-3 right-2.5 h-6 w-4 cursor-pointer text-right text-kgrey-menuText transition-colors hover:text-primary dark:text-white dark:hover:text-primary\"\n\t\t\t\tonClick={handleClick}\n\t\t\t>\n\t\t\t\t<BiDotsVerticalRounded className={'inline'} />\n\t\t\t</div>\n\t\t\t{open ? (\n\t\t\t\t<Menu id=\"long-menu\" anchorEl={anchorEl} keepMounted open={open} onClose={handleCloseMenu}>\n\t\t\t\t\t{isAdmin ? (\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\thandleCloseMenu();\n\t\t\t\t\t\t\t\tsetSelectedStatus({ name, statusId, type: 'edit' });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEdit Status Name\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t{isAdmin ? (\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\thandleCloseMenu();\n\t\t\t\t\t\t\t\tsetSelectedStatus({ name, statusId, type: 'delete' });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete Status\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{unreadCasesCountByStatus[statusId] ? (\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\thandleCloseMenu();\n\t\t\t\t\t\t\t\tsetSelectedStatus({ name, statusId, type: 'mark_all_read' });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tMark All Read\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\thandleCloseMenu();\n\t\t\t\t\t\t\tsetSelectedStatus({ name, statusId, type: 'add_buttons' });\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Checkbox color=\"primary\" checked={isConfirmationRequired} className=\"!py-0\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"Add Buttons\"\n\t\t\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\t\t\tclassName=\"!ml-0\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MenuItem>\n\t\t\t\t</Menu>\n\t\t\t) : null}\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport { useAppState } from 'shared/state';\nimport { ErrorBoundary } from 'shared/components';\nimport { DraggableProvidedDragHandleProps } from 'react-beautiful-dnd';\nimport { StatusHeaderDots } from './StatusHeaderDots';\nimport IconButton from '@material-ui/core/IconButton';\nimport { IconSortDefault, IconSortDown } from '../../../shared/icons';\nimport clsx from 'clsx';\nimport { useAxios } from '../../../shared/hooks';\nimport { storage } from '../../../shared/services';\nimport { CASES_UNREAD_BADGE_COUNT } from '../constants';\n\ntype Props = {\n\tname: string;\n\ttotalCount: number;\n\tstatusId: number;\n\tdraggableHandleProps: DraggableProvidedDragHandleProps | undefined;\n\tisConfirmationRequired: boolean;\n};\n\nexport function StatusHeaderInner({\n\tname,\n\ttotalCount,\n\tstatusId,\n\tdraggableHandleProps,\n\tisConfirmationRequired\n}: Props) {\n\tconst {\n\t\tunreadCasesCountByStatus,\n\t\tselectedCaseFilter,\n\t\tcaseType,\n\t\tsetStatusReverseState,\n\t\tstatusReverseState,\n\t\tsettingsData,\n\t\tcompanyId,\n\t\tsearchQuery\n\t} = useAppState();\n\n\tconst { fetchData: saveCasesReverseData } = useAxios({\n\t\turl: `/${companyId}/settings/`,\n\t\tmethod: 'post',\n\t\tdynamicValues: true,\n\t\tcb: {\n\t\t\tsuccess: (data, args) => {},\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\t\terror: (error) => {}\n\t\t}\n\t});\n\n\tconst handleReverseState = async () => {\n\t\tsetStatusReverseState(statusId);\n\n\t\tconst payload = {\n\t\t\tsettings_json: {\n\t\t\t\t...settingsData?.settings_json,\n\t\t\t\tcases_reverse_data: {\n\t\t\t\t\t...statusReverseState,\n\t\t\t\t\t[statusId]: !statusReverseState?.[statusId]\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tawait saveCasesReverseData({\n\t\t\tvalues: payload\n\t\t});\n\t\tif ('settings_json' in payload) {\n\t\t\tstorage.set('casesReverseData', JSON.stringify(payload?.settings_json?.cases_reverse_data));\n\t\t}\n\t};\n\n\tconst isFilterNotSelected = !selectedCaseFilter[caseType];\n\tconst isThereUnreadCases =\n\t\tstatusId in unreadCasesCountByStatus && unreadCasesCountByStatus[statusId] > 0;\n\tconst isSearchEnabled = searchQuery.length > 0;\n\tconst showUnreadCount = isThereUnreadCases && isFilterNotSelected && !isSearchEnabled;\n\n\treturn (\n\t\t<div\n\t\t\tclassName={\n\t\t\t\t'status__header relative mb-4 w-full flex-shrink-0 rounded-xl bg-kgrey-bg py-3.5 pl-5 pr-14 leading-none dark:bg-kdark-lighter'\n\t\t\t}\n\t\t\t{...draggableHandleProps}\n\t\t>\n\t\t\t<strong className={'break-words font-medium text-black dark:text-white'}>{name}</strong>\n\t\t\t{totalCount > 0 ? (\n\t\t\t\t<span className={'ml-2 text-sm font-thin text-kgrey-variant-2'}>\n\t\t\t\t\t/ total cases: <strong className={'font-semibold'}>{totalCount}</strong>\n\t\t\t\t</span>\n\t\t\t) : null}\n\t\t\t{showUnreadCount ? (\n\t\t\t\t<div\n\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t'ml-2 inline-block h-6 w-6 rounded-full bg-primary text-center text-sm font-semibold leading-6 text-white',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'w-fit px-1': unreadCasesCountByStatus[statusId] >= CASES_UNREAD_BADGE_COUNT\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{unreadCasesCountByStatus[statusId]}\n\t\t\t\t</div>\n\t\t\t) : null}\n\n\t\t\t<IconButton\n\t\t\t\tclassName={clsx('!absolute right-7 top-2', {\n\t\t\t\t\t'!text-primary': statusReverseState?.[statusId]\n\t\t\t\t})}\n\t\t\t\tsize=\"small\"\n\t\t\t\tonClick={handleReverseState}\n\t\t\t>\n\t\t\t\t{statusReverseState?.[statusId] ? <IconSortDown /> : <IconSortDefault />}\n\t\t\t</IconButton>\n\t\t\t<StatusHeaderDots\n\t\t\t\tstatusId={statusId}\n\t\t\t\tname={name}\n\t\t\t\tisConfirmationRequired={isConfirmationRequired}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport function StatusHeader(props: Props) {\n\treturn (\n\t\t<ErrorBoundary isCompact>\n\t\t\t<StatusHeaderInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const CaseItemLoader = (props: any) => (\n\t<ContentLoader\n\t\tspeed={2}\n\t\twidth={362}\n\t\theight={150}\n\t\tviewBox=\"0 0 362 150\"\n\t\tbackgroundColor=\"#f3f3f3\"\n\t\tforegroundColor=\"#ecebeb\"\n\t\t{...props}\n\t>\n\t\t<rect x=\"4\" y=\"24\" rx=\"0\" ry=\"0\" width=\"0\" height=\"1\" />\n\t\t<rect x=\"117\" y=\"153\" rx=\"0\" ry=\"0\" width=\"0\" height=\"1\" />\n\t\t<rect x=\"8\" y=\"1\" rx=\"4\" ry=\"4\" width=\"104\" height=\"12\" />\n\t\t<rect x=\"274\" y=\"0\" rx=\"7\" ry=\"7\" width=\"61\" height=\"17\" />\n\t\t<circle cx=\"351\" cy=\"7\" r=\"6\" />\n\t\t<circle cx=\"372\" cy=\"30\" r=\"6\" />\n\t\t<circle cx=\"351\" cy=\"23\" r=\"6\" />\n\t\t<circle cx=\"351\" cy=\"38\" r=\"6\" />\n\t\t<circle cx=\"26\" cy=\"56\" r=\"22\" />\n\t\t<rect x=\"66\" y=\"39\" rx=\"5\" ry=\"5\" width=\"199\" height=\"13\" />\n\t\t<rect x=\"68\" y=\"63\" rx=\"3\" ry=\"3\" width=\"136\" height=\"10\" />\n\t\t<rect x=\"68\" y=\"83\" rx=\"3\" ry=\"3\" width=\"135\" height=\"8\" />\n\t\t<rect x=\"25\" y=\"119\" rx=\"5\" ry=\"5\" width=\"242\" height=\"14\" />\n\t\t<rect x=\"327\" y=\"120\" rx=\"7\" ry=\"7\" width=\"17\" height=\"14\" />\n\t\t<rect x=\"304\" y=\"120\" rx=\"8\" ry=\"8\" width=\"17\" height=\"14\" />\n\t</ContentLoader>\n);\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const StatusLoader = (props: any) => (\n\t<ContentLoader\n\t\tspeed={2}\n\t\twidth={362}\n\t\theight={800}\n\t\tviewBox=\"0 0 362 800\"\n\t\tbackgroundColor=\"#f3f3f3\"\n\t\tforegroundColor=\"#ecebeb\"\n\t\t{...props}\n\t>\n\t\t<rect x=\"4\" y=\"24\" rx=\"0\" ry=\"0\" width=\"0\" height=\"1\" />\n\t\t<rect x=\"117\" y=\"153\" rx=\"0\" ry=\"0\" width=\"0\" height=\"1\" />\n\t\t<circle cx=\"372\" cy=\"30\" r=\"6\" />\n\t\t<rect x=\"5\" y=\"5\" rx=\"5\" ry=\"5\" width=\"350\" height=\"49\" />\n\t\t<rect x=\"6\" y=\"79\" rx=\"5\" ry=\"5\" width=\"347\" height=\"724\" />\n\t</ContentLoader>\n);\n","import React, { useMemo, useRef } from 'react';\nimport { useAppState } from 'shared/state';\nimport { CaseItemMarkup } from './CaseItemMarkup';\nimport { Priority } from 'shared/interfaces';\nimport { EntityDraft } from '../../GroupChat/types';\nimport { ErrorBoundary } from 'shared/components';\nimport { ToggleCaseDetailsOpen } from './case-details/CaseDetails.types';\n// import { useQueryParams } from '../../../shared/hooks';\n\ntype CompanyType = {\n\tid: number;\n\tname: string;\n};\n\nexport type CaseType = {\n\tid: number;\n\ttitle: any;\n\tcase_number: string;\n\tbusiness_company: CompanyType;\n\tclient_company: CompanyType;\n\tdepartment: {\n\t\tid: number;\n\t\tname: string;\n\t\ticon: {\n\t\t\tthumbnail: string | null;\n\t\t\tthumbnail_150: string | null;\n\t\t};\n\t};\n\ttext?: string;\n\tsub_department: {\n\t\tid: number;\n\t\tname: string;\n\t\ticon: {\n\t\t\tthumbnail: string | null;\n\t\t\tthumbnail_150: string | null;\n\t\t};\n\t};\n\tstatus: {\n\t\tid: number;\n\t\ttitle: string;\n\t};\n\tlast_message_type: string | null;\n\tlast_message_text: string;\n\tlast_message_author: {\n\t\tfirst_name: string;\n\t\tlast_name: string;\n\t};\n\tlast_message_time: any;\n\tpriority: Priority;\n\tpin_time: null | string;\n\tdraft_message: EntityDraft;\n\tassignee_ids: null | number[];\n\thas_linked_case: boolean;\n\trelated_to_id: boolean;\n\trecurring_id: number;\n\tlast_read_message: number | null;\n};\n\ntype Props = {\n\tcaseData: CaseType;\n\tisFetched: boolean;\n\tisDragging?: boolean;\n\ttoggleCaseDetailsOpen: ToggleCaseDetailsOpen;\n};\n\nconst CaseItemInner = (props: Props) => {\n\tconst { caseData, isDragging, toggleCaseDetailsOpen /*, isFetched */ } = props;\n\tconst caseRef = useRef<HTMLDivElement>(null);\n\n\tconst { unreadMessagesCount /*, searchQuery, caseType*/ } = useAppState();\n\t// const { query } = useQueryParams<{ case: string; status: string; searchedMessageId?: string }>();\n\n\tconst department = caseData.department,\n\t\tsub_department = caseData.sub_department,\n\t\tcaseTitle = caseData.title,\n\t\tlast_message_type = caseData.last_message_type,\n\t\tlast_message_text = caseData.last_message_text,\n\t\tlast_message_author = caseData.last_message_author,\n\t\tcase_number = caseData.case_number,\n\t\tlast_message_time = caseData.last_message_time,\n\t\tcaseId = caseData.id,\n\t\tstatusId = caseData?.status?.id,\n\t\tpriority = caseData.priority,\n\t\tdraftMessage = caseData.draft_message,\n\t\thasLinkedCase = caseData.has_linked_case,\n\t\trelatedTo = caseData.related_to_id,\n\t\trecurringId = caseData.recurring_id,\n\t\tlastReadMessage = caseData.last_read_message,\n\t\tassigneeIds = caseData.assignee_ids;\n\n\tconst hasUnread = useMemo(() => unreadMessagesCount?.[caseId], [caseId, unreadMessagesCount]);\n\n\t// const isActive = Number(query.case) === caseId;\n\n\t// useEffect(() => {\n\t// \tif (isActive && isFetched) {\n\t// \t\tcaseRef?.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n\t// \t}\n\t// }, [query, statusId]);\n\n\treturn (\n\t\t<div ref={caseRef} className={`case-${caseId} h-full`}>\n\t\t\t<CaseItemMarkup\n\t\t\t\tcase_number={case_number}\n\t\t\t\tcaseTitle={caseTitle}\n\t\t\t\tdepartment={department}\n\t\t\t\tsub_department={sub_department}\n\t\t\t\tlast_message_author={last_message_author}\n\t\t\t\tlast_message_time={last_message_time}\n\t\t\t\tlast_message_type={last_message_type}\n\t\t\t\tlast_message_text={last_message_text}\n\t\t\t\thasUnread={hasUnread}\n\t\t\t\tcaseId={caseId}\n\t\t\t\tstatusId={statusId}\n\t\t\t\tpin_time={caseData.pin_time}\n\t\t\t\tpriority={priority}\n\t\t\t\tdraftMessage={draftMessage}\n\t\t\t\tassigneeIds={assigneeIds}\n\t\t\t\tisDragging={isDragging}\n\t\t\t\ttoggleCaseDetailsOpen={toggleCaseDetailsOpen}\n\t\t\t\thasLinkedCase={hasLinkedCase}\n\t\t\t\trelatedTo={relatedTo}\n\t\t\t\trecurringId={recurringId}\n\t\t\t\tlastReadMessage={lastReadMessage}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport function CaseItem(props: Props) {\n\treturn (\n\t\t<ErrorBoundary isCompact>\n\t\t\t<CaseItemInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport { useAppState } from 'shared/state';\nimport { CaseItemMarkup } from './CaseItemMarkup';\nimport { SearchCaseEntity } from 'shared/interfaces';\nimport { ErrorBoundary } from 'shared/components';\nimport { ToggleCaseDetailsOpen } from './case-details/CaseDetails.types';\n\nexport type SearchedCaseType = {\n\tid: number;\n\ttext: any;\n\tentity_id: number;\n\trecurring_id: number;\n\tpin_time: null | string;\n\tcase_: SearchCaseEntity;\n\tfrom_user: {\n\t\tfirst_name: string;\n\t\tlast_name: string;\n\t};\n};\n\ntype Props = {\n\tcaseData: SearchedCaseType;\n\tisDragging?: boolean;\n\ttoggleCaseDetailsOpen: ToggleCaseDetailsOpen;\n};\n\nexport const SearchCaseItemInner = ({ caseData, isDragging, toggleCaseDetailsOpen }: Props) => {\n\tconst { unreadMessagesCount } = useAppState();\n\n\tconst department = caseData.case_?.department,\n\t\tsub_department = caseData.case_?.sub_department,\n\t\tcaseTitle = caseData?.case_?.pinned_message?.text,\n\t\tlast_message_type = caseData.case_?.last_message_type,\n\t\tlast_message_text = caseData.text,\n\t\tlast_message_author = caseData.from_user,\n\t\tcase_number = caseData.case_?.case_number,\n\t\tpriority = caseData.case_?.priority,\n\t\tlast_message_time = caseData.case_?.last_message_time,\n\t\tcaseId = caseData?.entity_id,\n\t\tstatusId = caseData?.case_.status,\n\t\tdraftMessage = caseData?.case_.draft_message,\n\t\tassigneeIds = caseData?.case_.assignee_ids,\n\t\thasLinkedCase = caseData?.case_.has_linked_case,\n\t\tlastReadMessage = caseData?.case_.last_read_message,\n\t\trecurringId = caseData?.recurring_id;\n\n\tconst hasUnread = unreadMessagesCount?.[caseId];\n\n\treturn (\n\t\t<CaseItemMarkup\n\t\t\tcase_number={case_number}\n\t\t\tcaseTitle={caseTitle}\n\t\t\tdepartment={department}\n\t\t\tsub_department={sub_department}\n\t\t\tlast_message_author={last_message_author}\n\t\t\tlast_message_time={last_message_time}\n\t\t\tlast_message_type={last_message_type}\n\t\t\tlast_message_text={last_message_text}\n\t\t\thasUnread={hasUnread}\n\t\t\tcaseId={caseId}\n\t\t\tpin_time={caseData?.pin_time}\n\t\t\tstatusId={statusId}\n\t\t\tsearchedMessageId={caseData.id}\n\t\t\tpriority={priority}\n\t\t\tdraftMessage={draftMessage}\n\t\t\tassigneeIds={assigneeIds}\n\t\t\tisDragging={isDragging}\n\t\t\ttoggleCaseDetailsOpen={toggleCaseDetailsOpen}\n\t\t\trecurringId={recurringId}\n\t\t\trelatedTo={null}\n\t\t\thasLinkedCase={hasLinkedCase}\n\t\t\tlastReadMessage={lastReadMessage}\n\t\t/>\n\t);\n};\n\nexport function SearchCaseItem(props: Props) {\n\treturn (\n\t\t<ErrorBoundary isCompact>\n\t\t\t<SearchCaseItemInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport { DraggableProvided } from 'react-beautiful-dnd';\nimport { CaseItem } from './CaseItem';\nimport { SearchCaseItem } from './SearchCaseItem';\nimport { ToggleCaseDetailsOpen } from './case-details/CaseDetails.types';\n\ntype GetStyleArgs = {\n\tdraggableStyle: any; //!\n\tvirtualStyle: Record<string, any>;\n\tisDragging: boolean;\n};\n\nfunction getStyle({ draggableStyle, virtualStyle, isDragging }: GetStyleArgs) {\n\t// If you don't want any spacing between your items\n\t// then you could just return this.\n\t// I do a little bit of magic to have some nice visual space\n\t// between the row items\n\tconst combined = {\n\t\t...virtualStyle,\n\t\t...draggableStyle\n\t};\n\n\t// Being lazy: this is defined in our css file\n\tconst grid = 10;\n\n\t// when dragging we want to use the draggable style for placement, otherwise use the virtual style\n\treturn {\n\t\t...combined,\n\t\theight: isDragging ? combined.height : combined.height - grid,\n\t\t// left: isDragging ? combined.left : combined.left + grid,\n\t\t// width: isDragging ? draggableStyle.width : `calc(${combined.width} - ${grid * 2}px)`,\n\t\tmarginBottom: grid\n\t};\n}\n\ntype ReactWindowItemProps = {\n\tprovided: DraggableProvided;\n\titem: any;\n\tisDragging: boolean;\n\tstyle?: Record<string, any>;\n\tisFetched?: boolean;\n\ttoggleCaseDetailsOpen: ToggleCaseDetailsOpen;\n};\n\nexport function DragItem({\n\tprovided,\n\titem,\n\tstyle = {},\n\tisDragging,\n\tisFetched = false,\n\ttoggleCaseDetailsOpen\n}: ReactWindowItemProps) {\n\treturn (\n\t\t<div\n\t\t\t{...provided.draggableProps}\n\t\t\t{...provided.dragHandleProps}\n\t\t\tref={provided.innerRef}\n\t\t\tstyle={getStyle({\n\t\t\t\tdraggableStyle: provided.draggableProps.style,\n\t\t\t\tvirtualStyle: style,\n\t\t\t\tisDragging\n\t\t\t})}\n\t\t\tclassName={`item ${isDragging ? 'is-dragging' : ''}`}\n\t\t>\n\t\t\t{'case_' in (item ?? {}) ? ( //https://youtu.be/I_jBM7MV95g\n\t\t\t\t<SearchCaseItem\n\t\t\t\t\tcaseData={item}\n\t\t\t\t\tisDragging={isDragging}\n\t\t\t\t\ttoggleCaseDetailsOpen={toggleCaseDetailsOpen}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<CaseItem\n\t\t\t\t\tcaseData={item}\n\t\t\t\t\tisFetched={isFetched}\n\t\t\t\t\tisDragging={isDragging}\n\t\t\t\t\ttoggleCaseDetailsOpen={toggleCaseDetailsOpen}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { DragItem } from './DragItem';\nimport { areEqual } from 'react-window';\nimport { SearchedCaseType } from './SearchCaseItem';\nimport { CaseType } from './CaseItem';\n\ntype RowProps = {\n\tdata: any;\n\tindex: number;\n\tstyle: Record<string, any>;\n};\ntype CaseDragItem = SearchedCaseType | CaseType;\nconst getDragId = (item: CaseDragItem) => {\n\tif ('case_' in item) {\n\t\treturn `${item?.id?.toString()}|${item?.case_?.id?.toString()}`;\n\t} else {\n\t\treturn `${item?.id?.toString()}|${item?.id?.toString()}`;\n\t}\n};\n\n// Recommended react-window performance optimisation: memoize the row render function\n// Things are still pretty fast without this, but I am a sucker for making things faster\nexport const DndRow = React.memo(function Row(props: RowProps) {\n\tconst { data: items, index, style } = props;\n\tconst item = items.itemsData[index];\n\tconst toggleCaseDetailsOpen = items.toggleCaseDetailsOpen;\n\n\t// We are rendering an extra item for the placeholder\n\tif (!item) {\n\t\treturn null;\n\t}\n\n\tconst draggableId = getDragId(item);\n\n\treturn (\n\t\t<Draggable draggableId={draggableId} index={index} key={draggableId}>\n\t\t\t{(provided, snapshot) => (\n\t\t\t\t<DragItem\n\t\t\t\t\tisFetched={items.isFetched}\n\t\t\t\t\tprovided={provided}\n\t\t\t\t\titem={item}\n\t\t\t\t\tstyle={style}\n\t\t\t\t\tisDragging={snapshot.isDragging}\n\t\t\t\t\ttoggleCaseDetailsOpen={toggleCaseDetailsOpen}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Draggable>\n\t);\n}, areEqual);\n","import React, { useEffect, useRef } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { FixedSizeList } from 'react-window';\nimport { StatusType } from './Status';\nimport InfiniteLoader from 'react-window-infinite-loader';\nimport { DragItem } from './DragItem';\nimport { DndRow } from './DndRow';\nimport config from 'config';\nimport { ToggleCaseDetailsOpen } from './case-details/CaseDetails.types';\nimport { useWindowSize } from '../../../shared/hooks';\nimport { isMobile } from 'react-device-detect';\n\ntype Props = {\n\titems: any;\n\tstatus: StatusType;\n\tisFetched: boolean;\n\tloadMore: (hasToLoadMore?: any) => void;\n\thasNextPage: number | boolean | undefined;\n\ttoggleCaseDetailsOpen: ToggleCaseDetailsOpen;\n\tresetCacheKeys: any[];\n};\n\nconst HEADER_PLUS_STATUS_HEADER_PLUS_MARGINS_HEIGHTS_DESK = 144;\nconst HEADER_PLUS_STATUS_HEADER_PLUS_MARGINS_HEIGHTS_MOB = 120;\n\nexport const ListComponent = React.memo(function ItemList({\n\titems,\n\tstatus,\n\tisFetched,\n\tloadMore,\n\thasNextPage,\n\ttoggleCaseDetailsOpen,\n\tresetCacheKeys\n}: Props) {\n\tconst { height: windowHeight } = useWindowSize();\n\t// There is an issue I have noticed with react-window that when reordered\n\t// react-window sets the scroll back to 0 but does not update the UI\n\t// I should raise an issue for this.\n\t// As a workaround I am resetting the scroll to 0\n\t// on any list that changes it's index\n\n\t//TODO:REMOVE IF DRAG-N-DROP FEATURE IS DONE AND WORKING JUST FINE WITHOUT ISSUES\n\t// const listRef = useRef();\n\t// useLayoutEffect(() => {\n\t// \tconst list = listRef.current;\n\t// \tif (list) {\n\t// \t\t// @ts-ignore\n\t// \t\tlist.scrollTo(0);\n\t// \t}\n\t// }, [index]);\n\n\t// We create a reference for the InfiniteLoader\n\tconst infiniteLoaderRef = useRef(null);\n\tconst hasMountedRef = useRef(false);\n\n\t// Each time the sort prop changed we called the method resetloadMoreItemsCache to clear the cache\n\tuseEffect(() => {\n\t\t// We only need to reset cached items when \"sortOrder\" changes.\n\t\t// This effect will run on mount too; there's no need to reset in that case.\n\t\tif (hasMountedRef.current) {\n\t\t\tif (infiniteLoaderRef.current) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tinfiniteLoaderRef?.current?.resetloadMoreItemsCache();\n\t\t\t}\n\t\t}\n\t\thasMountedRef.current = true;\n\t}, [resetCacheKeys]);\n\n\treturn (\n\t\t<Droppable\n\t\t\tdroppableId={status.id.toString()}\n\t\t\tmode=\"virtual\"\n\t\t\ttype={config.CASES_DROPPABLE_TYPE}\n\t\t\trenderClone={(provided, snapshot, rubric) => (\n\t\t\t\t<DragItem\n\t\t\t\t\tprovided={provided}\n\t\t\t\t\tisDragging={snapshot.isDragging}\n\t\t\t\t\titem={items[rubric.source.index]}\n\t\t\t\t\tisFetched={isFetched}\n\t\t\t\t\ttoggleCaseDetailsOpen={toggleCaseDetailsOpen}\n\t\t\t\t/>\n\t\t\t)}\n\t\t>\n\t\t\t{(provided) => {\n\t\t\t\t// Add an extra item to our list to make space for a dragging item\n\t\t\t\t// Usually the DroppableProvided.placeholder does this, but that won't\n\t\t\t\t// work in a virtual list\n\t\t\t\t// const itemCount = snapshot.isUsingPlaceholder ? items.length + 1 : items.length;\n\t\t\t\tconst itemCount = hasNextPage ? items.length + 1 : items.length;\n\n\t\t\t\treturn (\n\t\t\t\t\t<InfiniteLoader\n\t\t\t\t\t\tisItemLoaded={(index) => index < items.length}\n\t\t\t\t\t\titemCount={itemCount}\n\t\t\t\t\t\tloadMoreItems={loadMore}\n\t\t\t\t\t\tref={infiniteLoaderRef}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({ onItemsRendered, ref }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<FixedSizeList\n\t\t\t\t\t\t\t\t\theight={\n\t\t\t\t\t\t\t\t\t\twindowHeight\n\t\t\t\t\t\t\t\t\t\t\t? windowHeight -\n\t\t\t\t\t\t\t\t\t\t\t  (isMobile\n\t\t\t\t\t\t\t\t\t\t\t\t\t? HEADER_PLUS_STATUS_HEADER_PLUS_MARGINS_HEIGHTS_MOB\n\t\t\t\t\t\t\t\t\t\t\t\t\t: HEADER_PLUS_STATUS_HEADER_PLUS_MARGINS_HEIGHTS_DESK)\n\t\t\t\t\t\t\t\t\t\t\t: 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\titemCount={itemCount}\n\t\t\t\t\t\t\t\t\titemSize={166}\n\t\t\t\t\t\t\t\t\twidth={362}\n\t\t\t\t\t\t\t\t\touterRef={provided.innerRef}\n\t\t\t\t\t\t\t\t\titemData={{ itemsData: items, isFetched, toggleCaseDetailsOpen }}\n\t\t\t\t\t\t\t\t\tclassName=\"task-list pb-8\"\n\t\t\t\t\t\t\t\t\t// @ts-ignore TODO: remove after dnd logic completed\n\t\t\t\t\t\t\t\t\t// ref={listRef}\n\t\t\t\t\t\t\t\t\tonItemsRendered={onItemsRendered}\n\t\t\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{DndRow}\n\t\t\t\t\t\t\t\t</FixedSizeList>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</InfiniteLoader>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Droppable>\n\t);\n});\n","/**@jsxImportSource @emotion/react */\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { css } from '@emotion/react';\nimport { StatusHeader } from './StatusHeader';\n// import { Scrollbars } from 'react-custom-scrollbars-2';\nimport EntityContainer from 'modules/entity/containers';\nimport { useAppState } from 'shared/state';\nimport { ErrorBoundary } from 'shared/components';\nimport { CaseItemLoader } from 'shared/components/Loaders';\nimport useDimensions from 'react-use-dimensions';\nimport { isMobile, isSafari } from 'react-device-detect';\nimport { useGetEntity, useQueryParams } from 'shared/hooks';\nimport { useCaseExtraParams } from '../hooks/useCaseExtraParams';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { ListComponent } from './ListComponent';\nimport { useCaseDetailsToggle, useStatusCaseList } from '../hooks';\nimport { WhiteModal } from 'shared/components/Elements';\nimport { CaseDetails } from './case-details';\nimport { getCaseEntityName, sortChatList } from 'shared/services';\nimport clsx from 'clsx';\nimport { Case } from 'shared/interfaces';\nimport dayjs from 'dayjs';\n\nexport type StatusType = {\n\tid: number;\n\ttitle: string;\n\torder_number: number;\n\tcompany_id: number;\n\tis_staff: boolean;\n\tis_confirmation_required: boolean;\n\tis_feedback_required: boolean;\n\tconfirmed: any;\n\tnot_confirmed: any;\n};\n\ntype Props = {\n\tstatus: StatusType;\n\tindex: number;\n};\n\nconst CaseSkeletons = () => (\n\t<>\n\t\t{[...Array(6)].map((item: any, idx) => {\n\t\t\treturn (\n\t\t\t\t<div className={'mb-2'} key={idx}>\n\t\t\t\t\t<CaseItemLoader />\n\t\t\t\t</div>\n\t\t\t);\n\t\t})}\n\t</>\n);\n\nconst NoCases = () => (\n\t<div\n\t\tclassName={'flex-centered h-[148px] rounded-xl border border-dashed font-poppins text-kgrey'}\n\t>\n\t\tNo Cases\n\t</div>\n);\n\nfunction StatusInner({ status, index }: Props) {\n\tconst { query } = useQueryParams();\n\tconst reloadCases = query?.reloadCases;\n\tconst reloadStatusId = query?.reloadStatusId;\n\tconst computedPage = (reloadCases === 'true' && reloadStatusId) || query?.forceUpdate ? 1 : 0;\n\tconst [page, setPage] = useState(computedPage);\n\tconst [searchPage, setSearchPage] = useState(computedPage);\n\tconst { searchQuery, caseType, isPermitted, statusReverseState, isDarkMode, selectedCaseFilter } =\n\t\tuseAppState();\n\tconst [statusBodyRef, { height: statusBodyHeight }] = useDimensions();\n\tconst { extraParams, casesUrl, selectedFilterTemplate } = useCaseExtraParams({\n\t\tstatusId: status.id\n\t});\n\n\tconst entityName = getCaseEntityName({\n\t\tstatusId: status.id,\n\t\tcaseType,\n\t\tsearchQuery,\n\t\tselectedFilterTemplate\n\t});\n\n\tconst { all: currentStatusCaseEntity } = useGetEntity({\n\t\tentity: 'cases',\n\t\tentityId: status.id,\n\t\tentityName\n\t});\n\n\tconst currentStatusReverseState = statusReverseState?.[status.id as number];\n\tconst { toggleCaseDetailsOpen, caseDetailsOpen, closeCaseDetailModal } = useCaseDetailsToggle();\n\tuseStatusCaseList(status);\n\n\t//https://www.youtube.com/watch?v=b1_M0FJWVYQ - explanation of reloading cases implementation\n\tuseEffect(() => {\n\t\tif (reloadStatusId && parseInt(reloadStatusId as string) === status.id) {\n\t\t\tsetSearchPage(computedPage);\n\t\t\tsetPage(computedPage);\n\t\t}\n\t}, [computedPage, reloadStatusId]);\n\n\t/* re-fetching statuses from page 1 when certain actions: changing/applying filter, reversing status\n\tand searching cases. \"reloadStatusId\" should not affect on these actions. fix case numbers (3049, 3306) */\n\tuseEffect(() => {\n\t\tsetSearchPage(computedPage);\n\t\tsetPage(computedPage);\n\t}, [selectedFilterTemplate, currentStatusReverseState, searchQuery]);\n\n\t/*\n\tComplicated case fetching. Because of different endpoints\n  and payload structure for case in normal and search mode\n   * */\n\n\tconst loadMore = useCallback(\n\t\t(hasToLoadMore) => {\n\t\t\tif (hasToLoadMore) {\n\t\t\t\tsearchQuery.length\n\t\t\t\t\t? setSearchPage((prev) => (prev === 0 ? prev + 2 : prev + 1))\n\t\t\t\t\t: setPage((prev) => (prev === 0 ? prev + 2 : prev + 1));\n\t\t\t}\n\t\t},\n\t\t[searchQuery, page, searchPage]\n\t);\n\n\treturn (\n\t\t<EntityContainer.All\n\t\t\tentity=\"cases\"\n\t\t\tname={entityName}\n\t\t\turl={casesUrl}\n\t\t\tparams={{\n\t\t\t\textra: {\n\t\t\t\t\t...extraParams\n\t\t\t\t},\n\t\t\t\tlimit: 10,\n\t\t\t\tpage: searchQuery.length ? searchPage : page\n\t\t\t}}\n\t\t\tappendData\n\t\t\tcancelField=\"status\"\n\t\t\treplaceIds={(page === 1 || page === 0) && !searchQuery.length}\n\t\t\tisCancellable={!!searchQuery.length}\n\t\t>\n\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\tconst metaCurrentPage = meta?.current_page || 1;\n\t\t\t\tconst hasToLoadMore =\n\t\t\t\t\tisFetched && metaCurrentPage && meta?.last_page && metaCurrentPage < meta?.last_page;\n\n\t\t\t\tconst mappedItems = (items as Case[]).reduce((acc, curr, index) => {\n\t\t\t\t\tif (currentStatusReverseState) {\n\t\t\t\t\t\t//CASE 3111 - added reversed_date: number to trigger sort by this date prop when reverse status ordering is active\n\t\t\t\t\t\treturn [...acc, { ...curr, reversed_date: dayjs().unix() + index }];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [...acc, curr];\n\t\t\t\t\t}\n\t\t\t\t}, [] as Case[]);\n\n\t\t\t\tconst sortedItems = sortChatList<Case>(mappedItems);\n\n\t\t\t\treturn (\n\t\t\t\t\t<Draggable\n\t\t\t\t\t\tdraggableId={status.id.toString()}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\tisDragDisabled={isMobile || !isPermitted}\n\t\t\t\t\t>\n\t\t\t\t\t\t{(provided) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\t\t\t`status status-${status.id} mr-4 flex h-full w-[362px] flex-col`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\thidden:\n\t\t\t\t\t\t\t\t\t\t\t\tisFetched &&\n\t\t\t\t\t\t\t\t\t\t\t\t!items.length &&\n\t\t\t\t\t\t\t\t\t\t\t\t(searchQuery.length || selectedCaseFilter[caseType])\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<StatusHeader\n\t\t\t\t\t\t\t\t\t\tname={status.title}\n\t\t\t\t\t\t\t\t\t\ttotalCount={currentStatusCaseEntity?.meta?.count}\n\t\t\t\t\t\t\t\t\t\tstatusId={status.id}\n\t\t\t\t\t\t\t\t\t\tisConfirmationRequired={status.is_confirmation_required}\n\t\t\t\t\t\t\t\t\t\tdraggableHandleProps={provided.dragHandleProps}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tref={statusBodyRef}\n\t\t\t\t\t\t\t\t\t\tclassName=\"status__body relative w-full flex-grow overflow-hidden rounded-xl bg-white dark:bg-transparent\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t\t\t\t\t\theight: ${isSafari && `${statusBodyHeight}px`};\n\t\t\t\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t\t\t\t\tclassName={clsx('status__inner h-full', !items.length && 'no-cases-found', {\n\t\t\t\t\t\t\t\t\t\t\t\t'status__inner-dark': isDarkMode\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{/*<Scrollbars style={{ height: '100%' }} autoHide>*/}\n\t\t\t\t\t\t\t\t\t\t\t{!isFetched && items.length === 0 && <CaseSkeletons />}\n\t\t\t\t\t\t\t\t\t\t\t{items.length === 0 && isFetched && <NoCases />}\n\t\t\t\t\t\t\t\t\t\t\t<ListComponent\n\t\t\t\t\t\t\t\t\t\t\t\tstatus={status}\n\t\t\t\t\t\t\t\t\t\t\t\titems={sortedItems}\n\t\t\t\t\t\t\t\t\t\t\t\tisFetched={isFetched}\n\t\t\t\t\t\t\t\t\t\t\t\tloadMore={loadMore}\n\t\t\t\t\t\t\t\t\t\t\t\thasNextPage={hasToLoadMore}\n\t\t\t\t\t\t\t\t\t\t\t\ttoggleCaseDetailsOpen={toggleCaseDetailsOpen}\n\t\t\t\t\t\t\t\t\t\t\t\tresetCacheKeys={[computedPage, currentStatusReverseState]}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{/*</Scrollbars>*/}\n\t\t\t\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\t\t\t\thandleModalOpen={closeCaseDetailModal}\n\t\t\t\t\t\t\t\t\t\t\t\topen={Boolean(caseDetailsOpen)}\n\t\t\t\t\t\t\t\t\t\t\t\tminWidth={362}\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth={550}\n\t\t\t\t\t\t\t\t\t\t\t\tscrollable\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<CaseDetails\n\t\t\t\t\t\t\t\t\t\t\t\t\tcaseId={caseDetailsOpen}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcloseCaseDetailModal={closeCaseDetailModal}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Draggable>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityContainer.All>\n\t);\n}\n\nexport function Status(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<StatusInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport { Button } from '../../../shared/components/Elements';\nimport { Field } from 'formik';\nimport { Loader } from '../../../shared/components';\nimport EntityForm from '../../../modules/entity/forms';\nimport { useAppState } from '../../../shared/state';\nimport { useNotistack } from '../../../shared/hooks';\nimport { KntInputField } from '../../../shared/components/Fields';\nimport { useSelector } from 'react-redux';\nimport { IRootState } from '../../../shared/interfaces';\nimport config from '../../../config';\nimport { MAX_STATUS_TITLE_CHARACTER } from '../constants';\n\ntype Props = {\n\tonClose: () => void;\n};\n\nfunction StatusCreateForm({ onClose }: Props) {\n\tconst { companyId, caseType } = useAppState();\n\tconst { showNotification } = useNotistack();\n\tconst entityObjectInReduxState = useSelector((state: IRootState) => state.entity);\n\n\tconst entityName = `AllStatuses-${companyId}`;\n\tconst statusIds = entityObjectInReduxState.statuses?.[entityName].ids ?? [];\n\n\treturn (\n\t\t<EntityForm.Main\n\t\t\tentity=\"statuses\"\n\t\t\tname={`AllStatuses-${companyId}`}\n\t\t\turl={`/${companyId}/my/company/case_statuses/`}\n\t\t\tmethod=\"post\"\n\t\t\tprimaryKey=\"id\"\n\t\t\tsendAsFormData={false}\n\t\t\tnormalizeData={(data: any) => data}\n\t\t\tappendData\n\t\t\tfields={[\n\t\t\t\t{\n\t\t\t\t\tname: 'title',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'order_number',\n\t\t\t\t\tvalue: statusIds.length,\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'is_default',\n\t\t\t\t\tvalue: false,\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'is_staff',\n\t\t\t\t\tvalue: caseType === config.STAFF,\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'is_feedback_required',\n\t\t\t\t\tvalue: false,\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'is_confirmation_required',\n\t\t\t\t\tvalue: false,\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t}\n\t\t\t]}\n\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: 'Status has been successfully created',\n\t\t\t\t\tvariant: 'success'\n\t\t\t\t});\n\t\t\t\tonClose();\n\t\t\t}}\n\t\t\tonError={(error, resetForm): any => {\n\t\t\t\t// resetForm();\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: error?.response?.data?.message ?? 'Something went wrong',\n\t\t\t\t\tvariant: 'error'\n\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t{({ values, isSubmitting }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2 className=\"mb-4 text-xl font-bold\">Create New Status</h2>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tlabel={'Status Title'}\n\t\t\t\t\t\t\tlabelClasses=\"ml-6 text-xs font-light text-kgrey-welcome mb-2 block\"\n\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\tcomponent={KntInputField}\n\t\t\t\t\t\t\tplaceholder={'Type Status Title'}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tcharacterLimit={MAX_STATUS_TITLE_CHARACTER}\n\t\t\t\t\t\t\tcharacterCount={values.title.length}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"mt-4 flex items-center justify-end\">\n\t\t\t\t\t\t\t<Button variant=\"outlined\" type=\"button\" onClick={onClose}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"!ml-4\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tdisabled={!values.title || isSubmitting}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{isSubmitting && <Loader tiled />}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityForm.Main>\n\t);\n}\n\nexport default StatusCreateForm;\n","import React, { useState } from 'react';\nimport { Button } from 'shared/components';\nimport StatusCreateForm from './StatusCreateForm';\nimport { WhiteModal } from '../../../shared/components/Elements';\n\nexport function StatusCreateButton() {\n\tconst [visibleForm, setVisibleForm] = useState(false);\n\n\tconst toggleForm = () => setVisibleForm((prev) => !prev);\n\n\treturn (\n\t\t<div className=\"status mr-4 flex h-full w-[362px] flex-col\">\n\t\t\t<Button variant=\"outlined\" color=\"primary\" onClickHandler={toggleForm}>\n\t\t\t\tCreate Status\n\t\t\t</Button>\n\t\t\t<WhiteModal handleModalOpen={toggleForm} open={visibleForm} maxWidth={446}>\n\t\t\t\t<StatusCreateForm onClose={toggleForm} />\n\t\t\t</WhiteModal>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport EntityForm from 'modules/entity/forms';\nimport { useAppState } from 'shared/state';\nimport AsyncSelectJs from 'shared/components/Fields/AsyncSelectJs';\nimport { KntTwilioStyle } from 'shared/services';\nimport { Field } from 'formik';\nimport { Button } from 'shared/components/Elements';\nimport { Loader } from 'shared/components';\nimport { useGetEntity, useNotistack } from 'shared/hooks';\nimport { StatusType } from './Status';\n\ntype Props = {\n\tcloseEditStatusModal: () => void;\n};\n\nexport function ConfirmationStatusesForm({ closeEditStatusModal }: Props) {\n\tconst { isStaff, companyId, selectedStatus } = useAppState();\n\tconst { showNotification } = useNotistack();\n\n\tconst { all: statuses } = useGetEntity({\n\t\tentity: 'statuses',\n\t\tentityName: `AllStatuses-${companyId}`\n\t});\n\n\tconst currentSelectedStatus = (statuses.items as StatusType[]).find(\n\t\t(st) => st.id === selectedStatus?.statusId\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<EntityForm.Main\n\t\t\t\tid={selectedStatus?.statusId}\n\t\t\t\tentity=\"statuses\"\n\t\t\t\tname={`AllStatuses-${companyId}`}\n\t\t\t\turl={`/${companyId}/my/company/case_statuses/${selectedStatus?.statusId}/`}\n\t\t\t\tmethod=\"patch\"\n\t\t\t\tprimaryKey=\"id\"\n\t\t\t\tappendData\n\t\t\t\tsendAsFormData={false}\n\t\t\t\tnormalizeData={(data: any) => data}\n\t\t\t\tfields={[\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'confirmed',\n\t\t\t\t\t\tvalue: currentSelectedStatus?.confirmed,\n\t\t\t\t\t\tonSubmitValue: (value) => (value ? { id: value.id } : null),\n\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\ttype: 'object'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'not_confirmed',\n\t\t\t\t\t\tvalue: currentSelectedStatus?.not_confirmed,\n\t\t\t\t\t\tonSubmitValue: (value) => (value ? { id: value.id } : null),\n\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\ttype: 'object'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'is_confirmation_required',\n\t\t\t\t\t\tvalue: true,\n\t\t\t\t\t\tonSubmitValue: (value, values) => !!(values as any).not_confirmed,\n\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\ttype: 'object'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'title',\n\t\t\t\t\t\tvalue: currentSelectedStatus?.title,\n\t\t\t\t\t\tonSubmitKey: '',\n\t\t\t\t\t\ttype: 'object'\n\t\t\t\t\t}\n\t\t\t\t]}\n\t\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\t\tcloseEditStatusModal();\n\t\t\t\t}}\n\t\t\t\tonError={(error, resetForm): any => {\n\t\t\t\t\t// resetForm();\n\t\t\t\t\tshowNotification({\n\t\t\t\t\t\tmessage: error?.response?.data?.message ?? 'Something went wrong',\n\t\t\t\t\t\tvariant: 'error'\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({ values, isSubmitting }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1 className=\"mb-6 text-lg font-bold\">Action Buttons</h1>\n\t\t\t\t\t\t\t<div className=\"react-select-dropdown mb-4\">\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tcomponent={AsyncSelectJs}\n\t\t\t\t\t\t\t\t\tcustomStylesProps={KntTwilioStyle}\n\t\t\t\t\t\t\t\t\tlabel=\"Not Confirmed\"\n\t\t\t\t\t\t\t\t\tlabelClasses=\"ml-2 text-sm font-light text-kgrey-menuText mb-2 block\"\n\t\t\t\t\t\t\t\t\tname=\"not_confirmed\"\n\t\t\t\t\t\t\t\t\toptionLabel=\"title\"\n\t\t\t\t\t\t\t\t\toptionValue=\"id\"\n\t\t\t\t\t\t\t\t\tisSearchable\n\t\t\t\t\t\t\t\t\tisCached\n\t\t\t\t\t\t\t\t\tisClearable\n\t\t\t\t\t\t\t\t\tplaceholder=\"Select Not Confirmed Status\"\n\t\t\t\t\t\t\t\t\treverse={true}\n\t\t\t\t\t\t\t\t\tloadOptionsUrl={`/${companyId}/my/company/case_statuses/`}\n\t\t\t\t\t\t\t\t\tloadOptionsParams={(search: string) => ({\n\t\t\t\t\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\t\t\t\t\tsearch,\n\t\t\t\t\t\t\t\t\t\t\tis_staff: !isStaff ? 'false' : 'true'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tisOptionDisabled={(option: StatusType) =>\n\t\t\t\t\t\t\t\t\t\toption.id === currentSelectedStatus?.id || values?.confirmed?.id === option.id\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tloadOptionsKey=\"\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"react-select-dropdown mb-4\">\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tcomponent={AsyncSelectJs}\n\t\t\t\t\t\t\t\t\tcustomStylesProps={KntTwilioStyle}\n\t\t\t\t\t\t\t\t\tlabel=\"Confirmed\"\n\t\t\t\t\t\t\t\t\tlabelClasses=\"ml-2 text-sm font-light text-kgrey-menuText mb-2 block\"\n\t\t\t\t\t\t\t\t\tname=\"confirmed\"\n\t\t\t\t\t\t\t\t\toptionLabel=\"title\"\n\t\t\t\t\t\t\t\t\toptionValue=\"id\"\n\t\t\t\t\t\t\t\t\tisSearchable\n\t\t\t\t\t\t\t\t\tisCached\n\t\t\t\t\t\t\t\t\tplaceholder=\"Select Confirmed Status\"\n\t\t\t\t\t\t\t\t\treverse={true}\n\t\t\t\t\t\t\t\t\tisClearable\n\t\t\t\t\t\t\t\t\tloadOptionsUrl={`/${companyId}/my/company/case_statuses/`}\n\t\t\t\t\t\t\t\t\tloadOptionsParams={(search: string) => ({\n\t\t\t\t\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\t\t\t\t\tsearch,\n\t\t\t\t\t\t\t\t\t\t\tis_staff: !isStaff ? 'false' : 'true'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\tisOptionDisabled={(option: StatusType) =>\n\t\t\t\t\t\t\t\t\t\toption.id === currentSelectedStatus?.id ||\n\t\t\t\t\t\t\t\t\t\tvalues?.not_confirmed?.id === option.id\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tloadOptionsKey=\"\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"mt-4 flex items-center justify-end\">\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" type=\"button\" onClick={closeEditStatusModal}>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tclassName=\"!ml-4\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting || !(!!values.confirmed === !!values.not_confirmed)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{values.confirmed && values.not_confirmed ? 'Add' : 'Reset'}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{isSubmitting && <Loader tiled />}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</EntityForm.Main>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport { Button } from '../../../shared/components/Elements';\nimport { Field } from 'formik';\nimport { Loader } from '../../../shared/components';\nimport EntityForm from '../../../modules/entity/forms';\nimport { useAppState } from '../../../shared/state';\nimport { useNotistack } from '../../../shared/hooks';\nimport { KntInputField } from '../../../shared/components/Fields';\nimport { MAX_STATUS_TITLE_CHARACTER } from '../constants';\n\ntype Props = {\n\tonClose: () => void;\n};\n\nfunction StatusCreateForm({ onClose }: Props) {\n\tconst { companyId, selectedStatus } = useAppState();\n\tconst { showNotification } = useNotistack();\n\n\treturn (\n\t\t<EntityForm.Main\n\t\t\tid={selectedStatus?.statusId}\n\t\t\tentity=\"statuses\"\n\t\t\tname={`AllStatuses-${companyId}`}\n\t\t\turl={`/${companyId}/my/company/case_statuses/${selectedStatus?.statusId}/`}\n\t\t\tmethod=\"put\"\n\t\t\tprimaryKey=\"id\"\n\t\t\tappendData\n\t\t\tsendAsFormData={false}\n\t\t\tnormalizeData={(data: any) => data}\n\t\t\tfields={[\n\t\t\t\t{\n\t\t\t\t\tname: 'title',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalue: selectedStatus?.name || '',\n\t\t\t\t\tonSubmitKey: ''\n\t\t\t\t}\n\t\t\t]}\n\t\t\tonSuccess={(response, resetForm): any => {\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: 'Status has been successfully updated',\n\t\t\t\t\tvariant: 'success'\n\t\t\t\t});\n\t\t\t\tonClose();\n\t\t\t}}\n\t\t\tonError={(error, resetForm): any => {\n\t\t\t\t// resetForm();\n\t\t\t\tshowNotification({\n\t\t\t\t\tmessage: error?.response?.data?.message ?? 'Something went wrong',\n\t\t\t\t\tvariant: 'error'\n\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t{({ values, isSubmitting }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2 className=\"mb-4 text-xl font-bold\">Edit Status Name</h2>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tlabel={'Status Title'}\n\t\t\t\t\t\t\tlabelClasses=\"ml-6 text-xs font-light text-kgrey-welcome mb-2 block\"\n\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\tcomponent={KntInputField}\n\t\t\t\t\t\t\tplaceholder={'Type Status Title'}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tcharacterCount={values.title.length}\n\t\t\t\t\t\t\tcharacterLimit={MAX_STATUS_TITLE_CHARACTER}\n\t\t\t\t\t\t\tid=\"mail.com\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"mt-4 flex items-center justify-end\">\n\t\t\t\t\t\t\t<Button variant=\"outlined\" type=\"button\" onClick={onClose}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"!ml-4\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tdisabled={!values.title || isSubmitting}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{isSubmitting && <Loader tiled />}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EntityForm.Main>\n\t);\n}\n\nexport default StatusCreateForm;\n","import React, { useState } from 'react';\nimport { KntTwilioStyle } from '../../../shared/services';\nimport { AsyncSelect, Loader } from '../../../shared/components';\nimport { StatusType } from './Status';\nimport { useAppState } from '../../../shared/state';\nimport { Button } from '../../../shared/components/Elements';\nimport { useCaseController } from '../hooks/useCaseController';\n\nexport function StatusChangeMobile() {\n\tconst { isStaff, statusChangePayload, companyId, setStatusChangePayload } = useAppState();\n\tconst [loading, setLoading] = useState(false);\n\tconst { changeCaseStatus } = useCaseController();\n\tconst [nextStatus, setNextStatus] = useState<null | StatusType>(null);\n\n\tconst onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tawait changeCaseStatus({\n\t\t\t\tprevStatusId: statusChangePayload?.prevStatus as number,\n\t\t\t\tnextStatusId: nextStatus?.id as number,\n\t\t\t\tisStaffCase: isStaff,\n\t\t\t\tsourceIndex: statusChangePayload?.sourceIndex,\n\t\t\t\tdestinationIndex: 0,\n\t\t\t\tentityId: Number(statusChangePayload?.entityId),\n\t\t\t\tsearchEntityId: statusChangePayload?.searchEntityId,\n\t\t\t\tisDragging: false\n\t\t\t});\n\t\t\tsetLoading(false);\n\t\t\tcloseStatusChangePopup();\n\t\t} catch (e) {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst closeStatusChangePopup = () => setStatusChangePayload(null);\n\n\treturn (\n\t\t<form onSubmit={onSubmit}>\n\t\t\t<h2 className=\"mb-4 text-xl font-bold\">Status Change</h2>\n\n\t\t\t{/*@ts-ignore*/}\n\t\t\t<AsyncSelect\n\t\t\t\tcustomStylesProps={KntTwilioStyle}\n\t\t\t\tname=\"status_change\"\n\t\t\t\tplaceholder=\"Select Status\"\n\t\t\t\toptionValue=\"id\"\n\t\t\t\toptionLabel=\"title\"\n\t\t\t\tloadOptionsKey=\"\"\n\t\t\t\tisSearchable\n\t\t\t\tisClearable\n\t\t\t\talwaysRefetch\n\t\t\t\tvalue={nextStatus}\n\t\t\t\t// customStyles=\"KntTwilioStyle\"\n\t\t\t\tloadOptionsOnMenuOpen\n\t\t\t\treverse={true}\n\t\t\t\tloadOptionsUrl={`/${companyId}/my/company/case_statuses/`}\n\t\t\t\tloadOptionsParams={(search: string) => ({\n\t\t\t\t\textra: {\n\t\t\t\t\t\tsearch,\n\t\t\t\t\t\tis_staff: !isStaff ? 'false' : 'true'\n\t\t\t\t\t}\n\t\t\t\t})}\n\t\t\t\tisOptionDisabled={(option: StatusType) => option.id === statusChangePayload?.prevStatus}\n\t\t\t\tonChange={(option: StatusType) => setNextStatus(option)}\n\t\t\t/>\n\n\t\t\t<div className=\"mt-4 flex items-center justify-end\">\n\t\t\t\t<Button variant=\"outlined\" type=\"button\" onClick={closeStatusChangePopup}>\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\"!ml-4\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisabled={loading || !nextStatus}\n\t\t\t\t>\n\t\t\t\t\tChange\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t{loading && <Loader tiled />}\n\t\t</form>\n\t);\n}\n","/** @jsxImportSource @emotion/react */\nimport React, { useEffect } from 'react';\nimport { useAppState } from 'shared/state';\nimport { Status, StatusType } from './components/Status';\nimport useDimensions from 'react-use-dimensions';\nimport { css } from '@emotion/react';\nimport EntityContainer from 'modules/entity/containers';\nimport { StatusLoader } from 'shared/components/Loaders';\nimport Grow from '@material-ui/core/Grow';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DayJsUtils from '@date-io/dayjs';\nimport { useUnreadCaseTab } from 'shared/hooks';\nimport sortBy from 'lodash/sortBy';\nimport { Helmet } from 'react-helmet';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { ConfirmModal, ErrorBoundary } from 'shared/components';\nimport config from 'config';\nimport { useCaseController } from './hooks/useCaseController';\nimport { storage } from '../../shared/services';\nimport { isMobile } from 'react-device-detect';\nimport { ConfirmationStatusesForm, StatusCreateButton } from './components';\nimport { WhiteModal } from '../../shared/components/Elements';\nimport StatusEditForm from './components/StatusEditForm';\nimport { useCaseLoadingLogics, useScrollToMostLeftUnread, useStatusHeaderMenu } from './hooks';\nimport { StatusChangeMobile } from './components/StatusChangeMobile';\nimport { StatusPriorityMessagePopup } from '../../shared/components/Chat/components';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { IRootState } from '../../shared/interfaces';\nimport { isThereAnySearchOrFilterMatchingCase } from './helpers';\n\nfunction CasesInner() {\n\tconst {\n\t\tsetPageType,\n\t\tcaseType,\n\t\tselectedCaseFilter,\n\t\tsetSelectedStatus,\n\t\tselectedStatus,\n\t\tstatusChangePayload,\n\t\tsetStatusChangePayload,\n\t\tisPermitted,\n\t\tsearchQuery\n\t} = useAppState();\n\tconst [casePageRef, { height: casePageHeight }, node] = useDimensions();\n\tconst {\n\t\tcompanyId,\n\t\tsetSearchQuery,\n\t\ttoggleChatPanel,\n\t\tstatusPriorityMessagePopup,\n\t\tsetStatusPriorityMessagePopup,\n\t\tisDarkMode\n\t} = useAppState();\n\tconst { unreadCasesQuantity, isHidden } = useUnreadCaseTab();\n\tconst { onStatusDragEnd, fetchCasesUnreadCount } = useCaseController();\n\tconst { deleteStatusHandler, statusDeleteLoader, markAllReadHandler, markAllReadLoader } =\n\t\tuseStatusHeaderMenu();\n\n\tconst cases = useSelector((state: IRootState) => state?.entity?.cases);\n\n\t//Cases loading general logics\n\tuseCaseLoadingLogics();\n\n\t//Scroll to Left Most Unread\n\tuseScrollToMostLeftUnread();\n\n\tconst parsedSelectedCaseFromLS = JSON.parse(storage.get('selectedCaseFilter') || '{}')[caseType];\n\tconst selectedFilterTemplate = selectedCaseFilter[caseType] || parsedSelectedCaseFromLS;\n\n\tuseEffect(() => {\n\t\tsetPageType(true);\n\t\treturn () => {\n\t\t\tsetPageType(false);\n\t\t};\n\t}, [setPageType]);\n\n\t//Reset search When we leave Case Messages page\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tsetSearchQuery('');\n\t\t\ttoggleChatPanel(false);\n\t\t};\n\t}, []);\n\n\t//Load Status unread cases count\n\tuseEffect(() => {\n\t\tif (companyId) {\n\t\t\t(async () => {\n\t\t\t\tawait fetchCasesUnreadCount();\n\t\t\t})();\n\t\t}\n\t}, [companyId, caseType]);\n\n\tconst closeEditStatusModal = () => setSelectedStatus(null);\n\tconst closeMobileStatusChangePopup = () => setStatusChangePayload(null);\n\tconst closeStatusPriorityMessagePopup = () => setStatusPriorityMessagePopup(null);\n\n\treturn (\n\t\t<MuiPickersUtilsProvider utils={DayJsUtils}>\n\t\t\t<div\n\t\t\t\tref={casePageRef}\n\t\t\t\tclassName={clsx(\n\t\t\t\t\t'cases-page-wrapper flex h-full w-full flex-col pl-2 pb-1 pt-2 lg:pl-7 lg:pt-5',\n\t\t\t\t\t{ 'cases-page-wrapper-dark': isDarkMode }\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{(!isHidden || unreadCasesQuantity === 0) && (\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<title>KENNEKT | Cases</title>\n\t\t\t\t\t</Helmet>\n\t\t\t\t)}\n\t\t\t\t{companyId ? (\n\t\t\t\t\t<EntityContainer.All\n\t\t\t\t\t\tentity={'statuses'}\n\t\t\t\t\t\tname={`AllStatuses-${companyId}`}\n\t\t\t\t\t\turl={`/${companyId}/my/company/case_statuses/`}\n\t\t\t\t\t\treverse={true}\n\t\t\t\t\t\tparams={{\n\t\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\t\tis_staff: caseType === config.STAFF ? 'true' : 'false'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdataKey={(data: any) => data}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({ items, isFetched, meta }) => {\n\t\t\t\t\t\t\tconst statuses = items.map((item: any) => item) as StatusType[];\n\n\t\t\t\t\t\t\tconst isMatchingFilters = isThereAnySearchOrFilterMatchingCase({\n\t\t\t\t\t\t\t\tstatuses,\n\t\t\t\t\t\t\t\tcases,\n\t\t\t\t\t\t\t\tcaseType,\n\t\t\t\t\t\t\t\tsearchQuery,\n\t\t\t\t\t\t\t\tselectedFilterTemplate\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<DragDropContext onDragEnd={onStatusDragEnd}>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t'case-statuses-scroll-container relative flex h-full flex-grow overflow-hidden overflow-x-auto bg-white dark:bg-kdark'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t\t\t\t\theight: ${casePageHeight - (isMobile ? 8 : 20)}px;\n\t\t\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Droppable\n\t\t\t\t\t\t\t\t\t\t\tdroppableId={config.STATUS_DROPPABLE_ID}\n\t\t\t\t\t\t\t\t\t\t\tdirection=\"horizontal\"\n\t\t\t\t\t\t\t\t\t\t\ttype={config.STATUS_DROPPABLE_TYPE}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{(provided) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"statuses-wrapper flex\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(selectedFilterTemplate?.filter_json?.status?.length\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? sortBy(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedFilterTemplate?.filter_json?.status,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'order_number'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: statuses\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t).map((item: StatusType, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grow\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tin={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={item.id || index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...{ timeout: 500 * (index + 1) }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Status status={item} key={item.id} index={index} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Status Create Form */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isFetched && isPermitted && isMatchingFilters ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StatusCreateButton />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t\t\t\t{/*Show Statuses loading skeletons*/}\n\t\t\t\t\t\t\t\t\t\t{!isFetched && (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{[...Array(6)].map((item: any, index: number) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grow in={true} key={index} {...{ timeout: 300 * (index + 1) }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={'mr-4'}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StatusLoader />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{isFetched && !isMatchingFilters && selectedFilterTemplate && (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex w-full items-center justify-center text-xl dark:text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\tNo matching case is found\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t{/*Edit Status Name*/}\n\t\t\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\t\t\thandleModalOpen={closeEditStatusModal}\n\t\t\t\t\t\t\t\t\t\t\topen={selectedStatus?.type === 'edit' ? !!selectedStatus : false}\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth={446}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<StatusEditForm onClose={closeEditStatusModal} />\n\t\t\t\t\t\t\t\t\t\t</WhiteModal>\n\n\t\t\t\t\t\t\t\t\t\t{/*Delete Status*/}\n\t\t\t\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\t\t\t\tfeatureHandler={deleteStatusHandler}\n\t\t\t\t\t\t\t\t\t\t\tisOpen={Boolean(selectedStatus?.type === 'delete' ? !!selectedStatus : false)}\n\t\t\t\t\t\t\t\t\t\t\ttoggleHandler={closeEditStatusModal}\n\t\t\t\t\t\t\t\t\t\t\ttitle={`Are You Sure To Delete ${selectedStatus?.name.toUpperCase()} Status?`}\n\t\t\t\t\t\t\t\t\t\t\thasLoader\n\t\t\t\t\t\t\t\t\t\t\tisLoading={statusDeleteLoader}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t{/*Delete Status*/}\n\t\t\t\t\t\t\t\t\t\t<ConfirmModal\n\t\t\t\t\t\t\t\t\t\t\tfeatureHandler={markAllReadHandler}\n\t\t\t\t\t\t\t\t\t\t\tisOpen={Boolean(\n\t\t\t\t\t\t\t\t\t\t\t\tselectedStatus?.type === 'mark_all_read' ? !!selectedStatus : false\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\ttoggleHandler={closeEditStatusModal}\n\t\t\t\t\t\t\t\t\t\t\ttitle={`${selectedStatus?.name} Status: Mark All Cases As Read?`}\n\t\t\t\t\t\t\t\t\t\t\thasLoader\n\t\t\t\t\t\t\t\t\t\t\tisLoading={markAllReadLoader}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t{/* Add Confirmation Buttons */}\n\t\t\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\t\t\thandleModalOpen={closeEditStatusModal}\n\t\t\t\t\t\t\t\t\t\t\topen={selectedStatus?.type === 'add_buttons' ? !!selectedStatus : false}\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth={446}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<ConfirmationStatusesForm closeEditStatusModal={closeEditStatusModal} />\n\t\t\t\t\t\t\t\t\t\t</WhiteModal>\n\n\t\t\t\t\t\t\t\t\t\t{/* Status Change Popup for Mobile */}\n\t\t\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\t\t\thandleModalOpen={closeMobileStatusChangePopup}\n\t\t\t\t\t\t\t\t\t\t\topen={!!statusChangePayload}\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth={446}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<StatusChangeMobile />\n\t\t\t\t\t\t\t\t\t\t</WhiteModal>\n\n\t\t\t\t\t\t\t\t\t\t{/* Priority and Status Message Popup */}\n\t\t\t\t\t\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\t\t\t\t\t\thandleModalOpen={closeStatusPriorityMessagePopup}\n\t\t\t\t\t\t\t\t\t\t\topen={!!statusPriorityMessagePopup}\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth={446}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<StatusPriorityMessagePopup onClose={closeStatusPriorityMessagePopup} />\n\t\t\t\t\t\t\t\t\t\t</WhiteModal>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</DragDropContext>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</EntityContainer.All>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t);\n}\n\nexport default function Cases() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<CasesInner />\n\t\t</ErrorBoundary>\n\t);\n}\n"],"names":["StatusHeaderDots","statusId","name","isConfirmationRequired","useStatusHeaderMenu","open","anchorEl","handleClick","handleCloseMenu","useAppState","setSelectedStatus","isAdmin","unreadCasesCountByStatus","className","onClick","id","keepMounted","onClose","MenuItem","type","control","color","checked","label","labelPlacement","StatusHeaderInner","totalCount","draggableHandleProps","selectedCaseFilter","caseType","setStatusReverseState","statusReverseState","settingsData","companyId","searchQuery","saveCasesReverseData","useAxios","url","method","dynamicValues","cb","success","data","args","error","fetchData","handleReverseState","payload","settings_json","cases_reverse_data","values","storage","JSON","stringify","isFilterNotSelected","isThereUnreadCases","isSearchEnabled","length","showUnreadCount","clsx","CASES_UNREAD_BADGE_COUNT","IconButton","size","StatusHeader","props","isCompact","CaseItemLoader","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","StatusLoader","CaseItemInner","caseData","isDragging","toggleCaseDetailsOpen","caseRef","useRef","unreadMessagesCount","department","sub_department","caseTitle","title","last_message_type","last_message_text","last_message_author","case_number","last_message_time","caseId","status","priority","draftMessage","draft_message","hasLinkedCase","has_linked_case","relatedTo","related_to_id","recurringId","recurring_id","lastReadMessage","last_read_message","assigneeIds","assignee_ids","hasUnread","useMemo","ref","CaseItemMarkup","pin_time","CaseItem","SearchCaseItemInner","case_","pinned_message","text","from_user","entity_id","searchedMessageId","SearchCaseItem","getStyle","draggableStyle","virtualStyle","combined","marginBottom","DragItem","provided","item","style","isFetched","draggableProps","dragHandleProps","innerRef","DndRow","React","items","index","itemsData","draggableId","toString","getDragId","snapshot","areEqual","ListComponent","loadMore","hasNextPage","resetCacheKeys","windowHeight","useWindowSize","infiniteLoaderRef","hasMountedRef","useEffect","current","resetloadMoreItemsCache","droppableId","mode","config","renderClone","rubric","source","itemCount","isItemLoaded","loadMoreItems","onItemsRendered","isMobile","itemSize","outerRef","itemData","CaseSkeletons","Array","map","idx","NoCases","StatusInner","query","useQueryParams","reloadCases","reloadStatusId","computedPage","forceUpdate","useState","page","setPage","searchPage","setSearchPage","isPermitted","isDarkMode","useDimensions","statusBodyRef","statusBodyHeight","useCaseExtraParams","extraParams","casesUrl","selectedFilterTemplate","entityName","getCaseEntityName","currentStatusCaseEntity","useGetEntity","entity","entityId","all","currentStatusReverseState","useCaseDetailsToggle","caseDetailsOpen","closeCaseDetailModal","useStatusCaseList","parseInt","useCallback","hasToLoadMore","prev","params","extra","limit","appendData","cancelField","replaceIds","isCancellable","meta","metaCurrentPage","current_page","last_page","mappedItems","reduce","acc","curr","reversed_date","dayjs","unix","sortedItems","sortChatList","isDragDisabled","hidden","count","is_confirmation_required","css","isSafari","handleModalOpen","Boolean","minWidth","maxWidth","scrollable","Status","showNotification","useNotistack","entityObjectInReduxState","useSelector","state","statusIds","statuses","ids","primaryKey","sendAsFormData","normalizeData","fields","required","onSubmitKey","value","onSuccess","response","resetForm","message","variant","onError","isSubmitting","labelClasses","component","KntInputField","placeholder","characterLimit","MAX_STATUS_TITLE_CHARACTER","characterCount","disabled","tiled","StatusCreateButton","visibleForm","setVisibleForm","toggleForm","onClickHandler","ConfirmationStatusesForm","closeEditStatusModal","isStaff","selectedStatus","currentSelectedStatus","find","st","confirmed","onSubmitValue","not_confirmed","AsyncSelectJs","customStylesProps","KntTwilioStyle","optionLabel","optionValue","isSearchable","isCached","isClearable","reverse","loadOptionsUrl","loadOptionsParams","search","is_staff","isOptionDisabled","option","loadOptionsKey","autoFocus","StatusChangeMobile","statusChangePayload","setStatusChangePayload","loading","setLoading","changeCaseStatus","useCaseController","nextStatus","setNextStatus","onSubmit","e","preventDefault","prevStatusId","prevStatus","nextStatusId","isStaffCase","sourceIndex","destinationIndex","Number","searchEntityId","closeStatusChangePopup","alwaysRefetch","loadOptionsOnMenuOpen","onChange","CasesInner","setPageType","casePageRef","casePageHeight","setSearchQuery","toggleChatPanel","statusPriorityMessagePopup","setStatusPriorityMessagePopup","useUnreadCaseTab","unreadCasesQuantity","isHidden","onStatusDragEnd","fetchCasesUnreadCount","deleteStatusHandler","statusDeleteLoader","markAllReadHandler","markAllReadLoader","cases","useCaseLoadingLogics","useScrollToMostLeftUnread","parsedSelectedCaseFromLS","parse","closeMobileStatusChangePopup","closeStatusPriorityMessagePopup","M","utils","DayJsUtils","Helmet","dataKey","isMatchingFilters","isThereAnySearchOrFilterMatchingCase","onDragEnd","direction","droppableProps","filter_json","sortBy","Grow","in","timeout","StatusEditForm","featureHandler","isOpen","toggleHandler","toUpperCase","hasLoader","isLoading","Cases"],"sourceRoot":""}