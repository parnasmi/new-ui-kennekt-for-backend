{"version":3,"file":"static/js/6688.d3c56d16.chunk.js","mappings":"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","sources":["pages/Csv/contexts/CSVContext.tsx","pages/Csv/hooks/useCsvManagement.ts","pages/Csv/hooks/useCsvList.ts","pages/Csv/hooks/useCsvView.ts","pages/Csv/components/CsvExample.tsx","pages/Csv/components/CsvUploadForm.tsx","pages/Csv/components/CsvSearch.tsx","pages/Csv/Csv.tsx","pages/Csv/index.ts"],"sourcesContent":["import React, { createContext, useReducer, useContext, useCallback } from 'react';\n\ntype ContextType = {\n\tsearchQuery: string;\n\tsetSearchQuery: (query: string | null) => void;\n\tisStaff: string;\n\tsetIsStaff: (type: string) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexport const CSVManagementContext = createContext<ContextType>(null!);\ntype setSearchQuery = {\n\ttype: 'SET_SEARCH_QUERY';\n\tpayload: string | null;\n};\n\ntype StateType = {\n\tsearchQuery: string | null;\n};\n\ntype Actions = setSearchQuery;\n\nconst reducer = (state: StateType, action: Actions): StateType => {\n\tswitch (action.type) {\n\t\tcase 'SET_SEARCH_QUERY': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchQuery: action.payload\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport function CSVManagementContextProvider({\n\tchildren\n}: React.PropsWithChildren<Record<string, unknown>>) {\n\tconst [state, dispatch] = useReducer(reducer, { searchQuery: null });\n\n\tconst setSearchQuery = useCallback((query: string | null) => {\n\t\tdispatch({ type: 'SET_SEARCH_QUERY', payload: query });\n\t}, []);\n\n\t// eslint-disable-next-line react/jsx-no-constructed-context-values\n\tconst contextValues = {\n\t\tsearchQuery: state.searchQuery,\n\t\tsetSearchQuery\n\t} as ContextType;\n\n\treturn (\n\t\t<CSVManagementContext.Provider value={contextValues}>{children}</CSVManagementContext.Provider>\n\t);\n}\n\nexport const useCSVManagementContext = () => {\n\tconst csvManagementContext = useContext(CSVManagementContext);\n\n\tif (!csvManagementContext)\n\t\tthrow new Error('useCSVManagementContext must be used within the CSVManagementContextProvider');\n\treturn csvManagementContext;\n};\n","import { useState } from 'react';\nimport { useRouter, useUnreadCaseTab } from 'shared/hooks';\n\nexport function useCsvManagement() {\n\tconst [uploadLink, setUploadLink] = useState('');\n\n\tconst { match, location } = useRouter();\n\tconst { url, path } = match;\n\tconst { unreadCasesQuantity, isHidden } = useUnreadCaseTab('CSV Management');\n\n\tconst toggleCsvUpload = (uploadLink = '') => {\n\t\tsetUploadLink(uploadLink);\n\t};\n\n\treturn {\n\t\turl,\n\t\tpath,\n\t\tunreadCasesQuantity,\n\t\tisHidden,\n\t\ttoggleCsvUpload,\n\t\tuploadLink,\n\t\tlocation\n\t};\n}\n","import { useEntityActionPopup, useNotistack, usePageChangeAfterEntityDelete } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\nimport { formRequest } from 'modules/entity/actions';\nimport { useDispatch } from 'react-redux';\nimport { CSVType } from '../types';\n\nexport function useCSVList() {\n\tconst { companyId } = useAppState();\n\tconst dispatch = useDispatch();\n\tconst { showNotification } = useNotistack();\n\tconst {\n\t\tvisible: deleteVisible,\n\t\tshowVisible: showDeleteVisible,\n\t\tloading: deleteLoading,\n\t\ttoggleLoading: toggleDeleteLoading,\n\t\tclosePopup: closeDeletePopup\n\t} = useEntityActionPopup<CSVType>();\n\n\tconst { forwardToPreviousPage } = usePageChangeAfterEntityDelete({\n\t\tpageKey: 'page',\n\t\tentity: 'csv-list',\n\t\tentityName: 'AllCsvList'\n\t});\n\n\tconst handleCsvDelete = (csv: CSVType) => {\n\t\t//show loader\n\t\ttoggleDeleteLoading();\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'csv-list',\n\t\t\t\tname: 'AllCsvList',\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: `/${companyId}/my/company/imports/${csv.id}/`,\n\t\t\t\tdeleteData: true,\n\t\t\t\tid: csv.id,\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tforwardToPreviousPage();\n\t\t\t\t\t\tshowNotification({ message: 'Successfully deleted', variant: 'success' });\n\t\t\t\t\t},\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {\n\t\t\t\t\t\ttoggleDeleteLoading();\n\t\t\t\t\t\tcloseDeletePopup();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id',\n\t\t\t\tvalues: {}\n\t\t\t})\n\t\t);\n\t};\n\n\tconst deleteCSVHandler = () => () => handleCsvDelete(deleteVisible!);\n\n\treturn {\n\t\tdeleteLoading,\n\t\tdeleteCSVHandler,\n\t\tshowDeleteVisible,\n\t\tcloseDeletePopup,\n\t\tdeleteVisible\n\t};\n}\n","import { useEntityActionPopup, useNotistack, useRouter } from 'shared/hooks';\nimport { useAppState } from 'shared/state';\nimport { formRequest } from 'modules/entity/actions';\nimport { useDispatch } from 'react-redux';\nimport { CSVViewType } from '../types';\n\nexport function useCsvView() {\n\tconst { companyId } = useAppState();\n\tconst dispatch = useDispatch();\n\tconst { showNotification } = useNotistack();\n\tconst { params } = useRouter();\n\tconst {\n\t\tvisible: deleteVisible,\n\t\tshowVisible: showDeleteVisible,\n\t\tloading: deleteLoading,\n\t\ttoggleLoading: toggleDeleteLoading,\n\t\tclosePopup: closeDeletePopup\n\t} = useEntityActionPopup<CSVViewType>();\n\n\tconst {\n\t\tvisible: editVisible,\n\t\tshowVisible: showEditVisible,\n\t\tclosePopup: closeEditPopup\n\t} = useEntityActionPopup<CSVViewType>();\n\n\tconst csvId = parseInt((params as { csvId: string })?.csvId);\n\n\tconst handleClientDelete = (csvEmployee: CSVViewType) => {\n\t\t//show loader\n\t\ttoggleDeleteLoading();\n\t\tdispatch(\n\t\t\tformRequest({\n\t\t\t\tentity: 'csvEmployees',\n\t\t\t\tname: `AllCsvEmployees`,\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: `/${companyId}/my/company/imports/${csvId}/data/${csvEmployee.id}/`,\n\t\t\t\tdeleteData: true,\n\t\t\t\tid: csvEmployee.id,\n\t\t\t\tcb: {\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tshowNotification({ message: 'Successfully deleted', variant: 'success' });\n\t\t\t\t\t},\n\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\tshowNotification({ message: 'Something went wrong', variant: 'error' });\n\t\t\t\t\t},\n\t\t\t\t\tfinally: () => {\n\t\t\t\t\t\ttoggleDeleteLoading();\n\t\t\t\t\t\tcloseDeletePopup();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparams: {},\n\t\t\t\tprimaryKey: 'id',\n\t\t\t\tvalues: {}\n\t\t\t})\n\t\t);\n\t};\n\n\treturn {\n\t\tdeleteLoading,\n\t\thandleClientDelete,\n\t\tshowDeleteVisible,\n\t\tcloseDeletePopup,\n\t\tdeleteVisible,\n\t\teditVisible,\n\t\tshowEditVisible,\n\t\tcloseEditPopup\n\t};\n}\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow\n} from 'shared/components/Elements';\n\ntype Props = {\n\tisClient: boolean;\n};\nexport function CsvExample({ isClient }: Props) {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<TableContainer>\n\t\t\t<Table aria-label=\"simple table\">\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t{isClient && <TableCell>{t('client_business_name')}*</TableCell>}\n\n\t\t\t\t\t\t<TableCell>{`${t('first_name')}(${t('required_lower')})`}</TableCell>\n\t\t\t\t\t\t<TableCell>{`${t('last_name')}(${t('required_lower')})`}</TableCell>\n\t\t\t\t\t\t<TableCell>{`${t('email')}(${t('required_lower')})`}</TableCell>\n\t\t\t\t\t\t<TableCell>{`${t('phone')}(${t('required_lower')})`}</TableCell>\n\t\t\t\t\t\t<TableCell>{`${t('role')}(${t('required_lower')})`}</TableCell>\n\t\t\t\t\t\t<TableCell>{`${t('admin_privilage')}(${t('required_lower')})`}</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t{isClient && (\n\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t{t('example_business_name')}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<TableCell>John</TableCell>\n\t\t\t\t\t\t<TableCell>Doe</TableCell>\n\t\t\t\t\t\t<TableCell>john.doe@example.com</TableCell>\n\t\t\t\t\t\t<TableCell>1-541-754-3010</TableCell>\n\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t{t('admin')} | {t('manager')} | {t('member')} ({t('please_put_one')})\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t{t('yes')} | {t('no')}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t);\n}\n","/* eslint-disable react/jsx-no-target-blank */\n/* eslint react/no-multi-comp:0, no-console:0, no-alert: 0 */\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { ErrorBoundary } from 'shared/components';\nimport Upload from 'rc-upload';\n\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Papa from 'papaparse';\nimport { HtmlParser } from 'shared/components';\nimport isEmpty from 'lodash/isEmpty';\nimport { LinearProgress } from '@material-ui/core';\nimport { csvFileValidator, csvTools, parseNAsyncValidate } from 'shared/services';\nimport { CsvExample } from './CsvExample';\nimport { useAppState } from 'shared/state';\nimport { useLoadAll, useNotistack } from 'shared/hooks';\nimport config from 'config';\nimport { useAuth } from 'modules/auth/hooks/useAuth';\nimport { WhiteModal } from 'shared/components/Elements';\nimport { BsDownload } from 'react-icons/bs';\nimport { FaRegHandPointer } from 'react-icons/fa';\nimport { useTranslation } from 'react-i18next';\n\nconst { employeeCSVConfig, clientCSVConfig } = csvTools;\nconst useStylesProgress = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t\t'& > * + *': {\n\t\t\tmarginTop: theme.spacing(2)\n\t\t}\n\t}\n}));\n\ntype Props = {\n\tonSuccess: () => void;\n\turl: string;\n\tfromStaffManagement?: boolean;\n};\n\nfunction CsvUploadFormInner({ onSuccess, url, fromStaffManagement = false }: Props) {\n\tconst { t } = useTranslation();\n\tconst { companyId } = useAppState();\n\tconst [loadingImage, setLoadingImage] = useState(false);\n\tconst [imageUrl, setImageUrl] = useState(null);\n\tconst classesProgress = useStylesProgress();\n\tconst [showModal, setShowModal] = useState(false);\n\tconst [csvData, setCsvData] = useState('');\n\tconst [csvPrimaryCheckError, setCsvPrimaryCheckError] = useState<null | string>(null);\n\tconst { showNotification } = useNotistack();\n\tconst { token } = useAuth();\n\tconst { reloadEntityAll } = useLoadAll();\n\n\tconsole.log('url', url);\n\n\tconst CSVConfig = url === 'import-clients' ? clientCSVConfig : employeeCSVConfig;\n\tconst configHeaderLength = url === 'import-clients' ? 7 : 6;\n\tconst moreTxt = t('csv_more_text_alert');\n\tconst lessTxt = t('csv_less_text_alert');\n\tconst importType = url === 'import-clients' ? 'client' : 'staff';\n\n\tconst toggleExamplePopup = () => setShowModal((prev) => !prev);\n\n\tconst fileOnStart = (file: any) => {\n\t\tsetImageUrl(file.name);\n\t\tsetLoadingImage(true);\n\n\t\tif (file.name.slice(-3).toLowerCase() === 'csv') {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tPapa.parse(file, {\n\t\t\t\t\tcomplete: (parsedOutput) => {\n\t\t\t\t\t\tconst { data } = parsedOutput;\n\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\tconst dataColumnLength = data[0].length;\n\t\t\t\t\t\t//Check if there required length of columns. If it passes than we validate fields.\n\t\t\t\t\t\tif (dataColumnLength === configHeaderLength) {\n\t\t\t\t\t\t\t// we do csv validation\n\t\t\t\t\t\t\t// CSVFileValidator(file, CSVConfig).then((csvData) => {\n\t\t\t\t\t\t\tcsvFileValidator(file, CSVConfig).then((csvData) => {\n\t\t\t\t\t\t\t\tif (isEmpty(csvData.inValidMessages)) {\n\t\t\t\t\t\t\t\t\t//Before uploading the csv we must validate email through\n\t\t\t\t\t\t\t\t\t// backend whether users are already staff || client in the business\n\t\t\t\t\t\t\t\t\tcsvData &&\n\t\t\t\t\t\t\t\t\t\tparseNAsyncValidate({\n\t\t\t\t\t\t\t\t\t\t\tcsvData,\n\t\t\t\t\t\t\t\t\t\t\tcompanyId,\n\t\t\t\t\t\t\t\t\t\t\tresolve,\n\t\t\t\t\t\t\t\t\t\t\treject,\n\t\t\t\t\t\t\t\t\t\t\tsetCsvData,\n\t\t\t\t\t\t\t\t\t\t\ttype: importType,\n\t\t\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\t\t\tsetLoadingImage\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsetCsvData('');\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconst errors = csvData.inValidMessages\n\t\t\t\t\t\t\t\t\t\t.map((message: any) =>\n\t\t\t\t\t\t\t\t\t\t\tmessage.startsWith('<div') ? message : `<div class=\"red\">${message}</div>`\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t.join('');\n\t\t\t\t\t\t\t\t\tsetCsvData(errors);\n\t\t\t\t\t\t\t\t\treject(new Error('Invalid csv file'));\n\t\t\t\t\t\t\t\t\tsetLoadingImage(false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (dataColumnLength > configHeaderLength) {\n\t\t\t\t\t\t\t\tsetCsvPrimaryCheckError(moreTxt);\n\t\t\t\t\t\t\t} else if (dataColumnLength < configHeaderLength) {\n\t\t\t\t\t\t\t\tsetCsvPrimaryCheckError(lessTxt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treject(new Error('Invalid csv file'));\n\t\t\t\t\t\t\tsetLoadingImage(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tsetLoadingImage(false);\n\t\t\tshowNotification({\n\t\t\t\tvariant: 'error',\n\t\t\t\tmessage: 'Invalid file type. Download please sample of file csv'\n\t\t\t});\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t// eslint-disable-next-line no-unused-vars\n\tconst fileOnSuccess = (file: any) => {\n\t\tsetLoadingImage(false);\n\t\tsetTimeout(() => {\n\t\t\treloadEntityAll({\n\t\t\t\turl: `/${companyId}/my/company/imports/`,\n\t\t\t\tentity: 'csv-list',\n\t\t\t\tname: 'AllCsvList',\n\t\t\t\tparams: {\n\t\t\t\t\tpage: 1,\n\t\t\t\t\tlimit: 10\n\t\t\t\t}\n\t\t\t});\n\t\t\tonSuccess();\n\t\t\tif (fromStaffManagement) {\n\t\t\t\tshowNotification({\n\t\t\t\t\tvariant: 'success',\n\t\t\t\t\tmessage: 'Please wait a while for csv file finishes processing.'\n\t\t\t\t});\n\t\t\t}\n\t\t}, 300);\n\t};\n\n\treturn (\n\t\t<div className=\"case-form case-form_staff\">\n\t\t\t<div className=\"flex-center-y mb-5\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={toggleExamplePopup}\n\t\t\t\t\tclassName=\"flex-center-y text-primary transition hover:text-primary-dark\"\n\t\t\t\t>\n\t\t\t\t\t<span className=\"mr-2\">{t('example')}</span>\n\t\t\t\t\t<FaRegHandPointer />\n\t\t\t\t</button>\n\t\t\t\t<span className=\"mx-2\">|</span>\n\t\t\t\t<a\n\t\t\t\t\thref={`${\n\t\t\t\t\t\turl === 'import-clients'\n\t\t\t\t\t\t\t? 'https://djangoapp-konnex-crm.s3.us-east-2.amazonaws.com/files/kennekt_client.csv'\n\t\t\t\t\t\t\t: 'https://kennekt.com/files/kennekt_staff.csv'\n\t\t\t\t\t}`}\n\t\t\t\t\tdownload\n\t\t\t\t\tclassName=\"flex-center-y text-primary transition hover:text-primary-dark\"\n\t\t\t\t>\n\t\t\t\t\t<span className=\"mr-2\">{t('download_sample_csv_file')}</span>\n\t\t\t\t\t<BsDownload />\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<div className=\"mb-5\">\n\t\t\t\t<div className=\"uploader-section\">\n\t\t\t\t\t<div className=\"upload-file-styles-wrapper\">\n\t\t\t\t\t\t<div className=\"upload-file-styles\">\n\t\t\t\t\t\t\t<Upload\n\t\t\t\t\t\t\t\taccept=\".csv\"\n\t\t\t\t\t\t\t\tclassName=\"upload-file-styles\"\n\t\t\t\t\t\t\t\taction={`${config.API_ROOT}/${companyId}/${url}/`}\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tbeforeUpload={fileOnStart}\n\t\t\t\t\t\t\t\tonSuccess={fileOnSuccess}\n\t\t\t\t\t\t\t\tshowUploadList={false}\n\t\t\t\t\t\t\t\theaders={{\n\t\t\t\t\t\t\t\t\tAuthorization: 'Token ' + token\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" aria-label=\"file-attach\" className=\"mr-5\">\n\t\t\t\t\t\t\t\t\t<PublishIcon /> {t('upload_csv_file')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Upload>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{imageUrl !== null ? (\n\t\t\t\t\t\t\t<div className=\"my-4\">\n\t\t\t\t\t\t\t\t<p>{imageUrl}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t{loadingImage ? (\n\t\t\t\t\t\t<div className={classesProgress.root}>\n\t\t\t\t\t\t\t<LinearProgress className=\"loading-file\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{!isEmpty(csvData) && (\n\t\t\t\t<div className=\"mb-5 text-kred-pink\">\n\t\t\t\t\t{/*@ts-ignore*/}\n\t\t\t\t\t<HtmlParser text={csvData} />\n\t\t\t\t\t<div className=\"red mt-5\">\n\t\t\t\t\t\t<strong>{t('please_correct_and_upload')}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{csvPrimaryCheckError && (\n\t\t\t\t<div className=\"mb-5\">\n\t\t\t\t\t<div className=\"mt-5 text-sm text-kred-pink\">\n\t\t\t\t\t\t<strong>{csvPrimaryCheckError}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<WhiteModal handleModalOpen={toggleExamplePopup} open={showModal}>\n\t\t\t\t<CsvExample isClient={url === 'import-clients'} />\n\t\t\t</WhiteModal>\n\t\t\t<div className=\"case-form__submit-row\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"transition dark:bg-primary-300 dark:text-white dark:hover:bg-primary-200\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tonClick={onSuccess}\n\t\t\t\t>\n\t\t\t\t\t{t('close')}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport function CsvUploadForm(props: Props) {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<CsvUploadFormInner {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n","import React from 'react';\nimport { CgSearch } from 'react-icons/cg';\nimport { useCSVManagementContext } from '../contexts';\nimport { useTranslation } from 'react-i18next';\n\nexport function CsvSearch() {\n\tconst { searchQuery, setSearchQuery } = useCSVManagementContext();\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<div className=\"group-sidebar__search relative\">\n\t\t\t<input\n\t\t\t\ttype=\"search\"\n\t\t\t\tvalue={searchQuery}\n\t\t\t\tclassName={\n\t\t\t\t\t'group-sidebar__search-input w-full border-b outline-none md:w-36 ' +\n\t\t\t\t\t'border-kgrey-border-solid dark:border-white dark:text-white' +\n\t\t\t\t\t' pl-7 transition focus:border-primary dark:focus:border-primary' +\n\t\t\t\t\t' placeholder-[rgba(45, 45, 45, 0.3)] mb-3 pt-2 pb-2 dark:bg-kdark sm:mb-0'\n\t\t\t\t}\n\t\t\t\tplaceholder={t('search')}\n\t\t\t\tonChange={(e) => setSearchQuery(e.target.value)}\n\t\t\t/>\n\t\t\t<div className=\"absolute top-1/2 left-0 -translate-y-1/2\">\n\t\t\t\t<div className=\"text-kgrey\">\n\t\t\t\t\t<CgSearch />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { lazy, Suspense } from 'react';\nimport { StandardPageLayout } from '../../shared/layouts';\nimport { Helmet } from 'react-helmet';\nimport { SimpleBtn, WhiteModal } from '../../shared/components/Elements';\nimport { ErrorBoundary, Loader } from '../../shared/components';\nimport { Route, Switch } from 'react-router-dom';\nimport { useCsvManagement } from './hooks';\nimport { CSVManagementContextProvider } from './contexts';\nimport { CsvSearch, CsvUploadForm } from './components';\nimport { isMobile } from 'react-device-detect';\nimport { useAppState } from '../../shared/state';\nimport { useTranslation } from 'react-i18next';\n\nconst CSVList = lazy(() => import('./nestedPages/CSVList'));\nconst CSVDetails = lazy(() => import('./nestedPages/CSVDetails'));\n\nexport function Csv() {\n\tconst { path, unreadCasesQuantity, isHidden, toggleCsvUpload, uploadLink, location } =\n\t\tuseCsvManagement();\n\tconst { isAdmin } = useAppState();\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<StandardPageLayout>\n\t\t\t<div className=\"flex min-h-full max-w-full flex-grow flex-col lg:p-4\">\n\t\t\t\t{(!isHidden || unreadCasesQuantity === 0) && (\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<title>{'KENNEKT | CSV Management'}</title>\n\t\t\t\t\t</Helmet>\n\t\t\t\t)}\n\t\t\t\t<div className=\"mb-5 flex items-center justify-between\">\n\t\t\t\t\t<div className=\"flex w-full flex-wrap items-center justify-between\">\n\t\t\t\t\t\t<h2 className=\"mr-5 py-4 text-xl font-bold dark:text-white md:text-3xl\">\n\t\t\t\t\t\t\t{t('csv_management')}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<div className=\"flex w-full flex-col items-end sm:flex-row sm:items-center md:w-auto\">\n\t\t\t\t\t\t\t<CsvSearch />\n\t\t\t\t\t\t\t{!location.pathname.includes('view') && (\n\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t\t\t<SimpleBtn disabled={!isAdmin} onClick={() => toggleCsvUpload('import-employee')}>\n\t\t\t\t\t\t\t\t\t\t{!isMobile ? t('new_business_csv') : t('business_csv')}\n\t\t\t\t\t\t\t\t\t</SimpleBtn>\n\t\t\t\t\t\t\t\t\t<SimpleBtn disabled={!isAdmin} onClick={() => toggleCsvUpload('import-clients')}>\n\t\t\t\t\t\t\t\t\t\t{!isMobile ? t('new_client_csv') : t('client_csv')}\n\t\t\t\t\t\t\t\t\t</SimpleBtn>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<WhiteModal\n\t\t\t\t\t\thandleModalOpen={() => toggleCsvUpload('')}\n\t\t\t\t\t\topen={!!uploadLink}\n\t\t\t\t\t\tmaxWidth={446}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CsvUploadForm onSuccess={() => toggleCsvUpload('')} url={uploadLink} />\n\t\t\t\t\t</WhiteModal>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"relative flex max-w-full flex-grow flex-col\">\n\t\t\t\t\t<div className=\"relative flex-grow\">\n\t\t\t\t\t\t<Suspense fallback={<Loader tiled />}>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path={`${path}`} component={CSVList} />\n\t\t\t\t\t\t\t\t<Route exact path={`${path}/view/:csvId`} component={CSVDetails} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StandardPageLayout>\n\t);\n}\n\nexport function CsvManagement() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<CSVManagementContextProvider>\n\t\t\t\t<Csv />\n\t\t\t</CSVManagementContextProvider>\n\t\t</ErrorBoundary>\n\t);\n}\n","import { CsvManagement } from './Csv';\n\nexport default CsvManagement;\n"],"names":["CSVManagementContext","createContext","reducer","state","action","type","searchQuery","payload","CSVManagementContextProvider","children","useReducer","dispatch","setSearchQuery","useCallback","query","contextValues","Provider","value","useCSVManagementContext","csvManagementContext","useContext","Error","useCsvManagement","useState","uploadLink","setUploadLink","useRouter","match","location","url","path","useUnreadCaseTab","unreadCasesQuantity","isHidden","toggleCsvUpload","useCSVList","companyId","useAppState","useDispatch","showNotification","useNotistack","useEntityActionPopup","deleteVisible","visible","showDeleteVisible","showVisible","deleteLoading","loading","toggleDeleteLoading","toggleLoading","closeDeletePopup","closePopup","forwardToPreviousPage","usePageChangeAfterEntityDelete","pageKey","entity","entityName","deleteCSVHandler","csv","formRequest","name","method","id","deleteData","cb","success","message","variant","error","err","finally","params","primaryKey","values","useCsvView","editVisible","showEditVisible","closeEditPopup","csvId","parseInt","handleClientDelete","csvEmployee","CsvExample","isClient","t","useTranslation","component","scope","employeeCSVConfig","csvTools","clientCSVConfig","useStylesProgress","makeStyles","theme","root","width","marginTop","spacing","CsvUploadFormInner","onSuccess","fromStaffManagement","loadingImage","setLoadingImage","imageUrl","setImageUrl","classesProgress","showModal","setShowModal","csvData","setCsvData","csvPrimaryCheckError","setCsvPrimaryCheckError","token","useAuth","reloadEntityAll","useLoadAll","console","log","CSVConfig","configHeaderLength","moreTxt","lessTxt","importType","toggleExamplePopup","prev","className","onClick","href","download","accept","config","beforeUpload","file","slice","toLowerCase","Promise","resolve","reject","Papa","complete","parsedOutput","dataColumnLength","data","length","csvFileValidator","then","isEmpty","inValidMessages","parseNAsyncValidate","errors","map","startsWith","join","setTimeout","page","limit","showUploadList","headers","Authorization","Button","Publish","LinearProgress","text","handleModalOpen","open","CsvUploadForm","props","CsvSearch","placeholder","onChange","e","target","CSVList","lazy","CSVDetails","Csv","isAdmin","Helmet","pathname","includes","disabled","isMobile","maxWidth","Suspense","fallback","tiled","exact"],"sourceRoot":""}